2018-05-29 19:27:10 -Starting BootdoApplication on 62E1HONDYE22L4D with PID 6432 (E:\wyhgoback\bootdo\target\classes started by Administrator in E:\wyhgoback\bootdo)
2018-05-29 19:27:11 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-05-29 19:27:11 -The following profiles are active: dev
2018-05-29 19:27:12 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a9c38eb: startup date [Tue May 29 19:27:12 CST 2018]; root of context hierarchy
2018-05-29 19:27:12 -HV000001: Hibernate Validator 5.3.6.Final
2018-05-29 19:27:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-05-29 19:27:21 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9570aab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:21 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$89e46f5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:22 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:22 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:22 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$24833c58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:23 -Bean 'ehCacheCacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:23 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:23 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c5e7498] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3eb7a33f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:24 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:25 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache-core/2.5.3/ehcache-core-2.5.3.jar!/ehcache-failsafe.xml
2018-05-29 19:27:25 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:25 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-05-29 19:27:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-05-29 19:27:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:27:26 -Tomcat initialized with port(s): 80 (http)
2018-05-29 19:27:27 -Starting service [Tomcat]
2018-05-29 19:27:27 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-05-29 19:27:27 -Initializing Spring embedded WebApplicationContext
2018-05-29 19:27:27 -Root WebApplicationContext: initialization completed in 14902 ms
2018-05-29 19:27:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-05-29 19:27:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-05-29 19:27:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-05-29 19:27:28 -Mapping filter: 'requestContextFilter' to: [/*]
2018-05-29 19:27:28 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-05-29 19:27:28 -Filter xssFilter was not registered (disabled)
2018-05-29 19:27:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-05-29 19:27:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-05-29 19:27:29 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-05-29 19:27:29 -Mapping servlet: 'dispatcherServlet' to [/]
2018-05-29 19:27:32 -{dataSource-1} inited
2018-05-29 19:27:38 -ProcessEngine default created
2018-05-29 19:27:40 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a9c38eb: startup date [Tue May 29 19:27:12 CST 2018]; root of context hierarchy
2018-05-29 19:27:41 -Using default implementation for ThreadExecutor
2018-05-29 19:27:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-05-29 19:27:41 -Quartz Scheduler v.2.2.1 created.
2018-05-29 19:27:41 -RAMJobStore initialized.
2018-05-29 19:27:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-05-29 19:27:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-05-29 19:27:41 -Quartz scheduler version: 2.2.1
2018-05-29 19:27:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@28fef9a2
2018-05-29 19:27:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-05-29 19:27:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-05-29 19:27:45 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-05-29 19:27:45 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-05-29 19:27:45 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-05-29 19:27:45 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-05-29 19:27:45 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-05-29 19:27:45 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-05-29 19:27:45 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-05-29 19:27:45 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-05-29 19:27:45 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-05-29 19:27:45 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-05-29 19:27:45 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-05-29 19:27:45 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-05-29 19:27:45 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-05-29 19:27:45 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 19:27:45 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-05-29 19:27:45 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-05-29 19:27:45 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 19:27:45 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-05-29 19:27:45 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 19:27:45 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 19:27:45 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-05-29 19:27:45 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 19:27:45 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-05-29 19:27:45 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-05-29 19:27:45 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-05-29 19:27:45 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 19:27:45 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-05-29 19:27:45 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-05-29 19:27:45 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-05-29 19:27:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-05-29 19:27:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-05-29 19:27:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-05-29 19:27:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-05-29 19:27:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-05-29 19:27:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-05-29 19:27:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-05-29 19:27:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 19:27:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-05-29 19:27:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 19:27:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-05-29 19:27:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-05-29 19:27:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-05-29 19:27:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-05-29 19:27:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-05-29 19:27:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 19:27:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-05-29 19:27:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-05-29 19:27:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-05-29 19:27:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-05-29 19:27:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-05-29 19:27:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-05-29 19:27:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-05-29 19:27:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-05-29 19:27:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-05-29 19:27:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-05-29 19:27:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-05-29 19:27:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-05-29 19:27:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-05-29 19:27:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-05-29 19:27:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-05-29 19:27:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-05-29 19:27:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-05-29 19:27:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-05-29 19:27:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-05-29 19:27:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:27:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-05-29 19:27:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-05-29 19:27:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-05-29 19:27:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:27:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-05-29 19:27:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-05-29 19:27:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 19:27:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 19:27:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-05-29 19:27:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 19:27:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 19:27:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-05-29 19:27:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-05-29 19:27:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-05-29 19:27:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-05-29 19:27:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-05-29 19:27:46 -Initializing ExecutorService  'brokerChannelExecutor'
2018-05-29 19:27:48 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a9c38eb: startup date [Tue May 29 19:27:12 CST 2018]; root of context hierarchy
2018-05-29 19:27:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:27:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:27:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:27:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-05-29 19:27:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:27:52 -

Using default security password: 638a1be2-b3b0-4865-99ae-06335c7590a2

2018-05-29 19:27:53 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-05-29 19:27:53 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@7f0b2bf1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a507ea0, org.springframework.security.web.context.SecurityContextPersistenceFilter@312e8eaf, org.springframework.security.web.header.HeaderWriterFilter@179f30b7, org.springframework.security.web.csrf.CsrfFilter@c2ddfeb, org.springframework.security.web.authentication.logout.LogoutFilter@31aee6d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f307fcc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52288c65, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64a9fca7, org.springframework.security.web.session.SessionManagementFilter@7f219e84, org.springframework.security.web.access.ExceptionTranslationFilter@7f6137fb]
2018-05-29 19:27:54 -Registering beans for JMX exposure on startup
2018-05-29 19:27:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-05-29 19:27:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-05-29 19:27:55 -Starting beans in phase 2147483647
2018-05-29 19:27:55 -Context refreshed
2018-05-29 19:27:55 -Found 1 custom documentation plugin(s)
2018-05-29 19:27:55 -Scanning for api listing references
2018-05-29 19:27:55 -Generating unique operation named: removeUsingPOST_1
2018-05-29 19:27:56 -Generating unique operation named: addUsingGET_1
2018-05-29 19:27:56 -Generating unique operation named: editUsingGET_1
2018-05-29 19:27:56 -Generating unique operation named: listUsingGET_1
2018-05-29 19:27:56 -Generating unique operation named: removeUsingPOST_2
2018-05-29 19:27:56 -Generating unique operation named: removeUsingPOST_3
2018-05-29 19:27:56 -Generating unique operation named: saveUsingPOST_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingGET_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingHEAD_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPOST_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPUT_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPATCH_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingDELETE_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingOPTIONS_1
2018-05-29 19:27:56 -Generating unique operation named: updateUsingTRACE_1
2018-05-29 19:27:56 -Generating unique operation named: addUsingGET_2
2018-05-29 19:27:56 -Generating unique operation named: editUsingGET_2
2018-05-29 19:27:56 -Generating unique operation named: listUsingGET_2
2018-05-29 19:27:56 -Generating unique operation named: removeUsingPOST_4
2018-05-29 19:27:56 -Generating unique operation named: removeUsingPOST_5
2018-05-29 19:27:56 -Generating unique operation named: saveUsingPOST_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingGET_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingHEAD_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPOST_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPUT_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPATCH_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingDELETE_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingOPTIONS_2
2018-05-29 19:27:56 -Generating unique operation named: updateUsingTRACE_2
2018-05-29 19:27:56 -Generating unique operation named: addUsingGET_3
2018-05-29 19:27:56 -Generating unique operation named: editUsingGET_3
2018-05-29 19:27:56 -Generating unique operation named: listUsingGET_3
2018-05-29 19:27:56 -Generating unique operation named: removeUsingPOST_6
2018-05-29 19:27:56 -Generating unique operation named: removeUsingPOST_7
2018-05-29 19:27:56 -Generating unique operation named: saveUsingPOST_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingGET_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingHEAD_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPOST_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPUT_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingPATCH_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingDELETE_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingOPTIONS_3
2018-05-29 19:27:56 -Generating unique operation named: updateUsingTRACE_3
2018-05-29 19:27:57 -Generating unique operation named: editUsingGET_4
2018-05-29 19:27:57 -Generating unique operation named: listUsingGET_4
2018-05-29 19:27:57 -Generating unique operation named: updateUsingPOST_4
2018-05-29 19:27:57 -Generating unique operation named: addUsingGET_4
2018-05-29 19:27:57 -Generating unique operation named: editUsingGET_5
2018-05-29 19:27:57 -Generating unique operation named: infoUsingGET_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingHEAD_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingPOST_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingPUT_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingPATCH_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingDELETE_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingOPTIONS_1
2018-05-29 19:27:57 -Generating unique operation named: infoUsingTRACE_1
2018-05-29 19:27:57 -Generating unique operation named: listUsingGET_5
2018-05-29 19:27:57 -Generating unique operation named: removeUsingPOST_8
2018-05-29 19:27:57 -Generating unique operation named: removeUsingPOST_9
2018-05-29 19:27:57 -Generating unique operation named: saveUsingPOST_4
2018-05-29 19:27:57 -Generating unique operation named: updateUsingPOST_5
2018-05-29 19:27:57 -Generating unique operation named: listUsingGET_6
2018-05-29 19:27:57 -Generating unique operation named: removeUsingPOST_10
2018-05-29 19:27:57 -Generating unique operation named: welcomeUsingGET_1
2018-05-29 19:27:57 -Generating unique operation named: addUsingGET_5
2018-05-29 19:27:57 -Generating unique operation named: editUsingGET_6
2018-05-29 19:27:57 -Generating unique operation named: listUsingGET_7
2018-05-29 19:27:57 -Generating unique operation named: removeUsingPOST_11
2018-05-29 19:27:57 -Generating unique operation named: saveUsingPOST_5
2018-05-29 19:27:57 -Generating unique operation named: treeUsingGET_1
2018-05-29 19:27:57 -Generating unique operation named: treeUsingGET_2
2018-05-29 19:27:57 -Generating unique operation named: updateUsingPOST_6
2018-05-29 19:27:57 -Generating unique operation named: batchRemoveUsingPOST_1
2018-05-29 19:27:57 -Generating unique operation named: editUsingGET_7
2018-05-29 19:27:57 -Generating unique operation named: listUsingGET_8
2018-05-29 19:27:57 -Generating unique operation named: addUsingGET_6
2018-05-29 19:27:58 -Generating unique operation named: editUsingGET_8
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_9
2018-05-29 19:27:58 -Generating unique operation named: removeUsingPOST_12
2018-05-29 19:27:58 -Generating unique operation named: removeUsingPOST_13
2018-05-29 19:27:58 -Generating unique operation named: saveUsingPOST_6
2018-05-29 19:27:58 -Generating unique operation named: updateUsingGET_4
2018-05-29 19:27:58 -Generating unique operation named: updateUsingHEAD_4
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPOST_7
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPUT_4
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPATCH_4
2018-05-29 19:27:58 -Generating unique operation named: updateUsingDELETE_4
2018-05-29 19:27:58 -Generating unique operation named: updateUsingOPTIONS_4
2018-05-29 19:27:58 -Generating unique operation named: updateUsingTRACE_4
2018-05-29 19:27:58 -Generating unique operation named: addUsingGET_7
2018-05-29 19:27:58 -Generating unique operation named: batchRemoveUsingPOST_2
2018-05-29 19:27:58 -Generating unique operation named: deployUsingPOST_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_10
2018-05-29 19:27:58 -Generating unique operation named: removeUsingPOST_14
2018-05-29 19:27:58 -Generating unique operation named: addUsingGET_8
2018-05-29 19:27:58 -Generating unique operation named: batchRemoveUsingPOST_3
2018-05-29 19:27:58 -Generating unique operation named: editUsingGET_9
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_11
2018-05-29 19:27:58 -Generating unique operation named: saveUsingPOST_7
2018-05-29 19:27:58 -Generating unique operation named: saveUsingPOST_8
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPOST_8
2018-05-29 19:27:58 -Generating unique operation named: addUsingGET_9
2018-05-29 19:27:58 -Generating unique operation named: editUsingGET_10
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_12
2018-05-29 19:27:58 -Generating unique operation named: removeUsingPOST_15
2018-05-29 19:27:58 -Generating unique operation named: removeUsingPOST_16
2018-05-29 19:27:58 -Generating unique operation named: updateUsingGET_5
2018-05-29 19:27:58 -Generating unique operation named: updateUsingHEAD_5
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPOST_9
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPUT_5
2018-05-29 19:27:58 -Generating unique operation named: updateUsingPATCH_5
2018-05-29 19:27:58 -Generating unique operation named: updateUsingDELETE_5
2018-05-29 19:27:58 -Generating unique operation named: updateUsingOPTIONS_5
2018-05-29 19:27:58 -Generating unique operation named: updateUsingTRACE_5
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_13
2018-05-29 19:27:58 -Generating unique operation named: listUsingHEAD_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingPOST_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingPUT_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingPATCH_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingDELETE_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingOPTIONS_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingTRACE_1
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_14
2018-05-29 19:27:58 -Generating unique operation named: addUsingGET_10
2018-05-29 19:27:58 -Generating unique operation named: batchRemoveUsingPOST_4
2018-05-29 19:27:58 -Generating unique operation named: editUsingGET_11
2018-05-29 19:27:58 -Generating unique operation named: listUsingGET_15
2018-05-29 19:27:58 -Generating unique operation named: removeUsingPOST_17
2018-05-29 19:27:59 -Generating unique operation named: saveUsingPOST_9
2018-05-29 19:27:59 -Generating unique operation named: treeUsingGET_3
2018-05-29 19:27:59 -Generating unique operation named: treeViewUsingGET_1
2018-05-29 19:27:59 -Generating unique operation named: updateUsingPOST_10
2018-05-29 19:27:59 -Starting Quartz Scheduler now
2018-05-29 19:27:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-05-29 19:27:59 -Starting...
2018-05-29 19:27:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-05-29 19:27:59 -Started.
2018-05-29 19:27:59 -Initializing ProtocolHandler ["http-nio-80"]
2018-05-29 19:27:59 -Starting ProtocolHandler ["http-nio-80"]
2018-05-29 19:27:59 -Using a shared selector for servlet write/read
2018-05-29 19:27:59 -Tomcat started on port(s): 80 (http)
2018-05-29 19:27:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-05-29 19:27:59 -==> Parameters: 
2018-05-29 19:28:00 -<==      Total: 1
2018-05-29 19:28:00 -Started BootdoApplication in 52.13 seconds (JVM running for 56.228)
2018-05-29 19:28:46 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-05-29 19:35:17 -Starting BootdoApplication on 62E1HONDYE22L4D with PID 6372 (E:\wyhgoback\bootdo\target\classes started by Administrator in E:\wyhgoback\bootdo)
2018-05-29 19:35:17 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-05-29 19:35:17 -The following profiles are active: dev
2018-05-29 19:35:18 -HV000001: Hibernate Validator 5.3.6.Final
2018-05-29 19:35:18 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3c9bfddc: startup date [Tue May 29 19:35:18 CST 2018]; root of context hierarchy
2018-05-29 19:35:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-05-29 19:35:22 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$171d4fd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:22 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$b911477] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:22 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:22 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:23 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$a62fe175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:23 -Bean 'ehCacheCacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:23 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:23 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce0b19b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c064485c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:24 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:24 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache-core/2.5.3/ehcache-core-2.5.3.jar!/ehcache-failsafe.xml
2018-05-29 19:35:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:24 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-05-29 19:35:24 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-05-29 19:35:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:35:25 -Tomcat initialized with port(s): 80 (http)
2018-05-29 19:35:25 -Starting service [Tomcat]
2018-05-29 19:35:25 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-05-29 19:35:25 -Initializing Spring embedded WebApplicationContext
2018-05-29 19:35:25 -Root WebApplicationContext: initialization completed in 7434 ms
2018-05-29 19:35:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-05-29 19:35:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-05-29 19:35:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-05-29 19:35:26 -Mapping filter: 'requestContextFilter' to: [/*]
2018-05-29 19:35:26 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-05-29 19:35:26 -Filter xssFilter was not registered (disabled)
2018-05-29 19:35:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-05-29 19:35:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-05-29 19:35:26 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-05-29 19:35:26 -Mapping servlet: 'dispatcherServlet' to [/]
2018-05-29 19:35:27 -{dataSource-1} inited
2018-05-29 19:35:31 -ProcessEngine default created
2018-05-29 19:35:33 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3c9bfddc: startup date [Tue May 29 19:35:18 CST 2018]; root of context hierarchy
2018-05-29 19:35:33 -Using default implementation for ThreadExecutor
2018-05-29 19:35:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-05-29 19:35:33 -Quartz Scheduler v.2.2.1 created.
2018-05-29 19:35:33 -RAMJobStore initialized.
2018-05-29 19:35:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-05-29 19:35:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-05-29 19:35:33 -Quartz scheduler version: 2.2.1
2018-05-29 19:35:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@34001c5d
2018-05-29 19:35:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-05-29 19:35:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-05-29 19:35:37 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-05-29 19:35:37 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-05-29 19:35:37 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-05-29 19:35:37 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-05-29 19:35:37 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-05-29 19:35:37 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-05-29 19:35:37 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-05-29 19:35:37 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-05-29 19:35:37 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-05-29 19:35:37 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-05-29 19:35:37 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-05-29 19:35:37 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-05-29 19:35:37 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-05-29 19:35:37 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 19:35:37 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-05-29 19:35:37 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-05-29 19:35:37 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 19:35:37 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-05-29 19:35:37 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 19:35:37 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 19:35:37 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-05-29 19:35:37 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 19:35:37 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-05-29 19:35:37 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-05-29 19:35:37 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-05-29 19:35:37 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 19:35:37 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-05-29 19:35:37 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-05-29 19:35:37 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-05-29 19:35:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-05-29 19:35:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-05-29 19:35:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-05-29 19:35:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-05-29 19:35:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-05-29 19:35:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-05-29 19:35:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-05-29 19:35:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 19:35:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-05-29 19:35:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 19:35:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-05-29 19:35:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-05-29 19:35:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-05-29 19:35:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-05-29 19:35:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-05-29 19:35:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 19:35:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-05-29 19:35:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-05-29 19:35:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-05-29 19:35:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-05-29 19:35:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-05-29 19:35:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-05-29 19:35:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-05-29 19:35:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-05-29 19:35:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-05-29 19:35:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-05-29 19:35:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-05-29 19:35:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-05-29 19:35:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-05-29 19:35:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-05-29 19:35:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-05-29 19:35:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-05-29 19:35:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-05-29 19:35:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-05-29 19:35:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-05-29 19:35:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-05-29 19:35:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:35:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-05-29 19:35:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-05-29 19:35:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-05-29 19:35:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-05-29 19:35:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-05-29 19:35:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 19:35:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 19:35:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-05-29 19:35:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 19:35:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:35:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 19:35:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-05-29 19:35:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-05-29 19:35:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-05-29 19:35:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-05-29 19:35:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-05-29 19:35:38 -Initializing ExecutorService  'brokerChannelExecutor'
2018-05-29 19:35:39 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3c9bfddc: startup date [Tue May 29 19:35:18 CST 2018]; root of context hierarchy
2018-05-29 19:35:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:35:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:35:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:35:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-05-29 19:35:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:35:43 -

Using default security password: 4ff03c3a-518f-40af-9332-02219721fc97

2018-05-29 19:35:43 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-05-29 19:35:43 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@6d3c80bf, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f53e07d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d5ddfac, org.springframework.security.web.header.HeaderWriterFilter@6bab373c, org.springframework.security.web.csrf.CsrfFilter@4bbabec8, org.springframework.security.web.authentication.logout.LogoutFilter@1c4a8c93, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ecd6861, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d408746, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c3ad125, org.springframework.security.web.session.SessionManagementFilter@318353, org.springframework.security.web.access.ExceptionTranslationFilter@16448827]
2018-05-29 19:35:45 -Registering beans for JMX exposure on startup
2018-05-29 19:35:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-05-29 19:35:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-05-29 19:35:45 -Starting beans in phase 2147483647
2018-05-29 19:35:45 -Context refreshed
2018-05-29 19:35:45 -Found 1 custom documentation plugin(s)
2018-05-29 19:35:45 -Scanning for api listing references
2018-05-29 19:35:45 -Generating unique operation named: removeUsingPOST_1
2018-05-29 19:35:45 -Generating unique operation named: addUsingGET_1
2018-05-29 19:35:45 -Generating unique operation named: editUsingGET_1
2018-05-29 19:35:45 -Generating unique operation named: listUsingGET_1
2018-05-29 19:35:45 -Generating unique operation named: removeUsingPOST_2
2018-05-29 19:35:45 -Generating unique operation named: removeUsingPOST_3
2018-05-29 19:35:45 -Generating unique operation named: saveUsingPOST_1
2018-05-29 19:35:45 -Generating unique operation named: updateUsingGET_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingHEAD_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPOST_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPUT_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPATCH_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingDELETE_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingOPTIONS_1
2018-05-29 19:35:46 -Generating unique operation named: updateUsingTRACE_1
2018-05-29 19:35:46 -Generating unique operation named: addUsingGET_2
2018-05-29 19:35:46 -Generating unique operation named: editUsingGET_2
2018-05-29 19:35:46 -Generating unique operation named: listUsingGET_2
2018-05-29 19:35:46 -Generating unique operation named: removeUsingPOST_4
2018-05-29 19:35:46 -Generating unique operation named: removeUsingPOST_5
2018-05-29 19:35:46 -Generating unique operation named: saveUsingPOST_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingGET_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingHEAD_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPOST_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPUT_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPATCH_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingDELETE_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingOPTIONS_2
2018-05-29 19:35:46 -Generating unique operation named: updateUsingTRACE_2
2018-05-29 19:35:46 -Generating unique operation named: addUsingGET_3
2018-05-29 19:35:46 -Generating unique operation named: editUsingGET_3
2018-05-29 19:35:46 -Generating unique operation named: listUsingGET_3
2018-05-29 19:35:46 -Generating unique operation named: removeUsingPOST_6
2018-05-29 19:35:46 -Generating unique operation named: removeUsingPOST_7
2018-05-29 19:35:46 -Generating unique operation named: saveUsingPOST_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingGET_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingHEAD_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPOST_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPUT_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPATCH_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingDELETE_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingOPTIONS_3
2018-05-29 19:35:46 -Generating unique operation named: updateUsingTRACE_3
2018-05-29 19:35:46 -Generating unique operation named: editUsingGET_4
2018-05-29 19:35:46 -Generating unique operation named: listUsingGET_4
2018-05-29 19:35:46 -Generating unique operation named: updateUsingPOST_4
2018-05-29 19:35:46 -Generating unique operation named: addUsingGET_4
2018-05-29 19:35:46 -Generating unique operation named: editUsingGET_5
2018-05-29 19:35:47 -Generating unique operation named: infoUsingGET_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingHEAD_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingPOST_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingPUT_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingPATCH_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingDELETE_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingOPTIONS_1
2018-05-29 19:35:47 -Generating unique operation named: infoUsingTRACE_1
2018-05-29 19:35:47 -Generating unique operation named: listUsingGET_5
2018-05-29 19:35:47 -Generating unique operation named: removeUsingPOST_8
2018-05-29 19:35:47 -Generating unique operation named: removeUsingPOST_9
2018-05-29 19:35:47 -Generating unique operation named: saveUsingPOST_4
2018-05-29 19:35:47 -Generating unique operation named: updateUsingPOST_5
2018-05-29 19:35:47 -Generating unique operation named: listUsingGET_6
2018-05-29 19:35:47 -Generating unique operation named: removeUsingPOST_10
2018-05-29 19:35:47 -Generating unique operation named: welcomeUsingGET_1
2018-05-29 19:35:47 -Generating unique operation named: addUsingGET_5
2018-05-29 19:35:47 -Generating unique operation named: editUsingGET_6
2018-05-29 19:35:47 -Generating unique operation named: listUsingGET_7
2018-05-29 19:35:47 -Generating unique operation named: removeUsingPOST_11
2018-05-29 19:35:47 -Generating unique operation named: saveUsingPOST_5
2018-05-29 19:35:47 -Generating unique operation named: treeUsingGET_1
2018-05-29 19:35:47 -Generating unique operation named: treeUsingGET_2
2018-05-29 19:35:47 -Generating unique operation named: updateUsingPOST_6
2018-05-29 19:35:47 -Generating unique operation named: batchRemoveUsingPOST_1
2018-05-29 19:35:47 -Generating unique operation named: editUsingGET_7
2018-05-29 19:35:47 -Generating unique operation named: listUsingGET_8
2018-05-29 19:35:47 -Generating unique operation named: addUsingGET_6
2018-05-29 19:35:48 -Generating unique operation named: editUsingGET_8
2018-05-29 19:35:48 -Generating unique operation named: listUsingGET_9
2018-05-29 19:35:48 -Generating unique operation named: removeUsingPOST_12
2018-05-29 19:35:48 -Generating unique operation named: removeUsingPOST_13
2018-05-29 19:35:48 -Generating unique operation named: saveUsingPOST_6
2018-05-29 19:35:48 -Generating unique operation named: updateUsingGET_4
2018-05-29 19:35:48 -Generating unique operation named: updateUsingHEAD_4
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPOST_7
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPUT_4
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPATCH_4
2018-05-29 19:35:48 -Generating unique operation named: updateUsingDELETE_4
2018-05-29 19:35:48 -Generating unique operation named: updateUsingOPTIONS_4
2018-05-29 19:35:48 -Generating unique operation named: updateUsingTRACE_4
2018-05-29 19:35:48 -Generating unique operation named: addUsingGET_7
2018-05-29 19:35:48 -Generating unique operation named: batchRemoveUsingPOST_2
2018-05-29 19:35:48 -Generating unique operation named: deployUsingPOST_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingGET_10
2018-05-29 19:35:48 -Generating unique operation named: removeUsingPOST_14
2018-05-29 19:35:48 -Generating unique operation named: addUsingGET_8
2018-05-29 19:35:48 -Generating unique operation named: batchRemoveUsingPOST_3
2018-05-29 19:35:48 -Generating unique operation named: editUsingGET_9
2018-05-29 19:35:48 -Generating unique operation named: listUsingGET_11
2018-05-29 19:35:48 -Generating unique operation named: saveUsingPOST_7
2018-05-29 19:35:48 -Generating unique operation named: saveUsingPOST_8
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPOST_8
2018-05-29 19:35:48 -Generating unique operation named: addUsingGET_9
2018-05-29 19:35:48 -Generating unique operation named: editUsingGET_10
2018-05-29 19:35:48 -Generating unique operation named: listUsingGET_12
2018-05-29 19:35:48 -Generating unique operation named: removeUsingPOST_15
2018-05-29 19:35:48 -Generating unique operation named: removeUsingPOST_16
2018-05-29 19:35:48 -Generating unique operation named: updateUsingGET_5
2018-05-29 19:35:48 -Generating unique operation named: updateUsingHEAD_5
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPOST_9
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPUT_5
2018-05-29 19:35:48 -Generating unique operation named: updateUsingPATCH_5
2018-05-29 19:35:48 -Generating unique operation named: updateUsingDELETE_5
2018-05-29 19:35:48 -Generating unique operation named: updateUsingOPTIONS_5
2018-05-29 19:35:48 -Generating unique operation named: updateUsingTRACE_5
2018-05-29 19:35:48 -Generating unique operation named: listUsingGET_13
2018-05-29 19:35:48 -Generating unique operation named: listUsingHEAD_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingPOST_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingPUT_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingPATCH_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingDELETE_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingOPTIONS_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingTRACE_1
2018-05-29 19:35:48 -Generating unique operation named: listUsingGET_14
2018-05-29 19:35:48 -Generating unique operation named: addUsingGET_10
2018-05-29 19:35:48 -Generating unique operation named: batchRemoveUsingPOST_4
2018-05-29 19:35:48 -Generating unique operation named: editUsingGET_11
2018-05-29 19:35:49 -Generating unique operation named: listUsingGET_15
2018-05-29 19:35:49 -Generating unique operation named: removeUsingPOST_17
2018-05-29 19:35:49 -Generating unique operation named: saveUsingPOST_9
2018-05-29 19:35:49 -Generating unique operation named: treeUsingGET_3
2018-05-29 19:35:49 -Generating unique operation named: treeViewUsingGET_1
2018-05-29 19:35:49 -Generating unique operation named: updateUsingPOST_10
2018-05-29 19:35:49 -Starting Quartz Scheduler now
2018-05-29 19:35:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-05-29 19:35:49 -Starting...
2018-05-29 19:35:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-05-29 19:35:49 -Started.
2018-05-29 19:35:49 -Initializing ProtocolHandler ["http-nio-80"]
2018-05-29 19:35:49 -Starting ProtocolHandler ["http-nio-80"]
2018-05-29 19:35:49 -Using a shared selector for servlet write/read
2018-05-29 19:35:49 -Tomcat started on port(s): 80 (http)
2018-05-29 19:35:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-05-29 19:35:49 -==> Parameters: 
2018-05-29 19:35:49 -<==      Total: 1
2018-05-29 19:35:49 -Started BootdoApplication in 32.772 seconds (JVM running for 33.768)
2018-05-29 19:36:13 -Starting BootdoApplication on 62E1HONDYE22L4D with PID 6564 (E:\wyhgoback\bootdo\target\classes started by Administrator in E:\wyhgoback\bootdo)
2018-05-29 19:36:13 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-05-29 19:36:13 -The following profiles are active: dev
2018-05-29 19:36:14 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3c9bfddc: startup date [Tue May 29 19:36:14 CST 2018]; root of context hierarchy
2018-05-29 19:36:14 -HV000001: Hibernate Validator 5.3.6.Final
2018-05-29 19:36:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-05-29 19:36:17 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$831a5e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:18 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$778e22c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:18 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:18 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:18 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$122cefc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:19 -Bean 'ehCacheCacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:19 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:19 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a082801] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2c6156a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:20 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache-core/2.5.3/ehcache-core-2.5.3.jar!/ehcache-failsafe.xml
2018-05-29 19:36:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-05-29 19:36:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-05-29 19:36:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 19:36:21 -Tomcat initialized with port(s): 80 (http)
2018-05-29 19:36:21 -Starting service [Tomcat]
2018-05-29 19:36:21 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-05-29 19:36:21 -Initializing Spring embedded WebApplicationContext
2018-05-29 19:36:21 -Root WebApplicationContext: initialization completed in 7772 ms
2018-05-29 19:36:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-05-29 19:36:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-05-29 19:36:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-05-29 19:36:22 -Mapping filter: 'requestContextFilter' to: [/*]
2018-05-29 19:36:22 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-05-29 19:36:22 -Filter xssFilter was not registered (disabled)
2018-05-29 19:36:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-05-29 19:36:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-05-29 19:36:22 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-05-29 19:36:22 -Mapping servlet: 'dispatcherServlet' to [/]
2018-05-29 19:36:23 -{dataSource-1} inited
2018-05-29 19:36:26 -ProcessEngine default created
2018-05-29 19:36:28 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3c9bfddc: startup date [Tue May 29 19:36:14 CST 2018]; root of context hierarchy
2018-05-29 19:36:28 -Using default implementation for ThreadExecutor
2018-05-29 19:36:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-05-29 19:36:28 -Quartz Scheduler v.2.2.1 created.
2018-05-29 19:36:28 -RAMJobStore initialized.
2018-05-29 19:36:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-05-29 19:36:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-05-29 19:36:28 -Quartz scheduler version: 2.2.1
2018-05-29 19:36:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@337fb1a5
2018-05-29 19:36:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-05-29 19:36:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-05-29 19:36:32 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-05-29 19:36:32 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-05-29 19:36:32 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-05-29 19:36:32 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-05-29 19:36:32 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-05-29 19:36:32 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-05-29 19:36:32 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-05-29 19:36:32 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-05-29 19:36:32 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-05-29 19:36:32 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-05-29 19:36:32 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-05-29 19:36:32 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-05-29 19:36:32 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-05-29 19:36:32 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 19:36:32 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-05-29 19:36:32 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-05-29 19:36:32 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 19:36:32 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-05-29 19:36:32 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 19:36:32 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 19:36:32 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-05-29 19:36:32 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 19:36:32 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-05-29 19:36:32 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-05-29 19:36:32 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-05-29 19:36:32 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 19:36:32 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-05-29 19:36:32 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-05-29 19:36:32 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-05-29 19:36:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-05-29 19:36:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-05-29 19:36:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-05-29 19:36:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-05-29 19:36:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-05-29 19:36:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-05-29 19:36:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-05-29 19:36:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 19:36:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-05-29 19:36:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 19:36:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-05-29 19:36:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-05-29 19:36:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-05-29 19:36:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-05-29 19:36:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-05-29 19:36:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 19:36:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-05-29 19:36:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-05-29 19:36:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-05-29 19:36:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-05-29 19:36:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-05-29 19:36:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-05-29 19:36:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-05-29 19:36:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-05-29 19:36:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-05-29 19:36:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-05-29 19:36:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-05-29 19:36:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-05-29 19:36:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-05-29 19:36:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-05-29 19:36:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-05-29 19:36:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-05-29 19:36:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-05-29 19:36:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-05-29 19:36:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-05-29 19:36:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 19:36:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-05-29 19:36:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-05-29 19:36:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-05-29 19:36:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 19:36:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-05-29 19:36:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-05-29 19:36:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 19:36:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 19:36:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-05-29 19:36:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 19:36:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 19:36:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-05-29 19:36:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-05-29 19:36:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-05-29 19:36:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-05-29 19:36:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-05-29 19:36:33 -Initializing ExecutorService  'brokerChannelExecutor'
2018-05-29 19:36:34 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3c9bfddc: startup date [Tue May 29 19:36:14 CST 2018]; root of context hierarchy
2018-05-29 19:36:35 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:36:35 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:36:35 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:36:35 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-05-29 19:36:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 19:36:38 -

Using default security password: cc56066c-8bc8-4a99-808c-90837f89f87e

2018-05-29 19:36:38 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-05-29 19:36:38 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@6b6bae60, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22c14d10, org.springframework.security.web.context.SecurityContextPersistenceFilter@72924f19, org.springframework.security.web.header.HeaderWriterFilter@159a32a4, org.springframework.security.web.csrf.CsrfFilter@66694050, org.springframework.security.web.authentication.logout.LogoutFilter@1cd853ee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ff00844, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@106c3e0a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66be0e72, org.springframework.security.web.session.SessionManagementFilter@606d2a92, org.springframework.security.web.access.ExceptionTranslationFilter@15e881c0]
2018-05-29 19:36:39 -Registering beans for JMX exposure on startup
2018-05-29 19:36:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-05-29 19:36:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-05-29 19:36:39 -Starting beans in phase 2147483647
2018-05-29 19:36:39 -Context refreshed
2018-05-29 19:36:39 -Found 1 custom documentation plugin(s)
2018-05-29 19:36:39 -Scanning for api listing references
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_1
2018-05-29 19:36:40 -Generating unique operation named: addUsingGET_1
2018-05-29 19:36:40 -Generating unique operation named: editUsingGET_1
2018-05-29 19:36:40 -Generating unique operation named: listUsingGET_1
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_2
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_3
2018-05-29 19:36:40 -Generating unique operation named: saveUsingPOST_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingGET_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingHEAD_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPOST_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPUT_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPATCH_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingDELETE_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-05-29 19:36:40 -Generating unique operation named: updateUsingTRACE_1
2018-05-29 19:36:40 -Generating unique operation named: addUsingGET_2
2018-05-29 19:36:40 -Generating unique operation named: editUsingGET_2
2018-05-29 19:36:40 -Generating unique operation named: listUsingGET_2
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_4
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_5
2018-05-29 19:36:40 -Generating unique operation named: saveUsingPOST_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingGET_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingHEAD_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPOST_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPUT_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPATCH_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingDELETE_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingOPTIONS_2
2018-05-29 19:36:40 -Generating unique operation named: updateUsingTRACE_2
2018-05-29 19:36:40 -Generating unique operation named: addUsingGET_3
2018-05-29 19:36:40 -Generating unique operation named: editUsingGET_3
2018-05-29 19:36:40 -Generating unique operation named: listUsingGET_3
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_6
2018-05-29 19:36:40 -Generating unique operation named: removeUsingPOST_7
2018-05-29 19:36:40 -Generating unique operation named: saveUsingPOST_3
2018-05-29 19:36:40 -Generating unique operation named: updateUsingGET_3
2018-05-29 19:36:40 -Generating unique operation named: updateUsingHEAD_3
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPOST_3
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPUT_3
2018-05-29 19:36:40 -Generating unique operation named: updateUsingPATCH_3
2018-05-29 19:36:41 -Generating unique operation named: updateUsingDELETE_3
2018-05-29 19:36:41 -Generating unique operation named: updateUsingOPTIONS_3
2018-05-29 19:36:41 -Generating unique operation named: updateUsingTRACE_3
2018-05-29 19:36:41 -Generating unique operation named: editUsingGET_4
2018-05-29 19:36:41 -Generating unique operation named: listUsingGET_4
2018-05-29 19:36:41 -Generating unique operation named: updateUsingPOST_4
2018-05-29 19:36:41 -Generating unique operation named: addUsingGET_4
2018-05-29 19:36:41 -Generating unique operation named: editUsingGET_5
2018-05-29 19:36:41 -Generating unique operation named: infoUsingGET_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingHEAD_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingPOST_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingPUT_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingPATCH_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingDELETE_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingOPTIONS_1
2018-05-29 19:36:41 -Generating unique operation named: infoUsingTRACE_1
2018-05-29 19:36:41 -Generating unique operation named: listUsingGET_5
2018-05-29 19:36:41 -Generating unique operation named: removeUsingPOST_8
2018-05-29 19:36:41 -Generating unique operation named: removeUsingPOST_9
2018-05-29 19:36:41 -Generating unique operation named: saveUsingPOST_4
2018-05-29 19:36:41 -Generating unique operation named: updateUsingPOST_5
2018-05-29 19:36:41 -Generating unique operation named: listUsingGET_6
2018-05-29 19:36:41 -Generating unique operation named: removeUsingPOST_10
2018-05-29 19:36:41 -Generating unique operation named: welcomeUsingGET_1
2018-05-29 19:36:41 -Generating unique operation named: addUsingGET_5
2018-05-29 19:36:41 -Generating unique operation named: editUsingGET_6
2018-05-29 19:36:41 -Generating unique operation named: listUsingGET_7
2018-05-29 19:36:41 -Generating unique operation named: removeUsingPOST_11
2018-05-29 19:36:41 -Generating unique operation named: saveUsingPOST_5
2018-05-29 19:36:41 -Generating unique operation named: treeUsingGET_1
2018-05-29 19:36:41 -Generating unique operation named: treeUsingGET_2
2018-05-29 19:36:41 -Generating unique operation named: updateUsingPOST_6
2018-05-29 19:36:41 -Generating unique operation named: batchRemoveUsingPOST_1
2018-05-29 19:36:41 -Generating unique operation named: editUsingGET_7
2018-05-29 19:36:41 -Generating unique operation named: listUsingGET_8
2018-05-29 19:36:42 -Generating unique operation named: addUsingGET_6
2018-05-29 19:36:42 -Generating unique operation named: editUsingGET_8
2018-05-29 19:36:42 -Generating unique operation named: listUsingGET_9
2018-05-29 19:36:42 -Generating unique operation named: removeUsingPOST_12
2018-05-29 19:36:42 -Generating unique operation named: removeUsingPOST_13
2018-05-29 19:36:42 -Generating unique operation named: saveUsingPOST_6
2018-05-29 19:36:42 -Generating unique operation named: updateUsingGET_4
2018-05-29 19:36:42 -Generating unique operation named: updateUsingHEAD_4
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPOST_7
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPUT_4
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPATCH_4
2018-05-29 19:36:42 -Generating unique operation named: updateUsingDELETE_4
2018-05-29 19:36:42 -Generating unique operation named: updateUsingOPTIONS_4
2018-05-29 19:36:42 -Generating unique operation named: updateUsingTRACE_4
2018-05-29 19:36:42 -Generating unique operation named: addUsingGET_7
2018-05-29 19:36:42 -Generating unique operation named: batchRemoveUsingPOST_2
2018-05-29 19:36:42 -Generating unique operation named: deployUsingPOST_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingGET_10
2018-05-29 19:36:42 -Generating unique operation named: removeUsingPOST_14
2018-05-29 19:36:42 -Generating unique operation named: addUsingGET_8
2018-05-29 19:36:42 -Generating unique operation named: batchRemoveUsingPOST_3
2018-05-29 19:36:42 -Generating unique operation named: editUsingGET_9
2018-05-29 19:36:42 -Generating unique operation named: listUsingGET_11
2018-05-29 19:36:42 -Generating unique operation named: saveUsingPOST_7
2018-05-29 19:36:42 -Generating unique operation named: saveUsingPOST_8
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPOST_8
2018-05-29 19:36:42 -Generating unique operation named: addUsingGET_9
2018-05-29 19:36:42 -Generating unique operation named: editUsingGET_10
2018-05-29 19:36:42 -Generating unique operation named: listUsingGET_12
2018-05-29 19:36:42 -Generating unique operation named: removeUsingPOST_15
2018-05-29 19:36:42 -Generating unique operation named: removeUsingPOST_16
2018-05-29 19:36:42 -Generating unique operation named: updateUsingGET_5
2018-05-29 19:36:42 -Generating unique operation named: updateUsingHEAD_5
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPOST_9
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPUT_5
2018-05-29 19:36:42 -Generating unique operation named: updateUsingPATCH_5
2018-05-29 19:36:42 -Generating unique operation named: updateUsingDELETE_5
2018-05-29 19:36:42 -Generating unique operation named: updateUsingOPTIONS_5
2018-05-29 19:36:42 -Generating unique operation named: updateUsingTRACE_5
2018-05-29 19:36:42 -Generating unique operation named: listUsingGET_13
2018-05-29 19:36:42 -Generating unique operation named: listUsingHEAD_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingPOST_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingPUT_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingPATCH_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingDELETE_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingOPTIONS_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingTRACE_1
2018-05-29 19:36:42 -Generating unique operation named: listUsingGET_14
2018-05-29 19:36:43 -Generating unique operation named: addUsingGET_10
2018-05-29 19:36:43 -Generating unique operation named: batchRemoveUsingPOST_4
2018-05-29 19:36:43 -Generating unique operation named: editUsingGET_11
2018-05-29 19:36:43 -Generating unique operation named: listUsingGET_15
2018-05-29 19:36:43 -Generating unique operation named: removeUsingPOST_17
2018-05-29 19:36:43 -Generating unique operation named: saveUsingPOST_9
2018-05-29 19:36:43 -Generating unique operation named: treeUsingGET_3
2018-05-29 19:36:43 -Generating unique operation named: treeViewUsingGET_1
2018-05-29 19:36:43 -Generating unique operation named: updateUsingPOST_10
2018-05-29 19:36:43 -Starting Quartz Scheduler now
2018-05-29 19:36:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-05-29 19:36:43 -Starting...
2018-05-29 19:36:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-05-29 19:36:43 -Started.
2018-05-29 19:36:43 -Initializing ProtocolHandler ["http-nio-80"]
2018-05-29 19:36:43 -Starting ProtocolHandler ["http-nio-80"]
2018-05-29 19:36:43 -Using a shared selector for servlet write/read
2018-05-29 19:36:43 -Tomcat started on port(s): 80 (http)
2018-05-29 19:36:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-05-29 19:36:43 -==> Parameters: 
2018-05-29 19:36:43 -<==      Total: 1
2018-05-29 19:36:43 -Started BootdoApplication in 31.148 seconds (JVM running for 32.033)
2018-05-29 19:37:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-05-29 19:45:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-05-29 19:45:43 -FrameworkServlet 'dispatcherServlet': initialization started
2018-05-29 19:45:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2018-05-29 19:45:43 -Enabling session validation scheduler...
2018-05-29 19:45:43 -请求地址 : http://127.0.0.1/
2018-05-29 19:45:43 -HTTP METHOD : GET
2018-05-29 19:45:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-05-29 19:45:43 -参数 : [{}]
2018-05-29 19:45:43 -耗时 : 4
2018-05-29 19:45:43 -返回值 : redirect:/blog
2018-05-29 19:45:43 -请求地址 : http://127.0.0.1/blog
2018-05-29 19:45:43 -HTTP METHOD : GET
2018-05-29 19:45:43 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-05-29 19:45:43 -参数 : []
2018-05-29 19:45:43 -耗时 : 0
2018-05-29 19:45:43 -返回值 : blog/index/main
2018-05-29 19:45:43 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-05-29 19:45:43 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-05-29 19:45:43 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-05-29 19:45:43 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-05-29 19:45:43 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-05-29 19:45:43 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-05-29 19:45:43 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-05-29 19:45:46 -请求地址 : http://127.0.0.1/blog/open/list
2018-05-29 19:45:46 -HTTP METHOD : GET
2018-05-29 19:45:46 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-05-29 19:45:46 -参数 : [{type=article, limit=10, offset=0}]
2018-05-29 19:45:46 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-05-29 19:45:46 -==> Parameters: article(String)
2018-05-29 19:45:47 -<==      Total: 10
2018-05-29 19:45:47 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-05-29 19:45:47 -==> Parameters: article(String)
2018-05-29 19:45:47 -<==      Total: 1
2018-05-29 19:45:47 -耗时 : 854
2018-05-29 19:45:47 -返回值 : com.bootdo.common.utils.PageUtils@22101d87
2018-05-29 19:45:55 -请求地址 : http://127.0.0.1/login;JSESSIONID=480b964f-2c46-43df-ba3e-f0c24ff75d5b
2018-05-29 19:45:55 -HTTP METHOD : GET
2018-05-29 19:45:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-05-29 19:45:55 -参数 : []
2018-05-29 19:45:55 -耗时 : 1
2018-05-29 19:45:55 -返回值 : login
2018-05-29 19:46:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-05-29 19:46:00 -==> Parameters: admin(String)
2018-05-29 19:46:00 -<==      Total: 1
2018-05-29 19:46:00 -请求地址 : http://127.0.0.1/login
2018-05-29 19:46:00 -HTTP METHOD : POST
2018-05-29 19:46:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-05-29 19:46:00 -参数 : [admin, 111111]
2018-05-29 19:46:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-05-29 19:46:00 -==> Parameters: admin(String)
2018-05-29 19:46:00 -<==      Total: 1
2018-05-29 19:46:00 -耗时 : 27
2018-05-29 19:46:00 -返回值 : {msg=操作成功, code=0}
2018-05-29 19:46:00 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-05-29 19:46:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 19:46:00 -==> Parameters: 1(Long), admin(String), 登录(String), 27(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-05-29 19:46:00.973(Timestamp)
2018-05-29 19:46:01 -请求地址 : http://127.0.0.1/index
2018-05-29 19:46:01 -HTTP METHOD : GET
2018-05-29 19:46:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-05-29 19:46:01 -参数 : [{}]
2018-05-29 19:46:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-05-29 19:46:01 -==> Parameters: 1(Long)
2018-05-29 19:46:01 -<==    Updates: 1
2018-05-29 19:46:02 -<==      Total: 28
2018-05-29 19:46:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-05-29 19:46:02 -==> Parameters: 138(Long)
2018-05-29 19:46:02 -<==      Total: 1
2018-05-29 19:46:02 -耗时 : 1430
2018-05-29 19:46:02 -返回值 : index_v1
2018-05-29 19:46:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 19:46:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1430(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-05-29 19:46:02.64(Timestamp)
2018-05-29 19:46:03 -<==    Updates: 1
2018-05-29 19:46:03 -请求地址 : http://127.0.0.1/main
2018-05-29 19:46:03 -HTTP METHOD : GET
2018-05-29 19:46:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-05-29 19:46:03 -参数 : []
2018-05-29 19:46:03 -耗时 : 0
2018-05-29 19:46:03 -返回值 : main
2018-05-29 19:46:03 -请求地址 : http://127.0.0.1/oa/notify/message
2018-05-29 19:46:03 -HTTP METHOD : GET
2018-05-29 19:46:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-05-29 19:46:03 -参数 : []
2018-05-29 19:46:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-05-29 19:46:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-05-29 19:46:03 -请求地址 : http://127.0.0.1/main
2018-05-29 19:46:03 -HTTP METHOD : GET
2018-05-29 19:46:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-05-29 19:46:03 -参数 : []
2018-05-29 19:46:03 -耗时 : 0
2018-05-29 19:46:03 -返回值 : main
2018-05-29 19:46:04 -<==      Total: 0
2018-05-29 19:46:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-05-29 19:46:04 -==> Parameters: 1(Long), 0(String)
2018-05-29 19:46:04 -<==      Total: 1
2018-05-29 19:46:04 -耗时 : 622
2018-05-29 19:46:04 -返回值 : com.bootdo.common.utils.PageUtils@7b54101d
2018-05-29 19:46:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 19:46:07 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1/index(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2018-05-29 19:46:07.492(Timestamp)
2018-05-29 19:46:07 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-05-29 19:46:07 -<==    Updates: 1
2018-05-29 19:46:54 -An error occurred in processing while on a non-container thread. The connection will be closed immediately
java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:96)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:350)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:318)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.sendHeartbeat(AbstractSockJsSession.java:251)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession$HeartbeatTask.run(AbstractSockJsSession.java:455)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-05-29 19:46:54 -java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 75 common frames omitted
2018-05-29 19:46:54 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-05-29 19:46:54 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 59 common frames omitted
2018-05-29 19:46:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 19:46:54 -java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 77 common frames omitted
2018-05-29 19:46:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 19:46:54 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-05-29 19:46:54 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 61 common frames omitted
2018-05-29 19:46:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1/endpointChat/125/3u9admz4/xhr_streaming(String), org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。(String), null, 2018-05-29 19:46:54.847(Timestamp)
2018-05-29 19:46:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1/endpointChat/125/3u9admz4/xhr_streaming(String), org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。(String), null, 2018-05-29 19:46:54.82(Timestamp)
2018-05-29 19:46:55 -<==    Updates: 1
2018-05-29 19:46:55 -<==    Updates: 1
2018-05-29 20:07:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 261]
2018-05-29 20:37:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 622]
2018-05-29 20:39:36 -Starting BootdoApplication on 62E1HONDYE22L4D with PID 9096 (E:\wyhgoback\bootdo\target\classes started by Administrator in E:\wyhgoback\bootdo)
2018-05-29 20:39:36 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-05-29 20:39:36 -The following profiles are active: dev
2018-05-29 20:39:37 -HV000001: Hibernate Validator 5.3.6.Final
2018-05-29 20:39:37 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49049a04: startup date [Tue May 29 20:39:37 CST 2018]; root of context hierarchy
2018-05-29 20:39:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-05-29 20:39:41 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6d8e49c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:41 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$62020e66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:41 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:41 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:41 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$fca0db64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:42 -Bean 'ehCacheCacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:42 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:42 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$247c13a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$16d5424b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:43 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/Administrator/.m2/repository/net/sf/ehcache/ehcache-core/2.5.3/ehcache-core-2.5.3.jar!/ehcache-failsafe.xml
2018-05-29 20:39:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-05-29 20:39:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-05-29 20:39:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-29 20:39:44 -Tomcat initialized with port(s): 80 (http)
2018-05-29 20:39:44 -Starting service [Tomcat]
2018-05-29 20:39:44 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-05-29 20:39:44 -Initializing Spring embedded WebApplicationContext
2018-05-29 20:39:44 -Root WebApplicationContext: initialization completed in 7317 ms
2018-05-29 20:39:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-05-29 20:39:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-05-29 20:39:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-05-29 20:39:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-05-29 20:39:45 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-05-29 20:39:45 -Filter xssFilter was not registered (disabled)
2018-05-29 20:39:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-05-29 20:39:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-05-29 20:39:45 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-05-29 20:39:45 -Mapping servlet: 'dispatcherServlet' to [/]
2018-05-29 20:39:45 -{dataSource-1} inited
2018-05-29 20:39:48 -ProcessEngine default created
2018-05-29 20:39:49 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49049a04: startup date [Tue May 29 20:39:37 CST 2018]; root of context hierarchy
2018-05-29 20:39:50 -Using default implementation for ThreadExecutor
2018-05-29 20:39:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-05-29 20:39:50 -Quartz Scheduler v.2.2.1 created.
2018-05-29 20:39:50 -RAMJobStore initialized.
2018-05-29 20:39:50 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-05-29 20:39:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-05-29 20:39:50 -Quartz scheduler version: 2.2.1
2018-05-29 20:39:50 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1dbeedff
2018-05-29 20:39:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-05-29 20:39:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-05-29 20:39:52 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-05-29 20:39:52 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-05-29 20:39:52 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-05-29 20:39:52 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-05-29 20:39:52 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-05-29 20:39:52 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-05-29 20:39:52 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-05-29 20:39:52 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-05-29 20:39:52 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-05-29 20:39:52 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-05-29 20:39:52 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-05-29 20:39:52 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-05-29 20:39:52 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-05-29 20:39:52 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 20:39:52 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-05-29 20:39:52 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-05-29 20:39:52 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 20:39:52 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-05-29 20:39:52 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-05-29 20:39:52 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 20:39:52 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-05-29 20:39:52 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-05-29 20:39:52 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-05-29 20:39:52 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-05-29 20:39:52 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-05-29 20:39:52 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-05-29 20:39:52 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-05-29 20:39:52 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-05-29 20:39:52 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-05-29 20:39:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-05-29 20:39:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-05-29 20:39:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-05-29 20:39:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-05-29 20:39:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-05-29 20:39:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-05-29 20:39:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-05-29 20:39:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 20:39:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-05-29 20:39:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-05-29 20:39:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-05-29 20:39:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-05-29 20:39:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-05-29 20:39:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-05-29 20:39:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-05-29 20:39:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 20:39:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-05-29 20:39:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-05-29 20:39:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-05-29 20:39:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-05-29 20:39:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-05-29 20:39:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-05-29 20:39:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-05-29 20:39:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-05-29 20:39:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-05-29 20:39:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-05-29 20:39:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-05-29 20:39:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-05-29 20:39:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-05-29 20:39:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-05-29 20:39:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-05-29 20:39:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-05-29 20:39:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-05-29 20:39:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-05-29 20:39:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-05-29 20:39:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-05-29 20:39:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-05-29 20:39:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-05-29 20:39:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-05-29 20:39:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-05-29 20:39:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 20:39:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-05-29 20:39:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-05-29 20:39:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 20:39:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-05-29 20:39:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-05-29 20:39:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-29 20:39:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-05-29 20:39:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-05-29 20:39:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-05-29 20:39:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-05-29 20:39:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-05-29 20:39:53 -Initializing ExecutorService  'brokerChannelExecutor'
2018-05-29 20:39:53 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@49049a04: startup date [Tue May 29 20:39:37 CST 2018]; root of context hierarchy
2018-05-29 20:39:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 20:39:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 20:39:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 20:39:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-05-29 20:39:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-05-29 20:39:56 -

Using default security password: 9b9799bc-691d-4643-986e-deb0bdb17cdf

2018-05-29 20:39:56 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-05-29 20:39:56 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@4eec5fa6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21579b35, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b576ff8, org.springframework.security.web.header.HeaderWriterFilter@79bf39e5, org.springframework.security.web.csrf.CsrfFilter@6f6a2ac8, org.springframework.security.web.authentication.logout.LogoutFilter@3c271988, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21022cbb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c8672b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@25b83dce, org.springframework.security.web.session.SessionManagementFilter@4b20aa21, org.springframework.security.web.access.ExceptionTranslationFilter@38856d6e]
2018-05-29 20:39:57 -Registering beans for JMX exposure on startup
2018-05-29 20:39:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-05-29 20:39:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-05-29 20:39:57 -Starting beans in phase 2147483647
2018-05-29 20:39:57 -Context refreshed
2018-05-29 20:39:57 -Found 1 custom documentation plugin(s)
2018-05-29 20:39:57 -Scanning for api listing references
2018-05-29 20:39:57 -Generating unique operation named: removeUsingPOST_1
2018-05-29 20:39:57 -Generating unique operation named: addUsingGET_1
2018-05-29 20:39:57 -Generating unique operation named: editUsingGET_1
2018-05-29 20:39:57 -Generating unique operation named: listUsingGET_1
2018-05-29 20:39:57 -Generating unique operation named: removeUsingPOST_2
2018-05-29 20:39:57 -Generating unique operation named: removeUsingPOST_3
2018-05-29 20:39:57 -Generating unique operation named: saveUsingPOST_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingGET_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingHEAD_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingPOST_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingPUT_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingPATCH_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingDELETE_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingOPTIONS_1
2018-05-29 20:39:57 -Generating unique operation named: updateUsingTRACE_1
2018-05-29 20:39:57 -Generating unique operation named: addUsingGET_2
2018-05-29 20:39:57 -Generating unique operation named: editUsingGET_2
2018-05-29 20:39:57 -Generating unique operation named: listUsingGET_2
2018-05-29 20:39:57 -Generating unique operation named: removeUsingPOST_4
2018-05-29 20:39:57 -Generating unique operation named: removeUsingPOST_5
2018-05-29 20:39:57 -Generating unique operation named: saveUsingPOST_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingGET_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingHEAD_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingPOST_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingPUT_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingPATCH_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingDELETE_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingOPTIONS_2
2018-05-29 20:39:57 -Generating unique operation named: updateUsingTRACE_2
2018-05-29 20:39:57 -Generating unique operation named: addUsingGET_3
2018-05-29 20:39:57 -Generating unique operation named: editUsingGET_3
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_3
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_6
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_7
2018-05-29 20:39:58 -Generating unique operation named: saveUsingPOST_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingGET_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingHEAD_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPOST_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPUT_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPATCH_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingDELETE_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingOPTIONS_3
2018-05-29 20:39:58 -Generating unique operation named: updateUsingTRACE_3
2018-05-29 20:39:58 -Generating unique operation named: editUsingGET_4
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_4
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPOST_4
2018-05-29 20:39:58 -Generating unique operation named: addUsingGET_4
2018-05-29 20:39:58 -Generating unique operation named: editUsingGET_5
2018-05-29 20:39:58 -Generating unique operation named: infoUsingGET_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingHEAD_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingPOST_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingPUT_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingPATCH_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingDELETE_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingOPTIONS_1
2018-05-29 20:39:58 -Generating unique operation named: infoUsingTRACE_1
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_5
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_8
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_9
2018-05-29 20:39:58 -Generating unique operation named: saveUsingPOST_4
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPOST_5
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_6
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_10
2018-05-29 20:39:58 -Generating unique operation named: welcomeUsingGET_1
2018-05-29 20:39:58 -Generating unique operation named: addUsingGET_5
2018-05-29 20:39:58 -Generating unique operation named: editUsingGET_6
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_7
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_11
2018-05-29 20:39:58 -Generating unique operation named: saveUsingPOST_5
2018-05-29 20:39:58 -Generating unique operation named: treeUsingGET_1
2018-05-29 20:39:58 -Generating unique operation named: treeUsingGET_2
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPOST_6
2018-05-29 20:39:58 -Generating unique operation named: batchRemoveUsingPOST_1
2018-05-29 20:39:58 -Generating unique operation named: editUsingGET_7
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_8
2018-05-29 20:39:58 -Generating unique operation named: addUsingGET_6
2018-05-29 20:39:58 -Generating unique operation named: editUsingGET_8
2018-05-29 20:39:58 -Generating unique operation named: listUsingGET_9
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_12
2018-05-29 20:39:58 -Generating unique operation named: removeUsingPOST_13
2018-05-29 20:39:58 -Generating unique operation named: saveUsingPOST_6
2018-05-29 20:39:58 -Generating unique operation named: updateUsingGET_4
2018-05-29 20:39:58 -Generating unique operation named: updateUsingHEAD_4
2018-05-29 20:39:58 -Generating unique operation named: updateUsingPOST_7
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPUT_4
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPATCH_4
2018-05-29 20:39:59 -Generating unique operation named: updateUsingDELETE_4
2018-05-29 20:39:59 -Generating unique operation named: updateUsingOPTIONS_4
2018-05-29 20:39:59 -Generating unique operation named: updateUsingTRACE_4
2018-05-29 20:39:59 -Generating unique operation named: addUsingGET_7
2018-05-29 20:39:59 -Generating unique operation named: batchRemoveUsingPOST_2
2018-05-29 20:39:59 -Generating unique operation named: deployUsingPOST_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingGET_10
2018-05-29 20:39:59 -Generating unique operation named: removeUsingPOST_14
2018-05-29 20:39:59 -Generating unique operation named: addUsingGET_8
2018-05-29 20:39:59 -Generating unique operation named: batchRemoveUsingPOST_3
2018-05-29 20:39:59 -Generating unique operation named: editUsingGET_9
2018-05-29 20:39:59 -Generating unique operation named: listUsingGET_11
2018-05-29 20:39:59 -Generating unique operation named: saveUsingPOST_7
2018-05-29 20:39:59 -Generating unique operation named: saveUsingPOST_8
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPOST_8
2018-05-29 20:39:59 -Generating unique operation named: addUsingGET_9
2018-05-29 20:39:59 -Generating unique operation named: editUsingGET_10
2018-05-29 20:39:59 -Generating unique operation named: listUsingGET_12
2018-05-29 20:39:59 -Generating unique operation named: removeUsingPOST_15
2018-05-29 20:39:59 -Generating unique operation named: removeUsingPOST_16
2018-05-29 20:39:59 -Generating unique operation named: updateUsingGET_5
2018-05-29 20:39:59 -Generating unique operation named: updateUsingHEAD_5
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPOST_9
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPUT_5
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPATCH_5
2018-05-29 20:39:59 -Generating unique operation named: updateUsingDELETE_5
2018-05-29 20:39:59 -Generating unique operation named: updateUsingOPTIONS_5
2018-05-29 20:39:59 -Generating unique operation named: updateUsingTRACE_5
2018-05-29 20:39:59 -Generating unique operation named: listUsingGET_13
2018-05-29 20:39:59 -Generating unique operation named: listUsingHEAD_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingPOST_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingPUT_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingPATCH_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingDELETE_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingOPTIONS_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingTRACE_1
2018-05-29 20:39:59 -Generating unique operation named: listUsingGET_14
2018-05-29 20:39:59 -Generating unique operation named: addUsingGET_10
2018-05-29 20:39:59 -Generating unique operation named: batchRemoveUsingPOST_4
2018-05-29 20:39:59 -Generating unique operation named: editUsingGET_11
2018-05-29 20:39:59 -Generating unique operation named: listUsingGET_15
2018-05-29 20:39:59 -Generating unique operation named: removeUsingPOST_17
2018-05-29 20:39:59 -Generating unique operation named: saveUsingPOST_9
2018-05-29 20:39:59 -Generating unique operation named: treeUsingGET_3
2018-05-29 20:39:59 -Generating unique operation named: treeViewUsingGET_1
2018-05-29 20:39:59 -Generating unique operation named: updateUsingPOST_10
2018-05-29 20:39:59 -Starting Quartz Scheduler now
2018-05-29 20:39:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-05-29 20:39:59 -Starting...
2018-05-29 20:39:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-05-29 20:39:59 -Started.
2018-05-29 20:39:59 -Initializing ProtocolHandler ["http-nio-80"]
2018-05-29 20:39:59 -Starting ProtocolHandler ["http-nio-80"]
2018-05-29 20:39:59 -Using a shared selector for servlet write/read
2018-05-29 20:39:59 -Tomcat started on port(s): 80 (http)
2018-05-29 20:39:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-05-29 20:39:59 -==> Parameters: 
2018-05-29 20:40:00 -<==      Total: 1
2018-05-29 20:40:00 -Started BootdoApplication in 24.291 seconds (JVM running for 25.031)
2018-05-29 20:40:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-05-29 20:40:08 -FrameworkServlet 'dispatcherServlet': initialization started
2018-05-29 20:40:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2018-05-29 20:40:09 -Enabling session validation scheduler...
2018-05-29 20:40:09 -请求地址 : http://127.0.0.1/
2018-05-29 20:40:09 -HTTP METHOD : GET
2018-05-29 20:40:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-05-29 20:40:09 -参数 : [{}]
2018-05-29 20:40:09 -耗时 : 5
2018-05-29 20:40:09 -返回值 : java.lang.String>>>>>>	value=[C@43990ce1;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:40:09 -请求地址 : http://127.0.0.1/blog
2018-05-29 20:40:09 -HTTP METHOD : GET
2018-05-29 20:40:09 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-05-29 20:40:09 -参数 : []
2018-05-29 20:40:09 -耗时 : 0
2018-05-29 20:40:09 -返回值 : java.lang.String>>>>>>	value=[C@5868f4ff;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:40:09 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-05-29 20:40:09 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-05-29 20:40:09 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-05-29 20:40:09 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-05-29 20:40:09 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-05-29 20:40:09 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-05-29 20:40:09 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-05-29 20:40:10 -请求地址 : http://127.0.0.1/blog/open/list
2018-05-29 20:40:10 -HTTP METHOD : GET
2018-05-29 20:40:10 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-05-29 20:40:10 -参数 : [{type=article, limit=10, offset=0}]
2018-05-29 20:40:10 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-05-29 20:40:10 -==> Parameters: article(String)
2018-05-29 20:40:10 -<==      Total: 10
2018-05-29 20:40:10 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-05-29 20:40:10 -==> Parameters: article(String)
2018-05-29 20:40:10 -<==      Total: 1
2018-05-29 20:40:10 -耗时 : 202
2018-05-29 20:40:10 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=10;rows=[ContentDO{cid=121, title='Spring Cloud下微服务权限方案', slug='null', created=null, modified=null, content='<p><br></p><div class="Layout-navbarHolder" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; height: 59px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><header class="Navbar ScrollBackFixed" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; contain: layout; -webkit-box-pack: justify; justify-content: space-between; height: 59px; width: 1519.2px; border-bottom: 1px solid rgba(0, 0, 0, 0.08); color: rgb(128, 128, 128); background: rgba(255, 255, 255, 0.97); z-index: 2; position: fixed; border-top-color: rgba(0, 0, 0, 0.08); border-right-color: rgba(0, 0, 0, 0.08); border-left-color: rgba(0, 0, 0, 0.08); transform: translateY(-100%); will-change: transform;"><div class="Navbar-functionality" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: absolute; right: 0px; top: 0px; height: 58px; align-self: stretch;"><a class="Navbar-write" style="box-sizing: inherit; color: inherit; display: flex; -webkit-box-align: center; align-items: center; padding: 0px 10px; white-space: nowrap; transition: color 0.2s;"><span class="icon icon-ic_nav_new" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; margin-right: 3px; font-family: icomoon !important;"></span>写文章</a><button class="Button Navbar-loginButon Button--blue" type="button" style="box-sizing: inherit; padding: 0px 16px; color: rgb(0, 128, 255); font-size: 14px; line-height: 30px; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-width: 1px; border-style: solid; border-color: rgb(0, 128, 255); -webkit-appearance: none; border-radius: 4px; height: 32px; margin-right: 16px; margin-left: 6px; width: 72px;">登录</button></div></header></div><div style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"></div><div class="Layout-main av-card av-paddingBottom av-bodyFont Layout-titleImage--normal" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin: 22px auto 0px; padding: 0px; width: 660px; z-index: 1; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><div class="PostIndex-header av-paddingTop av-card" data-zop="{&quot;authorName&quot;:&quot;老A&quot;,&quot;itemId&quot;:&quot;29345083&quot;,&quot;title&quot;:&quot;Spring Cloud下微服务权限方案&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-module="PostItem" data-za-module-info="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;29345083&quot;}}}" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><div class="TitleImage" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin-bottom: 22px;"><img alt="Spring Cloud下微服务权限方案" src="https://pic4.zhimg.com/v2-32e374b99a4332ca8bd52fca9d090617_r.png" class="TitleImage-imagePure TitleImage-imagePure--fixed" height="396px" style="box-sizing: inherit; overflow: hidden; width: 660px; display: block;"></div><h1 class="PostIndex-title av-paddingSide av-titleFont" style="box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; font-size: 32px; line-height: 1.3;">Spring Cloud下微服务权限方案</h1><div class="PostIndex-author" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: relative; font-size: 14px; color: rgb(128, 128, 128); margin-top: 22px;"><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" style="box-sizing: inherit; color: inherit;"><img class="Avatar-hemingway PostIndex-authorAvatar Avatar--xs" alt="老A" src="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_xs.jpg" srcset="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_l.jpg 2x" style="box-sizing: inherit; overflow: hidden; width: 36px; height: 36px; border-radius: 50%; margin-right: 12px;"></a><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" class="PostIndex-authorName" style="box-sizing: inherit; color: rgb(128, 128, 128); min-width: 0px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">老A</a><span class="Bull" style="box-sizing: inherit; margin: 0px 6px;"></span><div class="HoverTitle" data-hover-title="2017 年 9月 14 日星期四晚上 7 点 12 分" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><time datetime="Thu Sep 14 2017 19:12:26 GMT+0800 (中国标准时间)" style="box-sizing: inherit;">1 个月前</time></div></div></div><div class="RichText PostIndex-content av-paddingSide av-card" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; word-break: break-word; margin: 30px 0px; line-height: 1.7;"><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">背景</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">从传统的单体应用转型Spring Cloud的朋友都在问我，Spring Cloud下的微服务权限怎么管？怎么设计比较合理？从大层面讲叫服务权限，往小处拆分，分别为三块：用户认证、用户权限、服务校验。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户认证</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用可能习惯了session的存在，而到了Spring cloud的微服务化后，session虽然可以采取分布式会话来解决，但终究不是上上策。开始有人推行Spring Cloud Security结合很好的OAuth2，后面为了优化OAuth 2中Access Token的存储问题，提高后端服务的可用性和扩展性，有了更好Token验证方式JWT（JSON Web Token）。这里要强调一点的是，OAuth2和JWT这两个根本没有可比性，是两个完全不同的东西。 OAuth2是一种授权框架，而JWT是一种认证协议</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2认证框架</h2><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2中包含四个角色：</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源拥有者(Resource Owner)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源服务器(Resource Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权服务器(Authorization Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端(Client)</li></ul><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2包含4种授权模式</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权码（认证码）模式 （Authorization code)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">简化（隐形）模式 (Impilict</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">用户名密码模式 (Resource Owner Password Credential)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端模式 (Client Credential)</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，OAuth2的运行流程如下图，摘自RFC 6749：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+--------+                               +---------------+
|        |--(A)- Authorization Request -&gt;|   Resource    |
|        |                               |     Owner     |
|        |&lt;-(B)-- Authorization Grant ---|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(C)-- Authorization Grant --&gt;| Authorization |
| Client |                               |     Server    |
|        |&lt;-(D)----- Access Token -------|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(E)----- Access Token ------&gt;|    Resource   |
|        |                               |     Server    |
|        |&lt;-(F)--- Protected Resource ---|               |
+--------+                               +---------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">我们在Spring Cloud OAuth2中，所有访问微服务资源的请求都在Http Header中携带Token，被访问的服务接下来再去请求授权服务器验证Token的有效性，目前这种方式，我们需要两次或者更多次的请求，所有的Token有效性校验都落在的授权服务器上，对于我们系统的水平扩展成为一个非常大的瓶颈。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">JWT认证协议</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">授权服务器将用户信息和授权范围序列化后放入一个JSON字符串，然后使用Base64进行编码，最终在授权服务器用私钥对这个字符串进行签名，得到一个JSON Web Token。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">假设其他所有的资源服务器都将持有一个RSA公钥，当资源服务器接收到这个在Http Header中存有Token的请求，资源服务器就可以拿到这个Token，并验证它是否使用正确的私钥签名（是否经过授权服务器签名，也就是验签）。验签通过，反序列化后就拿到Toekn中包含的有效验证信息。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，主体运作流程图如下：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+-----------+                                     +-------------+
|           |       1-Request Authorization       |             |
|           |------------------------------------&gt;|             |
|           |     grant_type&amp;username&amp;password    |             |--+
|           |                                     |Authorization|  | 2-Gen
|           |                                     |Service      |  |   JWT
|           |       3-Response Authorization      |             |&lt;-+
|           |&lt;------------------------------------| Private Key |
|           |    access_token / refresh_token     |             |
|           |    token_type / expire_in           |             |
|  Client   |                                     +-------------+
|           |                                 
|           |                                     +-------------+
|           |       4-Request Resource            |             |
|           |-----------------------------------&gt; |             |
|           | Authorization: bearer Access Token  |             |--+
|           |                                     | Resource    |  | 5-Verify
|           |                                     | Service     |  |  Token
|           |       6-Response Resource           |             |&lt;-+
|           |&lt;----------------------------------- | Public Key  |
+-----------+                                     +-------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">通过上述的方式，我们可以很好地完成服务化后的用户认证。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户权限</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用的权限拦截，大家都喜欢shiro，而且用的颇为顺手。可是一旦拆分后，这权限开始分散在各个API了，shiro还好使吗？笔者在项目中，并没有用shiro。前后端分离后，交互都是token，后端的服务无状态化，前端按钮资源化，权限放哪儿管好使？</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">抽象与设计</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在介绍灵活的核心设计前，先给大家普及一个入门的概念：RBAC（Role-Based Access Control，基于角色的访问控制），就是用户通过角色与权限进行关联。简单地说，一个用户拥有若干角色，每一个角色拥有若干权限。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">RBAC其实是一种分析模型，主要分为：基本模型RBAC0（Core RBAC）、角色分层模型RBAC1（Hierarchal RBAC）、角色限制模型RBAC2（Constraint RBAC）和统一模型RBAC3（Combines RBAC）。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">更多详情大家可以了解：<a href="http://link.zhihu.com/?target=http%3A//blog.csdn.net/zwk626542417/article/details/46726491" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">RBAC权限模型<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">核心UML</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" data-rawwidth="1168" data-rawheight="532" class="origin_image zh-lightbox-thumb lazy" width="1168" data-original="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_r.png" data-actualsrc="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">这是笔者通过多种业务场景后抽象的RBAC关系图</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">类说明</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Group</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">群或组，拥有一定数量权限的集合，亦可以是权限的载体。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">子类：User（用户）、Role（角色）、Position（岗位）、Unit（部门），通过用户的特定构成，形成不同业务场景的群或组，而通过对群或组的父类授权，完成了用户的权限获取。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Permission</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限，拥有一定数量资源的集成，亦可以是资源的载体。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Resources</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限下有资源，资源的来源有：Menu（菜单）、Button（动作权限）、页面元素（按钮、tab等）、数据权限等</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Program</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">程序，相关权限控制的呈现载体，可以在多个菜单中挂载。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">常见web程序基本构成</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" data-rawwidth="873" data-rawheight="492" class="origin_image zh-lightbox-thumb lazy" width="873" data-original="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_r.png" data-actualsrc="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">模型与微服务的关系</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">如果把Spring Cloud服务化后的所有api接口都定义为上文的Resources，那么我们可以看到这么一个情况。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">比如一个用户的增删改查，我们的页面会这么做</p><img src="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" data-rawwidth="2880" data-rawheight="1460" class="origin_image zh-lightbox-thumb lazy" width="2880" data-original="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_r.png" data-actualsrc="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">页面元素资源编码资源URI资源请求方式查询user_btn_get/api/user/{id}GET增加user_btn_add/api/userPOST编辑user_btn_edit/api/user/{id}PUT删除user_btn_del/api/user/{id}DELETE</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在抽象成上述的映射关系后，我们的前后端的资源有了参照，我们对于用户组的权限授权就容易了。比如我授予一个用户增加、删除权限。在前端我们只需要检验该资源编码的有无就可以控制按钮的显示和隐藏，而在后端我们只需要统一拦截判断该用户是否具有URI和对应请求方式即可。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">至于权限的统一拦截是放置在Zuul这个网关上，还是落在具体的后端服务的拦截器上（Filter、Inteceptor），都可以轻而易举地实现。不在局限于代码的侵入性。放置Zuul流程图如下：</p><img src="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" data-rawwidth="1426" data-rawheight="710" class="origin_image zh-lightbox-thumb lazy" width="1426" data-original="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_r.png" data-actualsrc="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">要是权限的统一拦截放置在Zuul上，会有一个问题，那就是后端服务安不安全，服务只需要通过注册中心，即可对其他服务进行调用。这里就涉及到后面的第三个模块，服务之间的鉴权。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">服务之间的鉴权</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">因为我们都知道服务之间开源通过注册中心寻到客户端后，直接远程过程调用的。对于生产上的各个服务，一个个敏感性的接口，我们更是需要加以保护。主题的流程如下图：</p><img src="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" data-rawwidth="1700" data-rawheight="926" class="origin_image zh-lightbox-thumb lazy" width="1700" data-original="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_r.png" data-actualsrc="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">笔者的实现方式是基于Spring Cloud的FeignClient Inteceprot（自动申请服务token、传递当前上下文）和Mvc Inteceptor（服务token校验、更新当前上下文）来实现，从而对服务的安全性做进一步保护。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">结合Spring Cloud的特性后，整体流程图如下：</p><img src="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" data-rawwidth="2182" data-rawheight="1638" class="origin_image zh-lightbox-thumb lazy" width="2182" data-original="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_r.png" data-actualsrc="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">优化点</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">虽然通过上述的用户合法性检验、用户权限拦截以及服务之间的鉴权，保证了Api接口的安全性，但是其间的Http访问频率是比较高的，请求数量上来的时候，慢的问题是就会特别明显。可以考虑一定的优化策略，比如用户权限缓存、服务授权信息的派发与混存、定时刷新服务鉴权Token等。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">结语</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">上述是笔者在项目里的大体思路，有兴趣的朋友可以借鉴我的开源项目，欢迎star：</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-security%25EF%25BC%2588Jwt%25E3%2580%2581%25E7%2594%25A8%25E6%2588%25B7%25E6%259D%2583%25E9%2599%2590%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-security（Jwt、用户权限）<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">github：<a href="http://link.zhihu.com/?target=https%3A//github.com/wxiaoqi/ace-security" class=" external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;"><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">https://</span><span class="visible" style="box-sizing: inherit;">github.com/wxiaoqi/ace-</span><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">security</span><span class="ellipsis" style="box-sizing: inherit;"></span><span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-gate%25EF%25BC%2588%25E6%259C%258D%25E5%258A%25A1%25E9%2589%25B4%25E6%259D%2583%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-gate（服务鉴权）</a></li></ul></div></div>', type='article', tags='null', categories='', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Wed Oct 25 12:28:19 CST 2017, gtmModified=Wed Oct 25 12:28:19 CST 2017}, ContentDO{cid=119, title='Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）', slug='null', created=null, modified=null, content='<h1 class="title" style="font-size: 34px; margin-top: 20px; margin-bottom: 0px; font-family: -apple-system, &quot;SF UI Display&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 700; line-height: 1.3; color: rgb(51, 51, 51); word-break: break-word !important;">Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）</h1><div data-note-content="" class="show-content" style="color: rgb(47, 47, 47); font-size: 16px; line-height: 1.7; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; word-break: break-word !important;"><blockquote style="padding-top: 20px; padding-bottom: 20px; margin-bottom: 25px; font-size: 16px; border-left-width: 6px; border-left-color: rgb(180, 180, 180); background-color: rgb(247, 247, 247); line-height: 30px; word-break: break-word !important;"><ul style="padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">Cvte提前批</li><li style="line-height: 30px; margin-bottom: 10px;">阿里内推</li><li style="line-height: 30px; margin-bottom: 10px;">便利蜂内推</li><li style="line-height: 30px; margin-bottom: 10px;">小米内推</li><li style="line-height: 30px; margin-bottom: 10px;">金山wps内推</li><li style="line-height: 30px; margin-bottom: 10px;">多益网络</li><li style="line-height: 30px; margin-bottom: 10px;">拼多多学霸批</li><li style="line-height: 30px; margin-bottom: 10px;">搜狗校招</li><li style="line-height: 30px; margin-bottom: 10px;">涂鸦移动</li><li style="line-height: 30px; margin-bottom: 10px;">中国电信it研发中心</li><li style="line-height: 30px; margin-bottom: 10px;">中兴</li><li style="line-height: 30px; margin-bottom: 10px;">华为</li><li style="line-height: 30px; margin-bottom: 10px;">苏宁内推</li><li style="line-height: 30px; margin-bottom: 10px;">美团内推</li><li style="line-height: 30px; margin-bottom: 10px;">百度</li><li style="line-height: 30px; margin-bottom: 10px;">腾讯</li><li style="line-height: 30px; margin-bottom: 10px;">招商银行信用卡</li><li style="line-height: 30px; margin-bottom: 10px;">招银网络科技</li><li style="line-height: 30px; margin-bottom: 10px;">网易</li><li style="line-height: 30px; margin-bottom: 0px;">Vivo</li></ul></blockquote><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Cvte提前批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍你的项目</li><li style="line-height: 30px; margin-bottom: 10px;">加密解密了解么？几种算法，讲一下你了解的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程了解么？什么是线程安全？</li><li style="line-height: 30px; margin-bottom: 10px;">说一个你最熟悉的设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你项目中用到了哪些设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">Java的hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的线程安全性，什么是线程安全的？如何实现线程安全</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍项目</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的数据库引擎，区别特点</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解？讲一下最熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">写一个单例模式，答主写的是双检查锁单例，问了为什么用Volatile，synchronize移到方法最外面会怎么样？</li><li style="line-height: 30px; margin-bottom: 10px;">单例模式在你项目里哪些应用？</li><li style="line-height: 30px; margin-bottom: 10px;">数据连接池</li><li style="line-height: 30px; margin-bottom: 10px;">对高负载有了解么</li><li style="line-height: 30px; margin-bottom: 10px;">你意向的技术方向是哪块？（答主回答的高并发，然后面试官说他是做高负载的）</li><li style="line-height: 30px; margin-bottom: 10px;">对高并发有了解么？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">阿里内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">听说你有博客，博客里大概有什么内容？</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍，最复杂的表</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap为什么大小是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">介绍一下红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Arraylist的原理</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计判断论文抄袭的系统</li><li style="line-height: 30px; margin-bottom: 10px;">堆排序的原理</li><li style="line-height: 30px; margin-bottom: 10px;">抽象工厂和工厂方法模式的区别</li><li style="line-height: 30px; margin-bottom: 10px;">工厂模式的思想</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">哪里用到了工厂模式</li><li style="line-height: 30px; margin-bottom: 10px;">Forward和redirect的区别</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">1， 自我介绍<br>2， 项目介绍<br>3， 项目架构<br>4， 项目难点<br>5， Synchronize关键字为什么jdk1.5后效率提高了<br>6， 线程池的使用时的注意事项<br>7， Spring中autowire和resourse关键字的区别<br>8， Hashmap的原理<br>9， Hashmap的大小为什么指定为2的幂次<br>10， 讲一下线程状态转移图<br>11， 消息队列了解么<br>12， 分布式了解么</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">便利蜂内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">volatile和synchronized</li><li style="line-height: 30px; margin-bottom: 10px;">来个算法题：一个无序数组，其中一个数字出现的次数大于其他数字之和，求这个数字 （主元素）</li><li style="line-height: 30px; margin-bottom: 10px;">答完再来一个：一个数组，有正有负，不改变顺序的情况下，求和最大的最长子序列</li><li style="line-height: 30px; margin-bottom: 10px;">项目用到什么数据库？隔离级别？每个隔离级别各做了什么</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引？mysql不同引擎索引的区别</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收算法的过程</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的垃圾收集器？ Cms收集器的过程</li><li style="line-height: 30px; margin-bottom: 10px;">怎样进入老年代？</li><li style="line-height: 30px; margin-bottom: 10px;">平时用到了什么设计模式？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你最熟的两个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">用过什么系统？shell写过脚本吗？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">小米内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">看你最近博客写的是redis，介绍redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap中jdk1.8之后做了哪些优化</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收的过程</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数设置</li><li style="line-height: 30px; margin-bottom: 10px;">项目中的优化</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">金山wps内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对Java的面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">对java多线程的理解</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式的理解</li><li style="line-height: 30px; margin-bottom: 10px;">讲几个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">对算法有什么了解？答主先回答了动态规划，解释了一下dp的思想</li><li style="line-height: 30px; margin-bottom: 10px;">快排的思想讲一下</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp怎么保证可靠传输（中间穿插了好多小问题）</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp的拥塞控制</li><li style="line-height: 30px; margin-bottom: 10px;">让你设计一个即时聊天的系统</li><li style="line-height: 30px; margin-bottom: 10px;">支付宝转账，是如何实现，几个小时通知转账成功的（面试官想让回答长连接，答主一直没get到点）</li><li style="line-height: 30px; margin-bottom: 10px;">解释一下长连接</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">多益网络</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">介绍多态</li><li style="line-height: 30px; margin-bottom: 10px;">Java新建线程有哪几种方式</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">看过框架源码么</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">拼多多学霸批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：一棵二叉排序树，给定一个数，找到与给定数差值最小的数</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个系统，解决抢购时所需要的大量的短链接的功能，如何保证高并发，如何设计短链接</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">代码量多少</li><li style="line-height: 30px; margin-bottom: 10px;">给了一张纸，各种名词，会的写出来</li><li style="line-height: 30px; margin-bottom: 10px;">然后给它解释那些会的</li><li style="line-height: 30px; margin-bottom: 10px;">设计题：设计一个系统，记录qq用户前一天的登录状态，提供16g内存和2tb的硬盘，要做到查询指定qq号的前一天的登录状态，快速查询O(1)复杂度</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">搜狗校招</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）：</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：两个排序的数组A和B分别含有m和n个数，找到两个排序数组的中位数，答主用的二分，时间复杂度为O(log (m+n))。结果面试官不满意，让用归并的思想做，时间复杂度其实更高了</li><li style="line-height: 30px; margin-bottom: 10px;">介绍网络编程</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">涂鸦移动</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">索引使用的注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的引擎</li><li style="line-height: 30px; margin-bottom: 10px;">Java垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Java的finalize，finally，final三个关键字的区别和应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">String类可以被继承么<br>手撕算法：假设你是一个专业的窃贼，准备沿着一条街打劫房屋。每个房子都存放着特定金额的钱。你面临的唯一约束条件是：相邻的房子装着相互联系的防盗系统，且 当相邻的两个房子同一天被打劫时，该系统会自动报警。<br>给定一个非负整数列表，表示每个房子中存放的钱， 算一算，如果今晚去打劫，你最多可以得到多少钱 在不触动报警装置的情况下。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对游戏的了解</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法题：给一个整数数组，找到两个数使得他们的和等于一个给定的数 target。</li><li style="line-height: 30px; margin-bottom: 10px;">红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中国电信it研发中心</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里用的什么服务器</li><li style="line-height: 30px; margin-bottom: 10px;">自己写一个tomcat服务器，你会怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">分布式服务器会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决session一致性缓存的问题</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的优势和特点</li><li style="line-height: 30px; margin-bottom: 10px;">一千万用户并发抢购，怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">如果成功的用户有10万，redis存不下怎么处理</li><li style="line-height: 30px; margin-bottom: 10px;">你项目中的难点</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍spring中的熟悉的注解</li><li style="line-height: 30px; margin-bottom: 10px;">让你实现autowire注解的功能你会如何实现</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化有哪些方式，具体原理</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中兴</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">专业面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的设计模式，讲两个</li><li style="line-height: 30px; margin-bottom: 10px;">Java collection类，集合，讲两个你了解的，说实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">Java线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">你觉得你在你实验室处于什么水平</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">综合面试（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">说好的综合面试纯聊天呢？<br>1． 自我介绍<br>2． 项目介绍<br>3． 说一下你知道的设计模式<br>4． 画一个策略模式的uml图<br>5． Java多线程的理解<br>6． 内存屏障是什么<br>7． 数据库索引<br>8． 项目中的优化<br>9． 然后开始聊人生<br>10． 你的缺点，你最不喜欢什么样的人，你的家庭等等</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">华为</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目架构</li><li style="line-height: 30px; margin-bottom: 10px;">项目一个完整的执行流程（由于我是搞java的，而面试官是搞c的，所以全程尬聊）</li><li style="line-height: 30px; margin-bottom: 10px;">项目优化</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目进度</li><li style="line-height: 30px; margin-bottom: 10px;">平常的爱好</li><li style="line-height: 30px; margin-bottom: 10px;">感觉面试官也不是搞java的，所以又是一阵尬聊</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">苏宁内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">面过哪些公司了</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer了</li><li style="line-height: 30px; margin-bottom: 10px;">聊到多益，于是开始聊最近微博上很火的多益老板</li><li style="line-height: 30px; margin-bottom: 10px;">得出结论，我和面试官都觉得多益老板三观有问题，但做游戏就是要偏执的人</li><li style="line-height: 30px; margin-bottom: 10px;">你博客主要哪方面的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程并发包了解么</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下countDownLatch</li></ol><p style="margin-bottom: 25px; word-break: break-word !important;">苏宁聊了20分钟八卦就面完了，一轮技术面</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">美团内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis介绍</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis源码么</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis集群么</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">hashmap容量为什么是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">hashset的源码</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">你重写过hashcode和equals么，要注意什么</li><li style="line-height: 30px; margin-bottom: 10px;">假设现在一个学生类，有学号和姓名，我现在hashcode方法重写的时候，只将学号参与计算，会出现什么情况？</li><li style="line-height: 30px; margin-bottom: 10px;">往set里面put一个学生对象，然后将这个学生对象的学号改了，再put进去，可以放进set么？并讲出为什么</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化？有哪些方式，原理是什么？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下稳定的排序算法和不稳定的排序算法</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下快速排序的思想</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下数据的acid</li><li style="line-height: 30px; margin-bottom: 10px;">什么是一致性</li><li style="line-height: 30px; margin-bottom: 10px;">什么是隔离性</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">每个隔离级别是如何解决</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql要加上nextkey锁，语句该怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">Java的内存模型，垃圾回收</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的参数</li><li style="line-height: 30px; margin-bottom: 10px;">每个参数解释一遍</li><li style="line-height: 30px; margin-bottom: 10px;">然后面试官设置了每个参数，给了是个线程，让描述出完整的线程池执行的流程</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和IO有什么区别</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop怎么实现</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop有哪些实现方式</li><li style="line-height: 30px; margin-bottom: 10px;">动态代理的实现方式和区别</li><li style="line-height: 30px; margin-bottom: 10px;">Linux了解么</li><li style="line-height: 30px; margin-bottom: 10px;">怎么查看系统负载</li><li style="line-height: 30px; margin-bottom: 10px;">Cpu load的参数如果为4，描述一下现在系统处于什么情况</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，查找磁盘上最大的文件的命令</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，如何查看系统日志文件</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：leeetcode原题 22，Generate Parentheses，给定 n 对括号，请写一个函数以将其生成新的括号组合，并返回所有组合结果。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">三面没怎么问技术，问了很多技术管理方面的问题</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目成员</li><li style="line-height: 30px; margin-bottom: 10px;">当意见不一致时，如何沟通并说服开发成员，并举个例子</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证项目的进度</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">非聚簇索引和聚簇索引</li><li style="line-height: 30px; margin-bottom: 10px;">索引的使用注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">联合索引</li><li style="line-height: 30px; margin-bottom: 10px;">从底层解释最左匹配原则</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql对联合索引有优化么？会自动调整顺序么？哪个版本开始优化？</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化的方式和原理</li><li style="line-height: 30px; margin-bottom: 10px;">技术选型，一个新技术和一个稳定的旧技术，你会怎么选择，选择的考虑有哪些</li><li style="line-height: 30px; margin-bottom: 10px;">说你印象最深的美团点评技术团队的三篇博客</li><li style="line-height: 30px; margin-bottom: 10px;">最近在学什么新技术</li><li style="line-height: 30px; margin-bottom: 10px;">你是怎么去接触一门新技术的</li><li style="line-height: 30px; margin-bottom: 10px;">会看哪些书</li><li style="line-height: 30px; margin-bottom: 10px;">怎么选择要看的书</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">百度</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Java中的多态</li><li style="line-height: 30px; margin-bottom: 10px;">Object类下的方法</li><li style="line-height: 30px; margin-bottom: 10px;">Finalize的作用和使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">为什么要同时重写hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">不同时重写会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap如何变线程安全，每种方式的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数你知道的说一下</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解的说一下啊</li><li style="line-height: 30px; margin-bottom: 10px;">手撕一个单例模式</li><li style="line-height: 30px; margin-bottom: 10px;">快速排序的思想讲一下</li><li style="line-height: 30px; margin-bottom: 10px;">给个数组，模拟快排的过程</li><li style="line-height: 30px; margin-bottom: 10px;">手写快排</li><li style="line-height: 30px; margin-bottom: 10px;">设计题，一个图书馆管理系统，数据库怎么设计，需求自己定</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的特点</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务了解么</li><li style="line-height: 30px; margin-bottom: 10px;">反爬虫的机制，有哪些方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：反转单链表</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：实现类似微博子结构的数据结构，输入一系列父子关系，输出一个类似微博评论的父子结构图</li><li style="line-height: 30px; margin-bottom: 10px;">手写java多线程</li><li style="line-height: 30px; margin-bottom: 10px;">手写java的soeket编程，服务端和客户端</li><li style="line-height: 30px; margin-bottom: 10px;">进程间的通信方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法： 爬楼梯，写出状态转移方程</li><li style="line-height: 30px; margin-bottom: 10px;">智力题：时针分针什么时候重合</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">由于三面面试官不懂java，我不熟c加加，所以全程尬聊</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：给定一个数字三角形，找到从顶部到底部的最小路径和。每一步可以移动到下面一行的相邻数字上。</li><li style="line-height: 30px; margin-bottom: 10px;"></li><li style="line-height: 30px; margin-bottom: 10px;">然后继续在这个问题上扩展</li><li style="line-height: 30px; margin-bottom: 10px;">求出最短那条的路径</li><li style="line-height: 30px; margin-bottom: 10px;">递归求出所有的路径</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式讲一下熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">会不会滥用设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">多线程条件变量为什么要在while体里</li><li style="line-height: 30px; margin-bottom: 10px;">你遇到什么挫折</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">腾讯</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的作用，你的理解</li><li style="line-height: 30px; margin-bottom: 10px;">多线程的理解，如何保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">mysql数据库的引擎和区别</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：千万用户抢购，如何处理高并发，并且有一个链接，指向前一天抢购成功的用户，如何设计这个系统和数据库</li><li style="line-height: 30px; margin-bottom: 10px;">如果后台处理抢购请求的服务器，每次最多承受200的负载，系统该怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：最小公倍数和最大公约数</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里一个完整请求的流程</li><li style="line-height: 30px; margin-bottom: 10px;">项目的优化</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate和mybatis的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么用ssh框架</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的容灾备份</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和memcache 的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么选择redis</li><li style="line-height: 30px; margin-bottom: 10px;">Java的full gc</li><li style="line-height: 30px; margin-bottom: 10px;">Full gc会导致什么问题</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招商银行信用卡</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">访问者模式</li><li style="line-height: 30px; margin-bottom: 10px;">装饰者模式</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer</li><li style="line-height: 30px; margin-bottom: 10px;">为什么还来我们这</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招银网络科技</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">写一个两个有序链表合并成一个有序链表</li><li style="line-height: 30px; margin-bottom: 10px;">死锁是什么呢</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决死锁</li><li style="line-height: 30px; margin-bottom: 10px;">http请求流程</li><li style="line-height: 30px; margin-bottom: 10px;">为什么负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">怎么实现负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办？除了热备份还有什么方法</li><li style="line-height: 30px; margin-bottom: 10px;">讲讲你对spring的理解，不要把ioc和aop背给我听</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法：找出两个数组相等的数，不能用其他数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：给定一个数字，一个数组，找出数组中相加等于这两个数的和，不能用数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：如何判断一个树是不是另一颗树的子树</li><li style="line-height: 30px; margin-bottom: 10px;">如何解决并发访问的错误</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">网易</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">I++操作怎么保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个下单系统，下单成功后可以给用户发优惠券</li><li style="line-height: 30px; margin-bottom: 10px;">接上面场景题：服务器挂了，优惠券还没发怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证一致性</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务知道么</li><li style="line-height: 30px; margin-bottom: 10px;">介绍分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">你的职业规划</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Nio的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Channel和buffer</li><li style="line-height: 30px; margin-bottom: 10px;">directBuffer和buffer的区别</li><li style="line-height: 30px; margin-bottom: 10px;">nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">锁的实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决缓存和主存的一致性问题</li><li style="line-height: 30px; margin-bottom: 10px;">缓存还没更新到主存，服务器挂了怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Vivo</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的batch有数量限制么</li><li style="line-height: 30px; margin-bottom: 10px;">Jquery用过么</li><li style="line-height: 30px; margin-bottom: 10px;">Extjs的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">有没有扩展过extjs</li><li style="line-height: 30px; margin-bottom: 10px;">读写锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用读锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用写锁</li><li style="line-height: 30px; margin-bottom: 10px;">Cas的原理，使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的瓶颈</li></ol><div><br></div><div><br></div><div>转自<a href="http://www.jianshu.com//p/72712546648b" target="_blank">http://www.jianshu.com//p/72712546648b</a></div></div>', type='article', tags='null', categories='', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='Bootdo', gtmCreate=Fri Oct 13 13:45:20 CST 2017, gtmModified=Fri Oct 13 13:45:20 CST 2017}, ContentDO{cid=118, title='elementUI select组件使用详解', slug='null', created=null, modified=null, content='<article style="padding: 20px 0px; border-top: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post" style="margin: 0px 0px 50px; padding: 20px 30px 0px; color: rgb(69, 69, 69); overflow: hidden;"><div class="markdown_views" style="margin: 0px; padding: 0px; font-family: &quot;microsoft yahei&quot;; font-size: 15px; color: rgb(63, 63, 63);"><h1 id="elementui-select组件使用详解" style="margin-top: 0.8em; margin-bottom: 0.8em; font-size: 2.6em; font-family: inherit; padding: 0px;">elementUI select组件使用详解</h1><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial;"><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>动态生成option选项</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>option选项绑定对应的文本值和value值</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>作为表单项目，新增、编辑功能</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>对选项改变后触发相关事件</strong></li></ul><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs lasso has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>div id<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"app"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span> :model<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span>  ref<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span> label<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-width</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"100px"</span> class<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"demo-ruleForm"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span> label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"姓名选择"</span> prop<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"typeId"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-model</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form.typeId"</span> placeholder<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"请选择"</span> @change<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"change"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
                <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-for</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item in items"</span> :label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.name"</span> :value<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.id"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"add()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>新增<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"edit()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>编辑<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"cancel()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>取消<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/div<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li></ul></pre><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span><span class="javascript" style="margin: 0px; padding: 0px;">
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">var</span> vm = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> Vue({
        el:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"#app"</span>,
        mounted(){
            <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.getData();
        },
        data:{
            form:{
                typeId:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">''</span>
            },
            items:[],
            datas:[{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"senbo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'1'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"muse"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'2'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"bobo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'3'</span>}]
        },
        methods:{
            getData:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.items = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.datas; 

            },
            add:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;
            },
            cancel(){
                 <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;   
            },
            change:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                console.log(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId)
            },
            edit:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId =<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1"</span>;
            }
        }
    })
</span><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul></pre></div></div></article><div class="article_copyright" style="margin: 0px 0px -20px; padding: 0px 20px 30px; border-bottom: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); font-size: 14px; color: rgb(120, 128, 135); clear: both; overflow: hidden; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;">转自http://blog.csdn.net/museions/article/details/77824361</div>', type='article', tags='null', categories='', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Thu Oct 12 10:41:07 CST 2017, gtmModified=Thu Oct 12 10:41:07 CST 2017}, ContentDO{cid=112, title=' SpringBoot 在启动时运行代码', slug='null', created=null, modified=null, content='<p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">在Spring boot项目的实际开发中，我们有时需要项目服务启动时加载一些数据或预先完成某些动作。为了解决这样的问题，Spring&nbsp;boot 为我们提供了一个方法：通过实现接口 CommandLineRunner 来实现这样的需求。</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现方式：只需要一个类即可，无需其他配置。&nbsp;</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现步骤：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">1.创建实现接口 CommandLineRunner 的类 MyStartupRunnerTest</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 655px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 723px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">1</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">2.创建实现接口CommandLineRunner 的类 MyStartupRunnerTest2</p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 1094px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 1160px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">2</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest2&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">3.启动Spring boot后查看控制台输出信息，如下所示：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_plain" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[plain]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 563px; top: 1532px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 725px; top: 1597px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest2&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">4.Application启动类代码略。</p><p><span style="color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;">说明：CommandLineRunner接口的运行顺序是依据@Order注解的value由小到大执行，即value值越小优先级越高。</span><br></p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=1, status=1, author='bootdo', gtmCreate=Tue Sep 26 15:18:15 CST 2017, gtmModified=Tue Sep 26 15:18:15 CST 2017}, ContentDO{cid=111, title='Springmvc提交日期类型参数', slug='null', created=null, modified=null, content='<ol style="color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;"><li><p style="margin-bottom: 1.1em; padding: 0px;">背景介绍&nbsp;<br>在springmvc框架中，前台传入到后台的form会经过springmvc自动封装到pojo类中，后台接受的时候可以在参数内直接接受这个java类。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">传参&nbsp;<br>通常情况下，前台的表单的类型诸如int,string等，都会根据pojo中字段的类型自动转换。所以为我们省去了不少麻烦，但很可惜其中不包括日期类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">原因&nbsp;<br>因为日期的格式多种多样，spring自身不适合对其进行封装。好在spring给出了便捷的方法给我们自己转换数据类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">具体实现</p></li></ol><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">在controller层中，加入以下代码段</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@InitBinder</span>
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">public</span> <span class="hljs-keyword" style="color: rgb(0, 0, 136);">void</span> <span class="hljs-title">initBinder</span>(WebDataBinder binder) {
    SimpleDateFormat dateFormat = <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> SimpleDateFormat(<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd"</span>);
    dateFormat.setLenient(<span class="hljs-keyword" style="color: rgb(0, 0, 136);">false</span>);
    binder.registerCustomEditor(Date.class, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> CustomDateEditor(dateFormat, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">true</span>));<span class="hljs-comment" style="color: rgb(136, 0, 0);">//true:允许输入空值，false:不能为空值</span>
}</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">6</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">可以解决这个问题。但是这个时候Date类型的参数是null的话，还是会报错。采用另外一种方式则更好，为null也不会报错，就是把请求参数封装为一个vo类，在对应的类属性上加上注解，这样</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(iso = ISO.DATE_TIME, pattern = <span class="hljs-string" style="color: rgb(0, 136, 0);">"w:yyyy"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date startTime;
或者
<span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(pattern=<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd HH:mm:ss"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date lastLoginDate;</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">另外如果使用验证框架，方法参数这样写(@Valid XxxParam param, BindingResult binding) ，就能直接通过BindingResult得到验证结果了。</p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=1, status=1, author='bootdo', gtmCreate=Mon Sep 25 21:34:51 CST 2017, gtmModified=Mon Sep 25 21:34:51 CST 2017}, ContentDO{cid=110, title='spring boot 图片上传后的图片读取路径在win与linux环境配置的差别', slug='null', created=null, modified=null, content='<ol><li><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">win</p><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"></p><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 296px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///E:/var/spring/uploaded_files/"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><span style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">linux</span><br style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 528px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///var/spring/uploaded_files"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li><li></li></ol></div></li></ol>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=1, status=1, author='bootdo', gtmCreate=Sun Sep 24 09:15:35 CST 2017, gtmModified=Sun Sep 24 09:15:35 CST 2017}, ContentDO{cid=109, title='spring-boot整合ehcache实现缓存机制', slug='null', created=null, modified=null, content='<p><br></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　ehcache提供了多种缓存策略，主要分为内存和磁盘两级，所以无需担心容量问题。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　spring-boot是一个快速的集成框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　由于spring-boot无需任何样板化的配置文件，所以spring-boot集成一些其他框架时会有略微的不同。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　1.spring-boot是一个通过maven管理的jar包的框架，集成ehcache需要的依赖如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
     <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
         <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
      <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>        </pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　具体pom.xml文件如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    xsi:schemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>4.0.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.lclc.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>boot-cache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>0.0.1-SNAPSHOT<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">&lt;!--</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> Inherit defaults from Spring Boot </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">--&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-parent<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>1.1.3.RELEASE<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-web<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-data-jpa<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-thymeleaf<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql-connector-java<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.google.guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>17.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-maven-plugin<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>true<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　2.使用ehcache，我们需要一个ehcache.xml来定义一些cache的属性。</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xsi:noNamespaceSchemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://ehcache.org/ehcache.xsd"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
  updateCheck</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">diskStore </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">path</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="java.io.tmpdir/Tmp_EhCache"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>
           <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">defaultCache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="1000"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="600"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">cache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">name</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="demo"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="100"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="300"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　解释下这个xml文件中的标签。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(1).<span style="color: rgb(128, 0, 0);">diskStore：</span>&nbsp;为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：　　　　<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　　user.home – 用户主目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　 　user.dir&nbsp; – 用户当前工作目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　　　&nbsp; java.io.tmpdir – 默认临时文件路径</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(2).<span style="color: rgb(128, 0, 0);">defaultCache：<span style="color: rgb(0, 0, 0);">默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3).<span style="color: rgb(128, 0, 0);">cache</span>：自定缓存策略，为自定义的缓存策略。参数解释如下：</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　　 cache元素的属性：&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name：缓存名称&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsInMemory：内存中最大缓存对象数&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsOnDisk：硬盘中最大缓存对象数，若是0表示无穷大&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal：true表示对象永不过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk：true表示当内存缓存的对象数目达到了maxElementsInMemory界限后，会把溢出的对象写到硬盘缓存中。注意：如果缓存的对象要写入到硬盘中的话，则该对象必须实现了Serializable接口才行。&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskSpoolBufferSizeMB：磁盘缓存区大小，默认为30MB。每个Cache都应该有自己的一个缓存区。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskPersistent：是否缓存虚拟机重启期数据&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认为120秒&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds： 设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地处于空闲状态&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 timeToLiveSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清除。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。&nbsp;&nbsp;</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　3.将ehcache的管理器暴露给spring的上下文容器，</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　</span></span></p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Configuration
</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">//</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> 标注启动了缓存</span>
<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@EnableCaching
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheConfiguration {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * ehcache 主要的管理器
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean(name </span>= "appEhCacheCacheManager"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager ehCacheCacheManager(EhCacheManagerFactoryBean bean){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager (bean.getObject ());
    }

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 据shared与否的设置,Spring分别通过CacheManager.create()或new CacheManager()方式来创建一个ehcache基地.
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ehCacheManagerFactoryBean(){
        EhCacheManagerFactoryBean cacheManagerFactoryBean </span>= <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ();
        cacheManagerFactoryBean.setConfigLocation (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span> ClassPathResource ("conf/ehcache-app.xml"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">));
        cacheManagerFactoryBean.setShared (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">true</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> cacheManagerFactoryBean;
    }
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Configuration</span>：为spring-boot注解，主要标注此为配置类，优先扫描。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Bean</span>：向spring容器中加入bean。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　至此所有的配置都做好了，通过spring-boot进行集成框架就是这么简单。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　4.使用ehcache</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　使用ehcache主要通过spring的缓存机制，上面我们将spring的缓存机制使用了ehcache进行实现，所以使用方面就完全使用spring缓存机制就行了。<br>　　　　具体牵扯到几个注解：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　@Cacheable：负责将方法的返回值加入到缓存中，参数3<br>　　　　@CacheEvict：负责清除缓存，参数4</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　　参数解释：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的cache的name<br>　　　　key：缓存的key，默认为空，既表示使用方法的参数类型及参数值作为key，支持SpEL<br>　　　　condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　allEntries：CacheEvict参数，true表示清除value中的全部缓存，默认为false</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　不多说，直接上代码：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Service
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span> CacheDemoServiceImpl <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">implements</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheDemoService {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 缓存的key
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String THING_ALL_KEY   = "\"thing_all\""<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * value属性表示使用哪个缓存策略，缓存策略在ehcache.xml
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String DEMO_CACHE_NAME = "demo"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
   
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> create(Thing thing){
        Long id </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> getNextId ();
        thing.setId (id);
        data.put (id, thing);
    } 
      
     @Cacheable(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME,key = "#thing.getId()+'thing'")
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing findById(Long id){
        System.err.println (</span>"没有走缓存！" +<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> id);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> data.get (id);
    }

      @Cacheable(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> List&lt;Thing&gt;<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> findAll(){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Lists.newArrayList (data.values ());
    }
   
   </span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
      @Override
    @CachePut(value </span>= DEMO_CACHE_NAME,key = "#thing.getId()+'thing'"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing update(Thing thing){
        System.out.println (thing);
        data.put (thing.getId (), thing);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> thing;
    }

    @CacheEvict(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> delete(Long id){
        data.remove (id);
    }
   
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　5.只需要通过注解在service层方法上打注解便可以使用缓存，在find**上存入缓存，在delete**,update**上清除缓存。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Sun Sep 24 11:15:18 CST 2017, gtmModified=Sun Sep 24 11:15:18 CST 2017}, ContentDO{cid=108, title='spring boot ehcache整合', slug='null', created=null, modified=null, content='<h3 id="pomxml配置-引入依赖包" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;">pom.xml配置 引入依赖包</h3><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>net.sf.ehcache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>ehcache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li></ul></pre><h3 id="编写配置类设置缓存机制" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;">编写配置类,设置缓存机制</h3><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs java has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Configuration</span>
<span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@EnableCaching</span>
<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> <span class="hljs-class" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">class</span> <span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">CacheConfiguration</span> {</span>

    <span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Bean</span>
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> EhCacheCacheManager <span class="hljs-title" style="margin: 0px; padding: 0px;">ehCacheCacheManager</span>(EhCacheManagerFactoryBean bean) {
        <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">return</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> EhCacheCacheManager(bean.getObject());
    }

    <span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Bean</span>
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> EhCacheManagerFactoryBean <span class="hljs-title" style="margin: 0px; padding: 0px;">ehCacheManagerFactoryBean</span>() {
        EhCacheManagerFactoryBean cacheManagerFactoryBean = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> EhCacheManagerFactoryBean();
        cacheManagerFactoryBean.setConfigLocation(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> ClassPathResource(<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"config/ehcache.xml"</span>));
        cacheManagerFactoryBean.setShared(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">true</span>);
        <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">return</span> cacheManagerFactoryBean;
    }
}</code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">ehcache.xml配置:</p><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-pi" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">ehcache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">xmlns:xsi</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"http://ehcache.org/ehcache.xsd"</span>
    <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">updateCheck</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。
    参数解释如下： user.home – 用户主目录 
    user.dir – 用户当前工作目录 
    java.io.tmpdir – 默认临时文件路径 --&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">diskStore</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">path</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"java.io.tmpdir/Tmp_EhCache"</span> /&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。 --&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- name:缓存名称。 
        maxElementsInMemory:缓存最大数目
        maxElementsOnDisk：硬盘最大缓存个数。 
        eternal:对象是否永久有效，一但设置了，timeout将不起作用。 
        overflowToDisk:是否保存到磁盘，当系统当机时 
        timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使 用，可选属性，默认值是0，也就是可闲置时间无穷大。
        timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅 当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。 
        diskPersistent：是否缓存虚拟机重启期数据Whether the disk store persists between restarts 
        of the Virtual Machine. The default value is false. 
        diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该 有自己的一个缓冲区。 
        diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。 
        memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内 存。默认策略是LRU（最近最少使用）。
        你可以设置为FIFO（先进先出）或是LFU（较少使用）。 
        clearOnFlush：内存数量最大时是否清除。
        memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少 访问次数）。 
         FIFO，first in first out，这个是大家最熟的，先进先出。
         LFU， Less Frequently Used，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面 所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。 
         LRU，Least Recently Used，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地 方来缓存新的元素的时候，
         那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。 --&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">defaultCache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">eternal</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">maxElementsInMemory</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1000"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">overflowToDisk</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">diskPersistent</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>
        <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToIdleSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToLiveSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"600"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">memoryStoreEvictionPolicy</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"LRU"</span> /&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">cache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">name</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"snailAuthCache"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">eternal</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">maxElementsInMemory</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"10000"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">overflowToDisk</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">diskPersistent</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>
        <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToIdleSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToLiveSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">memoryStoreEvictionPolicy</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"LFU"</span> /&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">ehcache</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul><div class="save_code tracking-ad" data-mod="popu_249" style="margin: 0px; padding: 0px; position: absolute; height: 60px; right: 30px; top: 5px; color: rgb(255, 255, 255); cursor: pointer; z-index: 2;"><a style="color: rgb(202, 12, 22); margin: 0px; padding: 0px; outline: none;"><img src="http://static.blog.csdn.net/images/save_snippets.png" style="outline: none; max-width: 100%;"></a></div></pre><h3 id="测试" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;"><br></h3>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Fri Sep 22 17:48:29 CST 2017, gtmModified=Fri Sep 22 17:48:29 CST 2017}, ContentDO{cid=100, title='springboot thymeleaf和shiro 整合——按钮可见性', slug='null', created=null, modified=null, content='<p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">添加依赖</p><pre class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">&lt;<span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">dependency</span>&gt;</span><code class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; display: block; overflow-x: auto; padding: 10px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 4px; font-size: 13px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"> 
   <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">groupId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>com.github.theborakompanioni<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">groupId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>
    <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">artifactId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>thymeleaf-extras-shiro<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">artifactId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>
    <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">version</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span></code>1.2.1<code class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; display: block; overflow-x: auto; padding: 10px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 4px; font-size: 13px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">version</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span> 
<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">dependency</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span></code></pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">&nbsp;</p><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">在shiro的configuration中配置</p><pre class="hljs java" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-meta" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(127, 159, 127);">@Bean</span>
    <span class="hljs-function" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">public</span> ShiroDialect <span class="hljs-title" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">shiroDialect</span><span class="hljs-params" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">()</span> </span>{
        <span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">return</span> <span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">new</span> ShiroDialect();
    }</pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">&nbsp;</p><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">在html中加入xmlns</p><pre class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">&lt;<span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">html</span> <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">lang</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"zh_CN"</span> <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">xmlns:th</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"http://www.thymeleaf.org"</span>
      <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">xmlns:shiro</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"http://www.pollix.at/thymeleaf/shiro"</span>&gt;</span></pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">例子</p><pre class="hljs scala" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;">&lt;button shiro:hasPermission=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"sys:user:add"</span> <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">type</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"button"</span> <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">class</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"btn &nbsp;btn-primary"</span> onclick=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"add()"</span>&gt;
&nbsp;&nbsp; &lt;i <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">class</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"fa fa-plus"</span> aria-hidden=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"true"</span>&gt;&lt;/i&gt;添加
&lt;/button&gt;</pre>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Fri Sep 22 13:24:30 CST 2017, gtmModified=Fri Sep 22 13:24:30 CST 2017}, ContentDO{cid=75, title='基于 Springboot 和 Mybatis 的后台管理系统 BootDo', slug='null', created=null, modified=null, content='<h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">项目介绍</h3><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px 30px; list-style-position: initial; list-style-image: initial; color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><li><p>面向学习型的开源框架，简洁高效，减少过渡封装，展现技术本质</p></li><li><p>Springboot作为基础框架，使用mybatis作为持久层框架</p></li><li><p>使用官方推荐的thymeleaf做为模板引擎，shiro作为安全框架,主流技术，“一网打尽”</p></li><li><p>基于注解的sql写法，零XML，极简配置，一键前后台代码生成</p></li></ul><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">演示地址</span>&nbsp;<a href="http://47.93.239.129/" style="outline: 0px; color: rgb(68, 102, 187);">http://47.93.239.129</a></p><h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">功能简介</h3><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;">1. 用户管理<br>2. 角色管理<br>3. 部门管理<br>4. 菜单管理<br>5. 系统日志<br>6. 代码生成<br>7. 内容管理</p><h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">所用框架</h3><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">前端</span><br>1. Bootstrap<br>2. jQuery<br>3. bootstrap-table<br>4. layer<br>5. jsTree&nbsp;<br>6. summernote<br>7. jquery-validate<br>8. jquery-treegrid</p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">后端</span><br>1. SpringBoot&nbsp;<br>2. MyBatis<br>3. Thymeleaf<br>4. Shiro<br>5. druid</p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">项目截图</span></p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><img height="400" src="https://static.oschina.net/uploads/space/2017/0912/182421_5LaN_3244087.png" width="650" style="border-width: initial; border-style: none; outline: 0px; width: 882px; max-width: -webkit-fit-content; height: auto;"></p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=0, allowPing=0, allowFeed=1, status=1, author='bootdo', gtmCreate=Fri Sep 22 14:44:44 CST 2017, gtmModified=Fri Sep 22 14:44:44 CST 2017}];
2018-05-29 20:40:13 -请求地址 : http://127.0.0.1/login;JSESSIONID=934a9a29-c971-482c-b564-0ca27e02fdec
2018-05-29 20:40:13 -HTTP METHOD : GET
2018-05-29 20:40:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-05-29 20:40:13 -参数 : []
2018-05-29 20:40:13 -耗时 : 13
2018-05-29 20:40:13 -返回值 : java.lang.String>>>>>>	value=[C@78eba9b4;hash=103149417;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:40:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-05-29 20:40:14 -==> Parameters: admin(String)
2018-05-29 20:40:14 -<==      Total: 1
2018-05-29 20:40:14 -请求地址 : http://127.0.0.1/login
2018-05-29 20:40:14 -HTTP METHOD : POST
2018-05-29 20:40:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-05-29 20:40:14 -参数 : [admin, 111111]
2018-05-29 20:40:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-05-29 20:40:14 -==> Parameters: admin(String)
2018-05-29 20:40:14 -<==      Total: 1
2018-05-29 20:40:14 -耗时 : 46
2018-05-29 20:40:14 -返回值 : {msg=操作成功, code=0}
2018-05-29 20:40:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-05-29 20:40:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 20:40:15 -==> Parameters: 1(Long), admin(String), 登录(String), 46(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-05-29 20:40:14.986(Timestamp)
2018-05-29 20:40:15 -请求地址 : http://127.0.0.1/index
2018-05-29 20:40:15 -HTTP METHOD : GET
2018-05-29 20:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-05-29 20:40:15 -参数 : [{}]
2018-05-29 20:40:15 -<==    Updates: 1
2018-05-29 20:40:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-05-29 20:40:15 -==> Parameters: 1(Long)
2018-05-29 20:40:15 -<==      Total: 28
2018-05-29 20:40:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-05-29 20:40:15 -==> Parameters: 138(Long)
2018-05-29 20:40:15 -<==      Total: 1
2018-05-29 20:40:15 -耗时 : 215
2018-05-29 20:40:15 -返回值 : java.lang.String>>>>>>	value=[C@1ac5deb1;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:40:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 20:40:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 215(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-05-29 20:40:15.345(Timestamp)
2018-05-29 20:40:15 -<==    Updates: 1
2018-05-29 20:40:15 -请求地址 : http://127.0.0.1/main
2018-05-29 20:40:15 -HTTP METHOD : GET
2018-05-29 20:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-05-29 20:40:15 -参数 : []
2018-05-29 20:40:15 -耗时 : 0
2018-05-29 20:40:15 -返回值 : java.lang.String>>>>>>	value=[C@4ea670c9;hash=3343801;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:40:15 -请求地址 : http://127.0.0.1/oa/notify/message
2018-05-29 20:40:15 -HTTP METHOD : GET
2018-05-29 20:40:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-05-29 20:40:15 -参数 : []
2018-05-29 20:40:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-05-29 20:40:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-05-29 20:40:15 -<==      Total: 0
2018-05-29 20:40:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-05-29 20:40:15 -==> Parameters: 1(Long), 0(String)
2018-05-29 20:40:15 -<==      Total: 1
2018-05-29 20:40:15 -耗时 : 97
2018-05-29 20:40:15 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=0;rows=[];
2018-05-29 20:40:15 -请求地址 : http://127.0.0.1/main
2018-05-29 20:40:15 -HTTP METHOD : GET
2018-05-29 20:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-05-29 20:40:15 -参数 : []
2018-05-29 20:40:15 -耗时 : 1
2018-05-29 20:40:15 -返回值 : java.lang.String>>>>>>	value=[C@4ea670c9;hash=3343801;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:40:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2018-05-29 20:57:21 -请求地址 : http://127.0.0.1/
2018-05-29 20:57:21 -HTTP METHOD : GET
2018-05-29 20:57:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-05-29 20:57:21 -参数 : [{}]
2018-05-29 20:57:21 -耗时 : 0
2018-05-29 20:57:21 -返回值 : java.lang.String>>>>>>	value=[C@43990ce1;hash=-1820313805;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:57:21 -请求地址 : http://127.0.0.1/blog
2018-05-29 20:57:21 -HTTP METHOD : GET
2018-05-29 20:57:21 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-05-29 20:57:21 -参数 : []
2018-05-29 20:57:21 -耗时 : 1
2018-05-29 20:57:21 -返回值 : java.lang.String>>>>>>	value=[C@5868f4ff;hash=-1296643741;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:57:22 -请求地址 : http://127.0.0.1/blog/open/list
2018-05-29 20:57:22 -HTTP METHOD : GET
2018-05-29 20:57:22 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-05-29 20:57:22 -参数 : [{type=article, limit=10, offset=0}]
2018-05-29 20:57:22 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-05-29 20:57:22 -==> Parameters: article(String)
2018-05-29 20:57:22 -<==      Total: 10
2018-05-29 20:57:22 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-05-29 20:57:22 -==> Parameters: article(String)
2018-05-29 20:57:22 -<==      Total: 1
2018-05-29 20:57:22 -耗时 : 60
2018-05-29 20:57:22 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=10;rows=[ContentDO{cid=121, title='Spring Cloud下微服务权限方案', slug='null', created=null, modified=null, content='<p><br></p><div class="Layout-navbarHolder" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; height: 59px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><header class="Navbar ScrollBackFixed" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; contain: layout; -webkit-box-pack: justify; justify-content: space-between; height: 59px; width: 1519.2px; border-bottom: 1px solid rgba(0, 0, 0, 0.08); color: rgb(128, 128, 128); background: rgba(255, 255, 255, 0.97); z-index: 2; position: fixed; border-top-color: rgba(0, 0, 0, 0.08); border-right-color: rgba(0, 0, 0, 0.08); border-left-color: rgba(0, 0, 0, 0.08); transform: translateY(-100%); will-change: transform;"><div class="Navbar-functionality" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: absolute; right: 0px; top: 0px; height: 58px; align-self: stretch;"><a class="Navbar-write" style="box-sizing: inherit; color: inherit; display: flex; -webkit-box-align: center; align-items: center; padding: 0px 10px; white-space: nowrap; transition: color 0.2s;"><span class="icon icon-ic_nav_new" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; margin-right: 3px; font-family: icomoon !important;"></span>写文章</a><button class="Button Navbar-loginButon Button--blue" type="button" style="box-sizing: inherit; padding: 0px 16px; color: rgb(0, 128, 255); font-size: 14px; line-height: 30px; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-width: 1px; border-style: solid; border-color: rgb(0, 128, 255); -webkit-appearance: none; border-radius: 4px; height: 32px; margin-right: 16px; margin-left: 6px; width: 72px;">登录</button></div></header></div><div style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"></div><div class="Layout-main av-card av-paddingBottom av-bodyFont Layout-titleImage--normal" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin: 22px auto 0px; padding: 0px; width: 660px; z-index: 1; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><div class="PostIndex-header av-paddingTop av-card" data-zop="{&quot;authorName&quot;:&quot;老A&quot;,&quot;itemId&quot;:&quot;29345083&quot;,&quot;title&quot;:&quot;Spring Cloud下微服务权限方案&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-module="PostItem" data-za-module-info="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;29345083&quot;}}}" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><div class="TitleImage" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin-bottom: 22px;"><img alt="Spring Cloud下微服务权限方案" src="https://pic4.zhimg.com/v2-32e374b99a4332ca8bd52fca9d090617_r.png" class="TitleImage-imagePure TitleImage-imagePure--fixed" height="396px" style="box-sizing: inherit; overflow: hidden; width: 660px; display: block;"></div><h1 class="PostIndex-title av-paddingSide av-titleFont" style="box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; font-size: 32px; line-height: 1.3;">Spring Cloud下微服务权限方案</h1><div class="PostIndex-author" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: relative; font-size: 14px; color: rgb(128, 128, 128); margin-top: 22px;"><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" style="box-sizing: inherit; color: inherit;"><img class="Avatar-hemingway PostIndex-authorAvatar Avatar--xs" alt="老A" src="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_xs.jpg" srcset="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_l.jpg 2x" style="box-sizing: inherit; overflow: hidden; width: 36px; height: 36px; border-radius: 50%; margin-right: 12px;"></a><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" class="PostIndex-authorName" style="box-sizing: inherit; color: rgb(128, 128, 128); min-width: 0px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">老A</a><span class="Bull" style="box-sizing: inherit; margin: 0px 6px;"></span><div class="HoverTitle" data-hover-title="2017 年 9月 14 日星期四晚上 7 点 12 分" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><time datetime="Thu Sep 14 2017 19:12:26 GMT+0800 (中国标准时间)" style="box-sizing: inherit;">1 个月前</time></div></div></div><div class="RichText PostIndex-content av-paddingSide av-card" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; word-break: break-word; margin: 30px 0px; line-height: 1.7;"><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">背景</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">从传统的单体应用转型Spring Cloud的朋友都在问我，Spring Cloud下的微服务权限怎么管？怎么设计比较合理？从大层面讲叫服务权限，往小处拆分，分别为三块：用户认证、用户权限、服务校验。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户认证</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用可能习惯了session的存在，而到了Spring cloud的微服务化后，session虽然可以采取分布式会话来解决，但终究不是上上策。开始有人推行Spring Cloud Security结合很好的OAuth2，后面为了优化OAuth 2中Access Token的存储问题，提高后端服务的可用性和扩展性，有了更好Token验证方式JWT（JSON Web Token）。这里要强调一点的是，OAuth2和JWT这两个根本没有可比性，是两个完全不同的东西。 OAuth2是一种授权框架，而JWT是一种认证协议</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2认证框架</h2><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2中包含四个角色：</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源拥有者(Resource Owner)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源服务器(Resource Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权服务器(Authorization Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端(Client)</li></ul><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2包含4种授权模式</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权码（认证码）模式 （Authorization code)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">简化（隐形）模式 (Impilict</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">用户名密码模式 (Resource Owner Password Credential)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端模式 (Client Credential)</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，OAuth2的运行流程如下图，摘自RFC 6749：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+--------+                               +---------------+
|        |--(A)- Authorization Request -&gt;|   Resource    |
|        |                               |     Owner     |
|        |&lt;-(B)-- Authorization Grant ---|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(C)-- Authorization Grant --&gt;| Authorization |
| Client |                               |     Server    |
|        |&lt;-(D)----- Access Token -------|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(E)----- Access Token ------&gt;|    Resource   |
|        |                               |     Server    |
|        |&lt;-(F)--- Protected Resource ---|               |
+--------+                               +---------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">我们在Spring Cloud OAuth2中，所有访问微服务资源的请求都在Http Header中携带Token，被访问的服务接下来再去请求授权服务器验证Token的有效性，目前这种方式，我们需要两次或者更多次的请求，所有的Token有效性校验都落在的授权服务器上，对于我们系统的水平扩展成为一个非常大的瓶颈。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">JWT认证协议</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">授权服务器将用户信息和授权范围序列化后放入一个JSON字符串，然后使用Base64进行编码，最终在授权服务器用私钥对这个字符串进行签名，得到一个JSON Web Token。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">假设其他所有的资源服务器都将持有一个RSA公钥，当资源服务器接收到这个在Http Header中存有Token的请求，资源服务器就可以拿到这个Token，并验证它是否使用正确的私钥签名（是否经过授权服务器签名，也就是验签）。验签通过，反序列化后就拿到Toekn中包含的有效验证信息。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，主体运作流程图如下：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+-----------+                                     +-------------+
|           |       1-Request Authorization       |             |
|           |------------------------------------&gt;|             |
|           |     grant_type&amp;username&amp;password    |             |--+
|           |                                     |Authorization|  | 2-Gen
|           |                                     |Service      |  |   JWT
|           |       3-Response Authorization      |             |&lt;-+
|           |&lt;------------------------------------| Private Key |
|           |    access_token / refresh_token     |             |
|           |    token_type / expire_in           |             |
|  Client   |                                     +-------------+
|           |                                 
|           |                                     +-------------+
|           |       4-Request Resource            |             |
|           |-----------------------------------&gt; |             |
|           | Authorization: bearer Access Token  |             |--+
|           |                                     | Resource    |  | 5-Verify
|           |                                     | Service     |  |  Token
|           |       6-Response Resource           |             |&lt;-+
|           |&lt;----------------------------------- | Public Key  |
+-----------+                                     +-------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">通过上述的方式，我们可以很好地完成服务化后的用户认证。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户权限</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用的权限拦截，大家都喜欢shiro，而且用的颇为顺手。可是一旦拆分后，这权限开始分散在各个API了，shiro还好使吗？笔者在项目中，并没有用shiro。前后端分离后，交互都是token，后端的服务无状态化，前端按钮资源化，权限放哪儿管好使？</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">抽象与设计</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在介绍灵活的核心设计前，先给大家普及一个入门的概念：RBAC（Role-Based Access Control，基于角色的访问控制），就是用户通过角色与权限进行关联。简单地说，一个用户拥有若干角色，每一个角色拥有若干权限。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">RBAC其实是一种分析模型，主要分为：基本模型RBAC0（Core RBAC）、角色分层模型RBAC1（Hierarchal RBAC）、角色限制模型RBAC2（Constraint RBAC）和统一模型RBAC3（Combines RBAC）。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">更多详情大家可以了解：<a href="http://link.zhihu.com/?target=http%3A//blog.csdn.net/zwk626542417/article/details/46726491" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">RBAC权限模型<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">核心UML</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" data-rawwidth="1168" data-rawheight="532" class="origin_image zh-lightbox-thumb lazy" width="1168" data-original="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_r.png" data-actualsrc="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">这是笔者通过多种业务场景后抽象的RBAC关系图</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">类说明</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Group</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">群或组，拥有一定数量权限的集合，亦可以是权限的载体。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">子类：User（用户）、Role（角色）、Position（岗位）、Unit（部门），通过用户的特定构成，形成不同业务场景的群或组，而通过对群或组的父类授权，完成了用户的权限获取。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Permission</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限，拥有一定数量资源的集成，亦可以是资源的载体。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Resources</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限下有资源，资源的来源有：Menu（菜单）、Button（动作权限）、页面元素（按钮、tab等）、数据权限等</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Program</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">程序，相关权限控制的呈现载体，可以在多个菜单中挂载。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">常见web程序基本构成</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" data-rawwidth="873" data-rawheight="492" class="origin_image zh-lightbox-thumb lazy" width="873" data-original="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_r.png" data-actualsrc="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">模型与微服务的关系</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">如果把Spring Cloud服务化后的所有api接口都定义为上文的Resources，那么我们可以看到这么一个情况。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">比如一个用户的增删改查，我们的页面会这么做</p><img src="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" data-rawwidth="2880" data-rawheight="1460" class="origin_image zh-lightbox-thumb lazy" width="2880" data-original="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_r.png" data-actualsrc="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">页面元素资源编码资源URI资源请求方式查询user_btn_get/api/user/{id}GET增加user_btn_add/api/userPOST编辑user_btn_edit/api/user/{id}PUT删除user_btn_del/api/user/{id}DELETE</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在抽象成上述的映射关系后，我们的前后端的资源有了参照，我们对于用户组的权限授权就容易了。比如我授予一个用户增加、删除权限。在前端我们只需要检验该资源编码的有无就可以控制按钮的显示和隐藏，而在后端我们只需要统一拦截判断该用户是否具有URI和对应请求方式即可。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">至于权限的统一拦截是放置在Zuul这个网关上，还是落在具体的后端服务的拦截器上（Filter、Inteceptor），都可以轻而易举地实现。不在局限于代码的侵入性。放置Zuul流程图如下：</p><img src="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" data-rawwidth="1426" data-rawheight="710" class="origin_image zh-lightbox-thumb lazy" width="1426" data-original="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_r.png" data-actualsrc="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">要是权限的统一拦截放置在Zuul上，会有一个问题，那就是后端服务安不安全，服务只需要通过注册中心，即可对其他服务进行调用。这里就涉及到后面的第三个模块，服务之间的鉴权。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">服务之间的鉴权</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">因为我们都知道服务之间开源通过注册中心寻到客户端后，直接远程过程调用的。对于生产上的各个服务，一个个敏感性的接口，我们更是需要加以保护。主题的流程如下图：</p><img src="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" data-rawwidth="1700" data-rawheight="926" class="origin_image zh-lightbox-thumb lazy" width="1700" data-original="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_r.png" data-actualsrc="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">笔者的实现方式是基于Spring Cloud的FeignClient Inteceprot（自动申请服务token、传递当前上下文）和Mvc Inteceptor（服务token校验、更新当前上下文）来实现，从而对服务的安全性做进一步保护。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">结合Spring Cloud的特性后，整体流程图如下：</p><img src="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" data-rawwidth="2182" data-rawheight="1638" class="origin_image zh-lightbox-thumb lazy" width="2182" data-original="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_r.png" data-actualsrc="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">优化点</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">虽然通过上述的用户合法性检验、用户权限拦截以及服务之间的鉴权，保证了Api接口的安全性，但是其间的Http访问频率是比较高的，请求数量上来的时候，慢的问题是就会特别明显。可以考虑一定的优化策略，比如用户权限缓存、服务授权信息的派发与混存、定时刷新服务鉴权Token等。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">结语</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">上述是笔者在项目里的大体思路，有兴趣的朋友可以借鉴我的开源项目，欢迎star：</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-security%25EF%25BC%2588Jwt%25E3%2580%2581%25E7%2594%25A8%25E6%2588%25B7%25E6%259D%2583%25E9%2599%2590%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-security（Jwt、用户权限）<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">github：<a href="http://link.zhihu.com/?target=https%3A//github.com/wxiaoqi/ace-security" class=" external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;"><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">https://</span><span class="visible" style="box-sizing: inherit;">github.com/wxiaoqi/ace-</span><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">security</span><span class="ellipsis" style="box-sizing: inherit;"></span><span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-gate%25EF%25BC%2588%25E6%259C%258D%25E5%258A%25A1%25E9%2589%25B4%25E6%259D%2583%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-gate（服务鉴权）</a></li></ul></div></div>', type='article', tags='null', categories='', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Wed Oct 25 12:28:19 CST 2017, gtmModified=Wed Oct 25 12:28:19 CST 2017}, ContentDO{cid=119, title='Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）', slug='null', created=null, modified=null, content='<h1 class="title" style="font-size: 34px; margin-top: 20px; margin-bottom: 0px; font-family: -apple-system, &quot;SF UI Display&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 700; line-height: 1.3; color: rgb(51, 51, 51); word-break: break-word !important;">Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）</h1><div data-note-content="" class="show-content" style="color: rgb(47, 47, 47); font-size: 16px; line-height: 1.7; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; word-break: break-word !important;"><blockquote style="padding-top: 20px; padding-bottom: 20px; margin-bottom: 25px; font-size: 16px; border-left-width: 6px; border-left-color: rgb(180, 180, 180); background-color: rgb(247, 247, 247); line-height: 30px; word-break: break-word !important;"><ul style="padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">Cvte提前批</li><li style="line-height: 30px; margin-bottom: 10px;">阿里内推</li><li style="line-height: 30px; margin-bottom: 10px;">便利蜂内推</li><li style="line-height: 30px; margin-bottom: 10px;">小米内推</li><li style="line-height: 30px; margin-bottom: 10px;">金山wps内推</li><li style="line-height: 30px; margin-bottom: 10px;">多益网络</li><li style="line-height: 30px; margin-bottom: 10px;">拼多多学霸批</li><li style="line-height: 30px; margin-bottom: 10px;">搜狗校招</li><li style="line-height: 30px; margin-bottom: 10px;">涂鸦移动</li><li style="line-height: 30px; margin-bottom: 10px;">中国电信it研发中心</li><li style="line-height: 30px; margin-bottom: 10px;">中兴</li><li style="line-height: 30px; margin-bottom: 10px;">华为</li><li style="line-height: 30px; margin-bottom: 10px;">苏宁内推</li><li style="line-height: 30px; margin-bottom: 10px;">美团内推</li><li style="line-height: 30px; margin-bottom: 10px;">百度</li><li style="line-height: 30px; margin-bottom: 10px;">腾讯</li><li style="line-height: 30px; margin-bottom: 10px;">招商银行信用卡</li><li style="line-height: 30px; margin-bottom: 10px;">招银网络科技</li><li style="line-height: 30px; margin-bottom: 10px;">网易</li><li style="line-height: 30px; margin-bottom: 0px;">Vivo</li></ul></blockquote><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Cvte提前批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍你的项目</li><li style="line-height: 30px; margin-bottom: 10px;">加密解密了解么？几种算法，讲一下你了解的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程了解么？什么是线程安全？</li><li style="line-height: 30px; margin-bottom: 10px;">说一个你最熟悉的设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你项目中用到了哪些设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">Java的hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的线程安全性，什么是线程安全的？如何实现线程安全</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍项目</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的数据库引擎，区别特点</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解？讲一下最熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">写一个单例模式，答主写的是双检查锁单例，问了为什么用Volatile，synchronize移到方法最外面会怎么样？</li><li style="line-height: 30px; margin-bottom: 10px;">单例模式在你项目里哪些应用？</li><li style="line-height: 30px; margin-bottom: 10px;">数据连接池</li><li style="line-height: 30px; margin-bottom: 10px;">对高负载有了解么</li><li style="line-height: 30px; margin-bottom: 10px;">你意向的技术方向是哪块？（答主回答的高并发，然后面试官说他是做高负载的）</li><li style="line-height: 30px; margin-bottom: 10px;">对高并发有了解么？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">阿里内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">听说你有博客，博客里大概有什么内容？</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍，最复杂的表</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap为什么大小是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">介绍一下红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Arraylist的原理</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计判断论文抄袭的系统</li><li style="line-height: 30px; margin-bottom: 10px;">堆排序的原理</li><li style="line-height: 30px; margin-bottom: 10px;">抽象工厂和工厂方法模式的区别</li><li style="line-height: 30px; margin-bottom: 10px;">工厂模式的思想</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">哪里用到了工厂模式</li><li style="line-height: 30px; margin-bottom: 10px;">Forward和redirect的区别</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">1， 自我介绍<br>2， 项目介绍<br>3， 项目架构<br>4， 项目难点<br>5， Synchronize关键字为什么jdk1.5后效率提高了<br>6， 线程池的使用时的注意事项<br>7， Spring中autowire和resourse关键字的区别<br>8， Hashmap的原理<br>9， Hashmap的大小为什么指定为2的幂次<br>10， 讲一下线程状态转移图<br>11， 消息队列了解么<br>12， 分布式了解么</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">便利蜂内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">volatile和synchronized</li><li style="line-height: 30px; margin-bottom: 10px;">来个算法题：一个无序数组，其中一个数字出现的次数大于其他数字之和，求这个数字 （主元素）</li><li style="line-height: 30px; margin-bottom: 10px;">答完再来一个：一个数组，有正有负，不改变顺序的情况下，求和最大的最长子序列</li><li style="line-height: 30px; margin-bottom: 10px;">项目用到什么数据库？隔离级别？每个隔离级别各做了什么</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引？mysql不同引擎索引的区别</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收算法的过程</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的垃圾收集器？ Cms收集器的过程</li><li style="line-height: 30px; margin-bottom: 10px;">怎样进入老年代？</li><li style="line-height: 30px; margin-bottom: 10px;">平时用到了什么设计模式？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你最熟的两个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">用过什么系统？shell写过脚本吗？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">小米内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">看你最近博客写的是redis，介绍redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap中jdk1.8之后做了哪些优化</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收的过程</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数设置</li><li style="line-height: 30px; margin-bottom: 10px;">项目中的优化</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">金山wps内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对Java的面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">对java多线程的理解</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式的理解</li><li style="line-height: 30px; margin-bottom: 10px;">讲几个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">对算法有什么了解？答主先回答了动态规划，解释了一下dp的思想</li><li style="line-height: 30px; margin-bottom: 10px;">快排的思想讲一下</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp怎么保证可靠传输（中间穿插了好多小问题）</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp的拥塞控制</li><li style="line-height: 30px; margin-bottom: 10px;">让你设计一个即时聊天的系统</li><li style="line-height: 30px; margin-bottom: 10px;">支付宝转账，是如何实现，几个小时通知转账成功的（面试官想让回答长连接，答主一直没get到点）</li><li style="line-height: 30px; margin-bottom: 10px;">解释一下长连接</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">多益网络</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">介绍多态</li><li style="line-height: 30px; margin-bottom: 10px;">Java新建线程有哪几种方式</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">看过框架源码么</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">拼多多学霸批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：一棵二叉排序树，给定一个数，找到与给定数差值最小的数</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个系统，解决抢购时所需要的大量的短链接的功能，如何保证高并发，如何设计短链接</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">代码量多少</li><li style="line-height: 30px; margin-bottom: 10px;">给了一张纸，各种名词，会的写出来</li><li style="line-height: 30px; margin-bottom: 10px;">然后给它解释那些会的</li><li style="line-height: 30px; margin-bottom: 10px;">设计题：设计一个系统，记录qq用户前一天的登录状态，提供16g内存和2tb的硬盘，要做到查询指定qq号的前一天的登录状态，快速查询O(1)复杂度</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">搜狗校招</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）：</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：两个排序的数组A和B分别含有m和n个数，找到两个排序数组的中位数，答主用的二分，时间复杂度为O(log (m+n))。结果面试官不满意，让用归并的思想做，时间复杂度其实更高了</li><li style="line-height: 30px; margin-bottom: 10px;">介绍网络编程</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">涂鸦移动</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">索引使用的注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的引擎</li><li style="line-height: 30px; margin-bottom: 10px;">Java垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Java的finalize，finally，final三个关键字的区别和应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">String类可以被继承么<br>手撕算法：假设你是一个专业的窃贼，准备沿着一条街打劫房屋。每个房子都存放着特定金额的钱。你面临的唯一约束条件是：相邻的房子装着相互联系的防盗系统，且 当相邻的两个房子同一天被打劫时，该系统会自动报警。<br>给定一个非负整数列表，表示每个房子中存放的钱， 算一算，如果今晚去打劫，你最多可以得到多少钱 在不触动报警装置的情况下。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对游戏的了解</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法题：给一个整数数组，找到两个数使得他们的和等于一个给定的数 target。</li><li style="line-height: 30px; margin-bottom: 10px;">红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中国电信it研发中心</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里用的什么服务器</li><li style="line-height: 30px; margin-bottom: 10px;">自己写一个tomcat服务器，你会怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">分布式服务器会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决session一致性缓存的问题</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的优势和特点</li><li style="line-height: 30px; margin-bottom: 10px;">一千万用户并发抢购，怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">如果成功的用户有10万，redis存不下怎么处理</li><li style="line-height: 30px; margin-bottom: 10px;">你项目中的难点</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍spring中的熟悉的注解</li><li style="line-height: 30px; margin-bottom: 10px;">让你实现autowire注解的功能你会如何实现</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化有哪些方式，具体原理</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中兴</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">专业面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的设计模式，讲两个</li><li style="line-height: 30px; margin-bottom: 10px;">Java collection类，集合，讲两个你了解的，说实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">Java线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">你觉得你在你实验室处于什么水平</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">综合面试（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">说好的综合面试纯聊天呢？<br>1． 自我介绍<br>2． 项目介绍<br>3． 说一下你知道的设计模式<br>4． 画一个策略模式的uml图<br>5． Java多线程的理解<br>6． 内存屏障是什么<br>7． 数据库索引<br>8． 项目中的优化<br>9． 然后开始聊人生<br>10． 你的缺点，你最不喜欢什么样的人，你的家庭等等</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">华为</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目架构</li><li style="line-height: 30px; margin-bottom: 10px;">项目一个完整的执行流程（由于我是搞java的，而面试官是搞c的，所以全程尬聊）</li><li style="line-height: 30px; margin-bottom: 10px;">项目优化</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目进度</li><li style="line-height: 30px; margin-bottom: 10px;">平常的爱好</li><li style="line-height: 30px; margin-bottom: 10px;">感觉面试官也不是搞java的，所以又是一阵尬聊</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">苏宁内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">面过哪些公司了</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer了</li><li style="line-height: 30px; margin-bottom: 10px;">聊到多益，于是开始聊最近微博上很火的多益老板</li><li style="line-height: 30px; margin-bottom: 10px;">得出结论，我和面试官都觉得多益老板三观有问题，但做游戏就是要偏执的人</li><li style="line-height: 30px; margin-bottom: 10px;">你博客主要哪方面的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程并发包了解么</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下countDownLatch</li></ol><p style="margin-bottom: 25px; word-break: break-word !important;">苏宁聊了20分钟八卦就面完了，一轮技术面</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">美团内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis介绍</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis源码么</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis集群么</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">hashmap容量为什么是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">hashset的源码</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">你重写过hashcode和equals么，要注意什么</li><li style="line-height: 30px; margin-bottom: 10px;">假设现在一个学生类，有学号和姓名，我现在hashcode方法重写的时候，只将学号参与计算，会出现什么情况？</li><li style="line-height: 30px; margin-bottom: 10px;">往set里面put一个学生对象，然后将这个学生对象的学号改了，再put进去，可以放进set么？并讲出为什么</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化？有哪些方式，原理是什么？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下稳定的排序算法和不稳定的排序算法</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下快速排序的思想</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下数据的acid</li><li style="line-height: 30px; margin-bottom: 10px;">什么是一致性</li><li style="line-height: 30px; margin-bottom: 10px;">什么是隔离性</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">每个隔离级别是如何解决</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql要加上nextkey锁，语句该怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">Java的内存模型，垃圾回收</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的参数</li><li style="line-height: 30px; margin-bottom: 10px;">每个参数解释一遍</li><li style="line-height: 30px; margin-bottom: 10px;">然后面试官设置了每个参数，给了是个线程，让描述出完整的线程池执行的流程</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和IO有什么区别</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop怎么实现</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop有哪些实现方式</li><li style="line-height: 30px; margin-bottom: 10px;">动态代理的实现方式和区别</li><li style="line-height: 30px; margin-bottom: 10px;">Linux了解么</li><li style="line-height: 30px; margin-bottom: 10px;">怎么查看系统负载</li><li style="line-height: 30px; margin-bottom: 10px;">Cpu load的参数如果为4，描述一下现在系统处于什么情况</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，查找磁盘上最大的文件的命令</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，如何查看系统日志文件</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：leeetcode原题 22，Generate Parentheses，给定 n 对括号，请写一个函数以将其生成新的括号组合，并返回所有组合结果。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">三面没怎么问技术，问了很多技术管理方面的问题</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目成员</li><li style="line-height: 30px; margin-bottom: 10px;">当意见不一致时，如何沟通并说服开发成员，并举个例子</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证项目的进度</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">非聚簇索引和聚簇索引</li><li style="line-height: 30px; margin-bottom: 10px;">索引的使用注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">联合索引</li><li style="line-height: 30px; margin-bottom: 10px;">从底层解释最左匹配原则</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql对联合索引有优化么？会自动调整顺序么？哪个版本开始优化？</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化的方式和原理</li><li style="line-height: 30px; margin-bottom: 10px;">技术选型，一个新技术和一个稳定的旧技术，你会怎么选择，选择的考虑有哪些</li><li style="line-height: 30px; margin-bottom: 10px;">说你印象最深的美团点评技术团队的三篇博客</li><li style="line-height: 30px; margin-bottom: 10px;">最近在学什么新技术</li><li style="line-height: 30px; margin-bottom: 10px;">你是怎么去接触一门新技术的</li><li style="line-height: 30px; margin-bottom: 10px;">会看哪些书</li><li style="line-height: 30px; margin-bottom: 10px;">怎么选择要看的书</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">百度</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Java中的多态</li><li style="line-height: 30px; margin-bottom: 10px;">Object类下的方法</li><li style="line-height: 30px; margin-bottom: 10px;">Finalize的作用和使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">为什么要同时重写hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">不同时重写会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap如何变线程安全，每种方式的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数你知道的说一下</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解的说一下啊</li><li style="line-height: 30px; margin-bottom: 10px;">手撕一个单例模式</li><li style="line-height: 30px; margin-bottom: 10px;">快速排序的思想讲一下</li><li style="line-height: 30px; margin-bottom: 10px;">给个数组，模拟快排的过程</li><li style="line-height: 30px; margin-bottom: 10px;">手写快排</li><li style="line-height: 30px; margin-bottom: 10px;">设计题，一个图书馆管理系统，数据库怎么设计，需求自己定</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的特点</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务了解么</li><li style="line-height: 30px; margin-bottom: 10px;">反爬虫的机制，有哪些方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：反转单链表</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：实现类似微博子结构的数据结构，输入一系列父子关系，输出一个类似微博评论的父子结构图</li><li style="line-height: 30px; margin-bottom: 10px;">手写java多线程</li><li style="line-height: 30px; margin-bottom: 10px;">手写java的soeket编程，服务端和客户端</li><li style="line-height: 30px; margin-bottom: 10px;">进程间的通信方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法： 爬楼梯，写出状态转移方程</li><li style="line-height: 30px; margin-bottom: 10px;">智力题：时针分针什么时候重合</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">由于三面面试官不懂java，我不熟c加加，所以全程尬聊</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：给定一个数字三角形，找到从顶部到底部的最小路径和。每一步可以移动到下面一行的相邻数字上。</li><li style="line-height: 30px; margin-bottom: 10px;"></li><li style="line-height: 30px; margin-bottom: 10px;">然后继续在这个问题上扩展</li><li style="line-height: 30px; margin-bottom: 10px;">求出最短那条的路径</li><li style="line-height: 30px; margin-bottom: 10px;">递归求出所有的路径</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式讲一下熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">会不会滥用设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">多线程条件变量为什么要在while体里</li><li style="line-height: 30px; margin-bottom: 10px;">你遇到什么挫折</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">腾讯</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的作用，你的理解</li><li style="line-height: 30px; margin-bottom: 10px;">多线程的理解，如何保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">mysql数据库的引擎和区别</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：千万用户抢购，如何处理高并发，并且有一个链接，指向前一天抢购成功的用户，如何设计这个系统和数据库</li><li style="line-height: 30px; margin-bottom: 10px;">如果后台处理抢购请求的服务器，每次最多承受200的负载，系统该怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：最小公倍数和最大公约数</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里一个完整请求的流程</li><li style="line-height: 30px; margin-bottom: 10px;">项目的优化</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate和mybatis的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么用ssh框架</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的容灾备份</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和memcache 的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么选择redis</li><li style="line-height: 30px; margin-bottom: 10px;">Java的full gc</li><li style="line-height: 30px; margin-bottom: 10px;">Full gc会导致什么问题</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招商银行信用卡</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">访问者模式</li><li style="line-height: 30px; margin-bottom: 10px;">装饰者模式</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer</li><li style="line-height: 30px; margin-bottom: 10px;">为什么还来我们这</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招银网络科技</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">写一个两个有序链表合并成一个有序链表</li><li style="line-height: 30px; margin-bottom: 10px;">死锁是什么呢</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决死锁</li><li style="line-height: 30px; margin-bottom: 10px;">http请求流程</li><li style="line-height: 30px; margin-bottom: 10px;">为什么负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">怎么实现负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办？除了热备份还有什么方法</li><li style="line-height: 30px; margin-bottom: 10px;">讲讲你对spring的理解，不要把ioc和aop背给我听</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法：找出两个数组相等的数，不能用其他数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：给定一个数字，一个数组，找出数组中相加等于这两个数的和，不能用数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：如何判断一个树是不是另一颗树的子树</li><li style="line-height: 30px; margin-bottom: 10px;">如何解决并发访问的错误</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">网易</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">I++操作怎么保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个下单系统，下单成功后可以给用户发优惠券</li><li style="line-height: 30px; margin-bottom: 10px;">接上面场景题：服务器挂了，优惠券还没发怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证一致性</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务知道么</li><li style="line-height: 30px; margin-bottom: 10px;">介绍分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">你的职业规划</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Nio的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Channel和buffer</li><li style="line-height: 30px; margin-bottom: 10px;">directBuffer和buffer的区别</li><li style="line-height: 30px; margin-bottom: 10px;">nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">锁的实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决缓存和主存的一致性问题</li><li style="line-height: 30px; margin-bottom: 10px;">缓存还没更新到主存，服务器挂了怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Vivo</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的batch有数量限制么</li><li style="line-height: 30px; margin-bottom: 10px;">Jquery用过么</li><li style="line-height: 30px; margin-bottom: 10px;">Extjs的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">有没有扩展过extjs</li><li style="line-height: 30px; margin-bottom: 10px;">读写锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用读锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用写锁</li><li style="line-height: 30px; margin-bottom: 10px;">Cas的原理，使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的瓶颈</li></ol><div><br></div><div><br></div><div>转自<a href="http://www.jianshu.com//p/72712546648b" target="_blank">http://www.jianshu.com//p/72712546648b</a></div></div>', type='article', tags='null', categories='', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='Bootdo', gtmCreate=Fri Oct 13 13:45:20 CST 2017, gtmModified=Fri Oct 13 13:45:20 CST 2017}, ContentDO{cid=118, title='elementUI select组件使用详解', slug='null', created=null, modified=null, content='<article style="padding: 20px 0px; border-top: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post" style="margin: 0px 0px 50px; padding: 20px 30px 0px; color: rgb(69, 69, 69); overflow: hidden;"><div class="markdown_views" style="margin: 0px; padding: 0px; font-family: &quot;microsoft yahei&quot;; font-size: 15px; color: rgb(63, 63, 63);"><h1 id="elementui-select组件使用详解" style="margin-top: 0.8em; margin-bottom: 0.8em; font-size: 2.6em; font-family: inherit; padding: 0px;">elementUI select组件使用详解</h1><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial;"><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>动态生成option选项</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>option选项绑定对应的文本值和value值</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>作为表单项目，新增、编辑功能</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>对选项改变后触发相关事件</strong></li></ul><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs lasso has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>div id<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"app"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span> :model<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span>  ref<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span> label<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-width</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"100px"</span> class<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"demo-ruleForm"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span> label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"姓名选择"</span> prop<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"typeId"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-model</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form.typeId"</span> placeholder<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"请选择"</span> @change<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"change"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
                <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-for</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item in items"</span> :label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.name"</span> :value<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.id"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"add()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>新增<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"edit()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>编辑<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"cancel()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>取消<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/div<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li></ul></pre><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span><span class="javascript" style="margin: 0px; padding: 0px;">
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">var</span> vm = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> Vue({
        el:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"#app"</span>,
        mounted(){
            <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.getData();
        },
        data:{
            form:{
                typeId:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">''</span>
            },
            items:[],
            datas:[{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"senbo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'1'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"muse"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'2'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"bobo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'3'</span>}]
        },
        methods:{
            getData:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.items = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.datas; 

            },
            add:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;
            },
            cancel(){
                 <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;   
            },
            change:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                console.log(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId)
            },
            edit:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId =<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1"</span>;
            }
        }
    })
</span><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul></pre></div></div></article><div class="article_copyright" style="margin: 0px 0px -20px; padding: 0px 20px 30px; border-bottom: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); font-size: 14px; color: rgb(120, 128, 135); clear: both; overflow: hidden; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;">转自http://blog.csdn.net/museions/article/details/77824361</div>', type='article', tags='null', categories='', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Thu Oct 12 10:41:07 CST 2017, gtmModified=Thu Oct 12 10:41:07 CST 2017}, ContentDO{cid=112, title=' SpringBoot 在启动时运行代码', slug='null', created=null, modified=null, content='<p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">在Spring boot项目的实际开发中，我们有时需要项目服务启动时加载一些数据或预先完成某些动作。为了解决这样的问题，Spring&nbsp;boot 为我们提供了一个方法：通过实现接口 CommandLineRunner 来实现这样的需求。</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现方式：只需要一个类即可，无需其他配置。&nbsp;</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现步骤：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">1.创建实现接口 CommandLineRunner 的类 MyStartupRunnerTest</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 655px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 723px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">1</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">2.创建实现接口CommandLineRunner 的类 MyStartupRunnerTest2</p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 1094px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 1160px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">2</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest2&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">3.启动Spring boot后查看控制台输出信息，如下所示：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_plain" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[plain]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 563px; top: 1532px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 725px; top: 1597px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest2&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">4.Application启动类代码略。</p><p><span style="color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;">说明：CommandLineRunner接口的运行顺序是依据@Order注解的value由小到大执行，即value值越小优先级越高。</span><br></p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=1, status=1, author='bootdo', gtmCreate=Tue Sep 26 15:18:15 CST 2017, gtmModified=Tue Sep 26 15:18:15 CST 2017}, ContentDO{cid=111, title='Springmvc提交日期类型参数', slug='null', created=null, modified=null, content='<ol style="color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;"><li><p style="margin-bottom: 1.1em; padding: 0px;">背景介绍&nbsp;<br>在springmvc框架中，前台传入到后台的form会经过springmvc自动封装到pojo类中，后台接受的时候可以在参数内直接接受这个java类。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">传参&nbsp;<br>通常情况下，前台的表单的类型诸如int,string等，都会根据pojo中字段的类型自动转换。所以为我们省去了不少麻烦，但很可惜其中不包括日期类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">原因&nbsp;<br>因为日期的格式多种多样，spring自身不适合对其进行封装。好在spring给出了便捷的方法给我们自己转换数据类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">具体实现</p></li></ol><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">在controller层中，加入以下代码段</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@InitBinder</span>
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">public</span> <span class="hljs-keyword" style="color: rgb(0, 0, 136);">void</span> <span class="hljs-title">initBinder</span>(WebDataBinder binder) {
    SimpleDateFormat dateFormat = <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> SimpleDateFormat(<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd"</span>);
    dateFormat.setLenient(<span class="hljs-keyword" style="color: rgb(0, 0, 136);">false</span>);
    binder.registerCustomEditor(Date.class, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> CustomDateEditor(dateFormat, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">true</span>));<span class="hljs-comment" style="color: rgb(136, 0, 0);">//true:允许输入空值，false:不能为空值</span>
}</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">6</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">可以解决这个问题。但是这个时候Date类型的参数是null的话，还是会报错。采用另外一种方式则更好，为null也不会报错，就是把请求参数封装为一个vo类，在对应的类属性上加上注解，这样</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(iso = ISO.DATE_TIME, pattern = <span class="hljs-string" style="color: rgb(0, 136, 0);">"w:yyyy"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date startTime;
或者
<span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(pattern=<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd HH:mm:ss"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date lastLoginDate;</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">另外如果使用验证框架，方法参数这样写(@Valid XxxParam param, BindingResult binding) ，就能直接通过BindingResult得到验证结果了。</p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=1, status=1, author='bootdo', gtmCreate=Mon Sep 25 21:34:51 CST 2017, gtmModified=Mon Sep 25 21:34:51 CST 2017}, ContentDO{cid=110, title='spring boot 图片上传后的图片读取路径在win与linux环境配置的差别', slug='null', created=null, modified=null, content='<ol><li><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">win</p><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"></p><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 296px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///E:/var/spring/uploaded_files/"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><span style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">linux</span><br style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 528px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///var/spring/uploaded_files"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li><li></li></ol></div></li></ol>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=1, status=1, author='bootdo', gtmCreate=Sun Sep 24 09:15:35 CST 2017, gtmModified=Sun Sep 24 09:15:35 CST 2017}, ContentDO{cid=109, title='spring-boot整合ehcache实现缓存机制', slug='null', created=null, modified=null, content='<p><br></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　ehcache提供了多种缓存策略，主要分为内存和磁盘两级，所以无需担心容量问题。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　spring-boot是一个快速的集成框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　由于spring-boot无需任何样板化的配置文件，所以spring-boot集成一些其他框架时会有略微的不同。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　1.spring-boot是一个通过maven管理的jar包的框架，集成ehcache需要的依赖如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
     <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
         <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
      <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>        </pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　具体pom.xml文件如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    xsi:schemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>4.0.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.lclc.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>boot-cache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>0.0.1-SNAPSHOT<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">&lt;!--</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> Inherit defaults from Spring Boot </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">--&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-parent<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>1.1.3.RELEASE<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-web<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-data-jpa<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-thymeleaf<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql-connector-java<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.google.guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>17.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-maven-plugin<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>true<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　2.使用ehcache，我们需要一个ehcache.xml来定义一些cache的属性。</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xsi:noNamespaceSchemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://ehcache.org/ehcache.xsd"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
  updateCheck</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">diskStore </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">path</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="java.io.tmpdir/Tmp_EhCache"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>
           <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">defaultCache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="1000"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="600"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">cache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">name</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="demo"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="100"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="300"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　解释下这个xml文件中的标签。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(1).<span style="color: rgb(128, 0, 0);">diskStore：</span>&nbsp;为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：　　　　<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　　user.home – 用户主目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　 　user.dir&nbsp; – 用户当前工作目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　　　&nbsp; java.io.tmpdir – 默认临时文件路径</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(2).<span style="color: rgb(128, 0, 0);">defaultCache：<span style="color: rgb(0, 0, 0);">默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3).<span style="color: rgb(128, 0, 0);">cache</span>：自定缓存策略，为自定义的缓存策略。参数解释如下：</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　　 cache元素的属性：&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name：缓存名称&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsInMemory：内存中最大缓存对象数&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsOnDisk：硬盘中最大缓存对象数，若是0表示无穷大&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal：true表示对象永不过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk：true表示当内存缓存的对象数目达到了maxElementsInMemory界限后，会把溢出的对象写到硬盘缓存中。注意：如果缓存的对象要写入到硬盘中的话，则该对象必须实现了Serializable接口才行。&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskSpoolBufferSizeMB：磁盘缓存区大小，默认为30MB。每个Cache都应该有自己的一个缓存区。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskPersistent：是否缓存虚拟机重启期数据&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认为120秒&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds： 设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地处于空闲状态&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 timeToLiveSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清除。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。&nbsp;&nbsp;</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　3.将ehcache的管理器暴露给spring的上下文容器，</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　</span></span></p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Configuration
</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">//</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> 标注启动了缓存</span>
<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@EnableCaching
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheConfiguration {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * ehcache 主要的管理器
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean(name </span>= "appEhCacheCacheManager"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager ehCacheCacheManager(EhCacheManagerFactoryBean bean){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager (bean.getObject ());
    }

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 据shared与否的设置,Spring分别通过CacheManager.create()或new CacheManager()方式来创建一个ehcache基地.
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ehCacheManagerFactoryBean(){
        EhCacheManagerFactoryBean cacheManagerFactoryBean </span>= <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ();
        cacheManagerFactoryBean.setConfigLocation (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span> ClassPathResource ("conf/ehcache-app.xml"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">));
        cacheManagerFactoryBean.setShared (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">true</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> cacheManagerFactoryBean;
    }
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Configuration</span>：为spring-boot注解，主要标注此为配置类，优先扫描。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Bean</span>：向spring容器中加入bean。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　至此所有的配置都做好了，通过spring-boot进行集成框架就是这么简单。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　4.使用ehcache</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　使用ehcache主要通过spring的缓存机制，上面我们将spring的缓存机制使用了ehcache进行实现，所以使用方面就完全使用spring缓存机制就行了。<br>　　　　具体牵扯到几个注解：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　@Cacheable：负责将方法的返回值加入到缓存中，参数3<br>　　　　@CacheEvict：负责清除缓存，参数4</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　　参数解释：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的cache的name<br>　　　　key：缓存的key，默认为空，既表示使用方法的参数类型及参数值作为key，支持SpEL<br>　　　　condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　allEntries：CacheEvict参数，true表示清除value中的全部缓存，默认为false</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　不多说，直接上代码：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Service
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span> CacheDemoServiceImpl <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">implements</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheDemoService {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 缓存的key
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String THING_ALL_KEY   = "\"thing_all\""<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * value属性表示使用哪个缓存策略，缓存策略在ehcache.xml
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String DEMO_CACHE_NAME = "demo"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
   
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> create(Thing thing){
        Long id </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> getNextId ();
        thing.setId (id);
        data.put (id, thing);
    } 
      
     @Cacheable(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME,key = "#thing.getId()+'thing'")
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing findById(Long id){
        System.err.println (</span>"没有走缓存！" +<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> id);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> data.get (id);
    }

      @Cacheable(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> List&lt;Thing&gt;<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> findAll(){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Lists.newArrayList (data.values ());
    }
   
   </span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
      @Override
    @CachePut(value </span>= DEMO_CACHE_NAME,key = "#thing.getId()+'thing'"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing update(Thing thing){
        System.out.println (thing);
        data.put (thing.getId (), thing);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> thing;
    }

    @CacheEvict(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> delete(Long id){
        data.remove (id);
    }
   
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　5.只需要通过注解在service层方法上打注解便可以使用缓存，在find**上存入缓存，在delete**,update**上清除缓存。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Sun Sep 24 11:15:18 CST 2017, gtmModified=Sun Sep 24 11:15:18 CST 2017}, ContentDO{cid=108, title='spring boot ehcache整合', slug='null', created=null, modified=null, content='<h3 id="pomxml配置-引入依赖包" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;">pom.xml配置 引入依赖包</h3><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>net.sf.ehcache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>ehcache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li></ul></pre><h3 id="编写配置类设置缓存机制" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;">编写配置类,设置缓存机制</h3><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs java has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Configuration</span>
<span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@EnableCaching</span>
<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> <span class="hljs-class" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">class</span> <span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">CacheConfiguration</span> {</span>

    <span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Bean</span>
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> EhCacheCacheManager <span class="hljs-title" style="margin: 0px; padding: 0px;">ehCacheCacheManager</span>(EhCacheManagerFactoryBean bean) {
        <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">return</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> EhCacheCacheManager(bean.getObject());
    }

    <span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Bean</span>
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> EhCacheManagerFactoryBean <span class="hljs-title" style="margin: 0px; padding: 0px;">ehCacheManagerFactoryBean</span>() {
        EhCacheManagerFactoryBean cacheManagerFactoryBean = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> EhCacheManagerFactoryBean();
        cacheManagerFactoryBean.setConfigLocation(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> ClassPathResource(<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"config/ehcache.xml"</span>));
        cacheManagerFactoryBean.setShared(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">true</span>);
        <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">return</span> cacheManagerFactoryBean;
    }
}</code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">ehcache.xml配置:</p><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-pi" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">ehcache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">xmlns:xsi</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"http://ehcache.org/ehcache.xsd"</span>
    <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">updateCheck</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。
    参数解释如下： user.home – 用户主目录 
    user.dir – 用户当前工作目录 
    java.io.tmpdir – 默认临时文件路径 --&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">diskStore</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">path</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"java.io.tmpdir/Tmp_EhCache"</span> /&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。 --&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- name:缓存名称。 
        maxElementsInMemory:缓存最大数目
        maxElementsOnDisk：硬盘最大缓存个数。 
        eternal:对象是否永久有效，一但设置了，timeout将不起作用。 
        overflowToDisk:是否保存到磁盘，当系统当机时 
        timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使 用，可选属性，默认值是0，也就是可闲置时间无穷大。
        timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅 当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。 
        diskPersistent：是否缓存虚拟机重启期数据Whether the disk store persists between restarts 
        of the Virtual Machine. The default value is false. 
        diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该 有自己的一个缓冲区。 
        diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。 
        memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内 存。默认策略是LRU（最近最少使用）。
        你可以设置为FIFO（先进先出）或是LFU（较少使用）。 
        clearOnFlush：内存数量最大时是否清除。
        memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少 访问次数）。 
         FIFO，first in first out，这个是大家最熟的，先进先出。
         LFU， Less Frequently Used，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面 所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。 
         LRU，Least Recently Used，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地 方来缓存新的元素的时候，
         那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。 --&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">defaultCache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">eternal</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">maxElementsInMemory</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1000"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">overflowToDisk</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">diskPersistent</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>
        <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToIdleSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToLiveSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"600"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">memoryStoreEvictionPolicy</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"LRU"</span> /&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">cache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">name</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"snailAuthCache"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">eternal</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">maxElementsInMemory</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"10000"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">overflowToDisk</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">diskPersistent</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>
        <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToIdleSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToLiveSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">memoryStoreEvictionPolicy</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"LFU"</span> /&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">ehcache</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul><div class="save_code tracking-ad" data-mod="popu_249" style="margin: 0px; padding: 0px; position: absolute; height: 60px; right: 30px; top: 5px; color: rgb(255, 255, 255); cursor: pointer; z-index: 2;"><a style="color: rgb(202, 12, 22); margin: 0px; padding: 0px; outline: none;"><img src="http://static.blog.csdn.net/images/save_snippets.png" style="outline: none; max-width: 100%;"></a></div></pre><h3 id="测试" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;"><br></h3>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Fri Sep 22 17:48:29 CST 2017, gtmModified=Fri Sep 22 17:48:29 CST 2017}, ContentDO{cid=100, title='springboot thymeleaf和shiro 整合——按钮可见性', slug='null', created=null, modified=null, content='<p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">添加依赖</p><pre class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">&lt;<span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">dependency</span>&gt;</span><code class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; display: block; overflow-x: auto; padding: 10px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 4px; font-size: 13px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"> 
   <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">groupId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>com.github.theborakompanioni<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">groupId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>
    <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">artifactId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>thymeleaf-extras-shiro<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">artifactId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>
    <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">version</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span></code>1.2.1<code class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; display: block; overflow-x: auto; padding: 10px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 4px; font-size: 13px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">version</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span> 
<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">dependency</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span></code></pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">&nbsp;</p><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">在shiro的configuration中配置</p><pre class="hljs java" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-meta" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(127, 159, 127);">@Bean</span>
    <span class="hljs-function" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">public</span> ShiroDialect <span class="hljs-title" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">shiroDialect</span><span class="hljs-params" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">()</span> </span>{
        <span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">return</span> <span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">new</span> ShiroDialect();
    }</pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">&nbsp;</p><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">在html中加入xmlns</p><pre class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">&lt;<span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">html</span> <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">lang</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"zh_CN"</span> <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">xmlns:th</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"http://www.thymeleaf.org"</span>
      <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">xmlns:shiro</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"http://www.pollix.at/thymeleaf/shiro"</span>&gt;</span></pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">例子</p><pre class="hljs scala" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;">&lt;button shiro:hasPermission=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"sys:user:add"</span> <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">type</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"button"</span> <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">class</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"btn &nbsp;btn-primary"</span> onclick=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"add()"</span>&gt;
&nbsp;&nbsp; &lt;i <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">class</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"fa fa-plus"</span> aria-hidden=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"true"</span>&gt;&lt;/i&gt;添加
&lt;/button&gt;</pre>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=1, allowPing=null, allowFeed=0, status=1, author='bootdo', gtmCreate=Fri Sep 22 13:24:30 CST 2017, gtmModified=Fri Sep 22 13:24:30 CST 2017}, ContentDO{cid=75, title='基于 Springboot 和 Mybatis 的后台管理系统 BootDo', slug='null', created=null, modified=null, content='<h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">项目介绍</h3><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px 30px; list-style-position: initial; list-style-image: initial; color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><li><p>面向学习型的开源框架，简洁高效，减少过渡封装，展现技术本质</p></li><li><p>Springboot作为基础框架，使用mybatis作为持久层框架</p></li><li><p>使用官方推荐的thymeleaf做为模板引擎，shiro作为安全框架,主流技术，“一网打尽”</p></li><li><p>基于注解的sql写法，零XML，极简配置，一键前后台代码生成</p></li></ul><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">演示地址</span>&nbsp;<a href="http://47.93.239.129/" style="outline: 0px; color: rgb(68, 102, 187);">http://47.93.239.129</a></p><h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">功能简介</h3><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;">1. 用户管理<br>2. 角色管理<br>3. 部门管理<br>4. 菜单管理<br>5. 系统日志<br>6. 代码生成<br>7. 内容管理</p><h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">所用框架</h3><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">前端</span><br>1. Bootstrap<br>2. jQuery<br>3. bootstrap-table<br>4. layer<br>5. jsTree&nbsp;<br>6. summernote<br>7. jquery-validate<br>8. jquery-treegrid</p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">后端</span><br>1. SpringBoot&nbsp;<br>2. MyBatis<br>3. Thymeleaf<br>4. Shiro<br>5. druid</p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">项目截图</span></p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><img height="400" src="https://static.oschina.net/uploads/space/2017/0912/182421_5LaN_3244087.png" width="650" style="border-width: initial; border-style: none; outline: 0px; width: 882px; max-width: -webkit-fit-content; height: auto;"></p>', type='article', tags='null', categories='null', hits=null, commentsNum=null, allowComment=0, allowPing=0, allowFeed=1, status=1, author='bootdo', gtmCreate=Fri Sep 22 14:44:44 CST 2017, gtmModified=Fri Sep 22 14:44:44 CST 2017}];
2018-05-29 20:57:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-05-29 20:57:26 -==> Parameters: 1(Long)
2018-05-29 20:57:26 -<==      Total: 47
2018-05-29 20:57:26 -请求地址 : http://127.0.0.1/common/dict
2018-05-29 20:57:26 -HTTP METHOD : GET
2018-05-29 20:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2018-05-29 20:57:26 -参数 : []
2018-05-29 20:57:26 -耗时 : 0
2018-05-29 20:57:26 -返回值 : java.lang.String>>>>>>	value=[C@95c1f6a;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:57:27 -请求地址 : http://127.0.0.1/common/dict/type
2018-05-29 20:57:27 -HTTP METHOD : GET
2018-05-29 20:57:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2018-05-29 20:57:27 -参数 : []
2018-05-29 20:57:27 -==>  Preparing: select distinct `type` , description from sys_dict 
2018-05-29 20:57:27 -==> Parameters: 
2018-05-29 20:57:27 -请求地址 : http://127.0.0.1/common/dict/list
2018-05-29 20:57:27 -HTTP METHOD : GET
2018-05-29 20:57:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-05-29 20:57:27 -参数 : [{limit=10, offset=0}]
2018-05-29 20:57:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2018-05-29 20:57:27 -==> Parameters: 0(Integer), 10(Integer)
2018-05-29 20:57:27 -<==      Total: 31
2018-05-29 20:57:27 -耗时 : 149
2018-05-29 20:57:27 -返回值 : com.bootdo.common.domain.DictDO>>>>>>	type=del_flag;description=删除标记;
com.bootdo.common.domain.DictDO>>>>>>	type=show_hide;description=显示/隐藏;
com.bootdo.common.domain.DictDO>>>>>>	type=yes_no;description=是/否;
com.bootdo.common.domain.DictDO>>>>>>	type=color;description=颜色值;
com.bootdo.common.domain.DictDO>>>>>>	type=theme;description=主题方案;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_area_type;description=区域类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_office_type;description=机构类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_office_common;description=快捷通用部门;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_office_grade;description=机构等级;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_data_scope;description=数据范围;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_user_type;description=用户类型;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_theme;description=站点主题;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_module;description=栏目模型;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_show_modes;description=展现方式;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_del_flag;description=内容状态;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_posid;description=推荐位;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_guestbook;description=留言板分类;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_leave_type;description=请假类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_log_type;description=日志类型;
com.bootdo.common.domain.DictDO>>>>>>	type=act_type;description=流程类型;
com.bootdo.common.domain.DictDO>>>>>>	type=act_category;description=流程分类;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_category;description=代码生成分类;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_query_type;description=查询方式;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_show_type;description=字段生成方案;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_java_type;description=Java类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sex;description=性别;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_notify_type;description=通知通告类型;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_notify_status;description=通知通告状态;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_notify_read;description=通知通告状态;
com.bootdo.common.domain.DictDO>>>>>>	type=blog_type;description=博客类型;
com.bootdo.common.domain.DictDO>>>>>>	type=hobby;description=爱好;

2018-05-29 20:57:27 -<==      Total: 10
2018-05-29 20:57:27 -==>  Preparing: select count(*) from sys_dict 
2018-05-29 20:57:27 -==> Parameters: 
2018-05-29 20:57:27 -<==      Total: 1
2018-05-29 20:57:27 -耗时 : 143
2018-05-29 20:57:27 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=114;rows=[DictDO{id=122, name='绘画', value='painting', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=121, name='编码', value='code', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=120, name='文章', value='article', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=119, name='交流', value='communication', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=118, name='关于', value='about', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='全url是:/blog/open/page/about', delFlag=''}, DictDO{id=113, name='删除', value='0', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=112, name='草稿', value='0', type='oa_notify_status', description='通知通告状态', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='', delFlag='0'}, DictDO{id=111, name='已读', value='1', type='oa_notify_read', description='通知通告状态', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=110, name='未读', value='0', type='oa_notify_read', description='通知通告状态', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=109, name='发布', value='1', type='oa_notify_status', description='通知通告状态', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}];
2018-05-29 20:57:28 -请求地址 : http://127.0.0.1/common/dict/add
2018-05-29 20:57:28 -HTTP METHOD : GET
2018-05-29 20:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.add
2018-05-29 20:57:28 -参数 : []
2018-05-29 20:57:28 -耗时 : 4
2018-05-29 20:57:28 -返回值 : java.lang.String>>>>>>	value=[C@1a80eb64;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:57:34 -请求地址 : http://127.0.0.1/common/dict/add
2018-05-29 20:57:34 -HTTP METHOD : GET
2018-05-29 20:57:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.add
2018-05-29 20:57:34 -参数 : []
2018-05-29 20:57:34 -耗时 : 0
2018-05-29 20:57:34 -返回值 : java.lang.String>>>>>>	value=[C@1a80eb64;hash=948389484;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:57:57 -请求地址 : http://127.0.0.1/common/dict/edit/122
2018-05-29 20:57:57 -HTTP METHOD : GET
2018-05-29 20:57:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.edit
2018-05-29 20:57:57 -参数 : [122, {}]
2018-05-29 20:57:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict where id = ? 
2018-05-29 20:57:57 -==> Parameters: 122(Long)
2018-05-29 20:57:57 -<==      Total: 1
2018-05-29 20:57:57 -耗时 : 16
2018-05-29 20:57:57 -返回值 : java.lang.String>>>>>>	value=[C@3f2ef678;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:58:07 -请求地址 : http://127.0.0.1/common/dict/list
2018-05-29 20:58:07 -HTTP METHOD : GET
2018-05-29 20:58:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-05-29 20:58:07 -参数 : [{limit=10, offset=0, type=del_flag}]
2018-05-29 20:58:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc limit ?, ? 
2018-05-29 20:58:07 -==> Parameters: del_flag(String), 0(Integer), 10(Integer)
2018-05-29 20:58:07 -<==      Total: 2
2018-05-29 20:58:07 -==>  Preparing: select count(*) from sys_dict WHERE type = ? 
2018-05-29 20:58:07 -==> Parameters: del_flag(String)
2018-05-29 20:58:07 -<==      Total: 1
2018-05-29 20:58:07 -耗时 : 19
2018-05-29 20:58:07 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=2;rows=[DictDO{id=113, name='删除', value='0', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=1, name='正常', value='0', type='del_flag', description='删除标记', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}];
2018-05-29 20:58:12 -请求地址 : http://127.0.0.1/common/dict/list
2018-05-29 20:58:12 -HTTP METHOD : GET
2018-05-29 20:58:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-05-29 20:58:12 -参数 : [{limit=10, offset=0, type=show_hide}]
2018-05-29 20:58:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc limit ?, ? 
2018-05-29 20:58:12 -==> Parameters: show_hide(String), 0(Integer), 10(Integer)
2018-05-29 20:58:12 -<==      Total: 2
2018-05-29 20:58:12 -==>  Preparing: select count(*) from sys_dict WHERE type = ? 
2018-05-29 20:58:12 -==> Parameters: show_hide(String)
2018-05-29 20:58:12 -<==      Total: 1
2018-05-29 20:58:12 -耗时 : 13
2018-05-29 20:58:12 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=2;rows=[DictDO{id=4, name='隐藏', value='0', type='show_hide', description='显示/隐藏', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=3, name='显示', value='1', type='show_hide', description='显示/隐藏', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}];
2018-05-29 20:58:13 -请求地址 : http://127.0.0.1/common/dict/add
2018-05-29 20:58:13 -HTTP METHOD : GET
2018-05-29 20:58:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.add
2018-05-29 20:58:13 -参数 : []
2018-05-29 20:58:13 -耗时 : 0
2018-05-29 20:58:13 -返回值 : java.lang.String>>>>>>	value=[C@1a80eb64;hash=948389484;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:58:39 -请求地址 : http://127.0.0.1/common/dict/save
2018-05-29 20:58:39 -HTTP METHOD : POST
2018-05-29 20:58:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.save
2018-05-29 20:58:39 -参数 : [DictDO{id=null, name='发呆1', value='fd', type='string', description='发呆', sort=2, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='22', delFlag='null'}]
2018-05-29 20:58:39 -==>  Preparing: insert into sys_dict ( `name`, `value`, `type`, `description`, `sort`, `parent_id`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 20:58:39 -==> Parameters: 发呆1(String), fd(String), string(String), 发呆(String), 2(BigDecimal), null, null, null, null, null, 22(String), null
2018-05-29 20:58:39 -<==    Updates: 1
2018-05-29 20:58:39 -耗时 : 252
2018-05-29 20:58:39 -返回值 : {msg=操作成功, code=0}
2018-05-29 20:58:39 -请求地址 : http://127.0.0.1/common/dict/list
2018-05-29 20:58:39 -HTTP METHOD : GET
2018-05-29 20:58:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-05-29 20:58:39 -参数 : [{limit=10, offset=0, type=show_hide}]
2018-05-29 20:58:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc limit ?, ? 
2018-05-29 20:58:39 -==> Parameters: show_hide(String), 0(Integer), 10(Integer)
2018-05-29 20:58:39 -<==      Total: 2
2018-05-29 20:58:39 -==>  Preparing: select count(*) from sys_dict WHERE type = ? 
2018-05-29 20:58:39 -==> Parameters: show_hide(String)
2018-05-29 20:58:39 -<==      Total: 1
2018-05-29 20:58:39 -耗时 : 17
2018-05-29 20:58:39 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=2;rows=[DictDO{id=4, name='隐藏', value='0', type='show_hide', description='显示/隐藏', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=3, name='显示', value='1', type='show_hide', description='显示/隐藏', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}];
2018-05-29 20:58:51 -请求地址 : http://127.0.0.1/common/dict
2018-05-29 20:58:51 -HTTP METHOD : GET
2018-05-29 20:58:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2018-05-29 20:58:51 -参数 : []
2018-05-29 20:58:51 -耗时 : 11
2018-05-29 20:58:51 -返回值 : java.lang.String>>>>>>	value=[C@95c1f6a;hash=-664602805;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:58:51 -请求地址 : http://127.0.0.1/common/dict/type
2018-05-29 20:58:51 -HTTP METHOD : GET
2018-05-29 20:58:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2018-05-29 20:58:51 -参数 : []
2018-05-29 20:58:51 -==>  Preparing: select distinct `type` , description from sys_dict 
2018-05-29 20:58:51 -==> Parameters: 
2018-05-29 20:58:51 -<==      Total: 32
2018-05-29 20:58:51 -耗时 : 33
2018-05-29 20:58:51 -返回值 : com.bootdo.common.domain.DictDO>>>>>>	type=del_flag;description=删除标记;
com.bootdo.common.domain.DictDO>>>>>>	type=show_hide;description=显示/隐藏;
com.bootdo.common.domain.DictDO>>>>>>	type=yes_no;description=是/否;
com.bootdo.common.domain.DictDO>>>>>>	type=color;description=颜色值;
com.bootdo.common.domain.DictDO>>>>>>	type=theme;description=主题方案;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_area_type;description=区域类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_office_type;description=机构类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_office_common;description=快捷通用部门;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_office_grade;description=机构等级;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_data_scope;description=数据范围;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_user_type;description=用户类型;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_theme;description=站点主题;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_module;description=栏目模型;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_show_modes;description=展现方式;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_del_flag;description=内容状态;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_posid;description=推荐位;
com.bootdo.common.domain.DictDO>>>>>>	type=cms_guestbook;description=留言板分类;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_leave_type;description=请假类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sys_log_type;description=日志类型;
com.bootdo.common.domain.DictDO>>>>>>	type=act_type;description=流程类型;
com.bootdo.common.domain.DictDO>>>>>>	type=act_category;description=流程分类;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_category;description=代码生成分类;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_query_type;description=查询方式;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_show_type;description=字段生成方案;
com.bootdo.common.domain.DictDO>>>>>>	type=gen_java_type;description=Java类型;
com.bootdo.common.domain.DictDO>>>>>>	type=sex;description=性别;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_notify_type;description=通知通告类型;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_notify_status;description=通知通告状态;
com.bootdo.common.domain.DictDO>>>>>>	type=oa_notify_read;description=通知通告状态;
com.bootdo.common.domain.DictDO>>>>>>	type=blog_type;description=博客类型;
com.bootdo.common.domain.DictDO>>>>>>	type=hobby;description=爱好;
com.bootdo.common.domain.DictDO>>>>>>	type=string;description=发呆;

2018-05-29 20:58:51 -请求地址 : http://127.0.0.1/common/dict/list
2018-05-29 20:58:51 -HTTP METHOD : GET
2018-05-29 20:58:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-05-29 20:58:51 -参数 : [{limit=10, offset=0}]
2018-05-29 20:58:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2018-05-29 20:58:51 -==> Parameters: 0(Integer), 10(Integer)
2018-05-29 20:58:52 -<==      Total: 10
2018-05-29 20:58:52 -==>  Preparing: select count(*) from sys_dict 
2018-05-29 20:58:52 -==> Parameters: 
2018-05-29 20:58:52 -<==      Total: 1
2018-05-29 20:58:52 -耗时 : 36
2018-05-29 20:58:52 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=115;rows=[DictDO{id=123, name='发呆1', value='fd', type='string', description='发呆', sort=2, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='22', delFlag='null'}, DictDO{id=122, name='绘画', value='painting', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=121, name='编码', value='code', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=120, name='文章', value='article', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=119, name='交流', value='communication', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=118, name='关于', value='about', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='全url是:/blog/open/page/about', delFlag=''}, DictDO{id=113, name='删除', value='0', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag=''}, DictDO{id=112, name='草稿', value='0', type='oa_notify_status', description='通知通告状态', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='', delFlag='0'}, DictDO{id=111, name='已读', value='1', type='oa_notify_read', description='通知通告状态', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=110, name='未读', value='0', type='oa_notify_read', description='通知通告状态', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}];
2018-05-29 20:58:55 -请求地址 : http://127.0.0.1/common/dict/list
2018-05-29 20:58:55 -HTTP METHOD : GET
2018-05-29 20:58:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-05-29 20:58:55 -参数 : [{limit=10, offset=0, type=string}]
2018-05-29 20:58:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc limit ?, ? 
2018-05-29 20:58:55 -==> Parameters: string(String), 0(Integer), 10(Integer)
2018-05-29 20:58:55 -<==      Total: 1
2018-05-29 20:58:55 -==>  Preparing: select count(*) from sys_dict WHERE type = ? 
2018-05-29 20:58:55 -==> Parameters: string(String)
2018-05-29 20:58:55 -<==      Total: 1
2018-05-29 20:58:55 -耗时 : 13
2018-05-29 20:58:55 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=1;rows=[DictDO{id=123, name='发呆1', value='fd', type='string', description='发呆', sort=2, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='22', delFlag='null'}];
2018-05-29 20:59:04 -请求地址 : http://127.0.0.1/common/dict/add/string/%E5%8F%91%E5%91%86
2018-05-29 20:59:04 -HTTP METHOD : GET
2018-05-29 20:59:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.addD
2018-05-29 20:59:04 -参数 : [{}, string, 发呆]
2018-05-29 20:59:04 -耗时 : 5
2018-05-29 20:59:04 -返回值 : java.lang.String>>>>>>	value=[C@1a80eb64;hash=948389484;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:59:17 -请求地址 : http://127.0.0.1/sys/user/
2018-05-29 20:59:17 -HTTP METHOD : GET
2018-05-29 20:59:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-05-29 20:59:17 -参数 : [{}]
2018-05-29 20:59:17 -耗时 : 1
2018-05-29 20:59:17 -返回值 : java.lang.String>>>>>>	value=[C@6b53800e;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 20:59:17 -请求地址 : http://127.0.0.1/sys/user/list
2018-05-29 20:59:17 -HTTP METHOD : GET
2018-05-29 20:59:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-05-29 20:59:17 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-05-29 20:59:17 -请求地址 : http://127.0.0.1/system/sysDept/tree
2018-05-29 20:59:17 -HTTP METHOD : GET
2018-05-29 20:59:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2018-05-29 20:59:17 -参数 : []
2018-05-29 20:59:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-05-29 20:59:17 -==> Parameters: 0(Integer), 10(Integer)
2018-05-29 20:59:17 -<==      Total: 10
2018-05-29 20:59:17 -==>  Preparing: select count(*) from sys_user 
2018-05-29 20:59:17 -==> Parameters: 
2018-05-29 20:59:17 -<==      Total: 1
2018-05-29 20:59:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-05-29 20:59:17 -耗时 : 36
2018-05-29 20:59:17 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=11;rows=[UserDO{userId=136, username='gdg', name='郭德纲', password='3bb1bda86bc02bf6478cd91e42135d2f', deptId=9, deptName='null', email='gdg@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=135, username='wjl', name='王健林', password='3967697dfced162cf6a34080259b83aa', deptId=6, deptName='null', email='wjl@bootod.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=134, username='lyh', name='李彦宏', password='dc26092b3244d9d432863f2738180e19', deptId=8, deptName='null', email='lyh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=131, username='lhc', name='令狐冲', password='d515538e17ecb570ba40344b5618f5d4', deptId=6, deptName='null', email='lhc@bootdo.com', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=130, username='lh', name='鹿晗', password='7924710cd673f68967cde70e188bb097', deptId=9, deptName='null', email='lh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=124, username='wyf', name='吴亦凡', password='e179e6f687bbd57b9d7efc4746c8090a', deptId=6, deptName='null', email='wyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=123, username='zxy', name='张学友', password='35174ba93f5fe7267f1fb3c1bf903781', deptId=6, deptName='null', email='zxy@bootdo', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=36, username='ldh', name='刘德华', password='bfd9394475754fbe45866eba97738c36', deptId=7, deptName='null', email='ldh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=2, username='test', name='临时用户', password='6cf3bb3deba2aadbd41ec9a22511084e', deptId=6, deptName='null', email='test@bootdo.com', mobile='null', status=1, userIdCreate=1, gmtCreate=Mon Aug 14 13:43:05 CST 2017, gmtModified=Mon Aug 14 21:15:36 CST 2017, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}];
2018-05-29 20:59:17 -==> Parameters: 
2018-05-29 20:59:17 -<==      Total: 10
2018-05-29 20:59:17 -耗时 : 83
2018-05-29 20:59:17 -返回值 : com.bootdo.common.domain.Tree>>>>>>	id=-1;text=顶级节点;state={opened=true};checked=true;children=[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}];parentId=;hasParent=false;hasChildren=true;
2018-05-29 21:03:25 -请求地址 : http://127.0.0.1/sys/user/edit/123
2018-05-29 21:03:25 -HTTP METHOD : GET
2018-05-29 21:03:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-05-29 21:03:25 -参数 : [{}, 123]
2018-05-29 21:03:25 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:03:25 -==> Parameters: 123(Long)
2018-05-29 21:03:25 -<==      Total: 1
2018-05-29 21:03:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-05-29 21:03:25 -==> Parameters: 123(Long)
2018-05-29 21:03:25 -<==      Total: 1
2018-05-29 21:03:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-05-29 21:03:25 -==> Parameters: 6(Long)
2018-05-29 21:03:25 -<==      Total: 1
2018-05-29 21:03:25 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:03:25 -==> Parameters: 123(Long)
2018-05-29 21:03:25 -<==      Total: 1
2018-05-29 21:03:25 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-05-29 21:03:25 -==> Parameters: 
2018-05-29 21:03:25 -<==      Total: 2
2018-05-29 21:03:25 -耗时 : 291
2018-05-29 21:03:25 -返回值 : java.lang.String>>>>>>	value=[C@6e5d173b;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:03:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:03:25 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 292(Integer), com.bootdo.system.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-05-29 21:03:25.854(Timestamp)
2018-05-29 21:03:25 -<==    Updates: 1
2018-05-29 21:03:30 -请求地址 : http://127.0.0.1/sys/user/update
2018-05-29 21:03:30 -HTTP METHOD : POST
2018-05-29 21:03:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2018-05-29 21:03:30 -参数 : [UserDO{userId=123, username='zxy', name='张学友', password='null', deptId=6, deptName='研发部', email='zxy@bootdo', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[1], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-05-29 21:03:30 -==>  Preparing: update sys_user SET `username` = ?, `name` = ?, `dept_id` = ?, `email` = ?, `status` = ? where user_id = ? 
2018-05-29 21:03:30 -==> Parameters: zxy(String), 张学友(String), 6(Long), zxy@bootdo(String), 0(Integer), 123(Long)
2018-05-29 21:03:30 -<==    Updates: 1
2018-05-29 21:03:30 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-05-29 21:03:30 -==> Parameters: 123(Long)
2018-05-29 21:03:30 -<==    Updates: 1
2018-05-29 21:03:30 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-05-29 21:03:30 -==> Parameters: 123(Long), 1(Long)
2018-05-29 21:03:30 -<==    Updates: 1
2018-05-29 21:03:30 -耗时 : 156
2018-05-29 21:03:30 -返回值 : {msg=操作成功, code=0}
2018-05-29 21:03:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:03:30 -==> Parameters: 1(Long), admin(String), 更新用户(String), 156(Integer), com.bootdo.system.controller.UserController.update()(String), null, 127.0.0.1(String), 2018-05-29 21:03:30.345(Timestamp)
2018-05-29 21:03:30 -请求地址 : http://127.0.0.1/sys/user/list
2018-05-29 21:03:30 -HTTP METHOD : GET
2018-05-29 21:03:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-05-29 21:03:30 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-05-29 21:03:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-05-29 21:03:30 -==> Parameters: 0(Integer), 10(Integer)
2018-05-29 21:03:30 -<==      Total: 10
2018-05-29 21:03:30 -==>  Preparing: select count(*) from sys_user 
2018-05-29 21:03:30 -==> Parameters: 
2018-05-29 21:03:30 -<==      Total: 1
2018-05-29 21:03:30 -耗时 : 39
2018-05-29 21:03:30 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=11;rows=[UserDO{userId=136, username='gdg', name='郭德纲', password='3bb1bda86bc02bf6478cd91e42135d2f', deptId=9, deptName='null', email='gdg@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=135, username='wjl', name='王健林', password='3967697dfced162cf6a34080259b83aa', deptId=6, deptName='null', email='wjl@bootod.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=134, username='lyh', name='李彦宏', password='dc26092b3244d9d432863f2738180e19', deptId=8, deptName='null', email='lyh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=131, username='lhc', name='令狐冲', password='d515538e17ecb570ba40344b5618f5d4', deptId=6, deptName='null', email='lhc@bootdo.com', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=130, username='lh', name='鹿晗', password='7924710cd673f68967cde70e188bb097', deptId=9, deptName='null', email='lh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=124, username='wyf', name='吴亦凡', password='e179e6f687bbd57b9d7efc4746c8090a', deptId=6, deptName='null', email='wyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=123, username='zxy', name='张学友', password='35174ba93f5fe7267f1fb3c1bf903781', deptId=6, deptName='null', email='zxy@bootdo', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=36, username='ldh', name='刘德华', password='bfd9394475754fbe45866eba97738c36', deptId=7, deptName='null', email='ldh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=2, username='test', name='临时用户', password='6cf3bb3deba2aadbd41ec9a22511084e', deptId=6, deptName='null', email='test@bootdo.com', mobile='null', status=1, userIdCreate=1, gmtCreate=Mon Aug 14 13:43:05 CST 2017, gmtModified=Mon Aug 14 21:15:36 CST 2017, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}];
2018-05-29 21:03:30 -<==    Updates: 1
2018-05-29 21:03:32 -请求地址 : http://127.0.0.1/sys/user/edit/36
2018-05-29 21:03:32 -HTTP METHOD : GET
2018-05-29 21:03:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-05-29 21:03:32 -参数 : [{}, 36]
2018-05-29 21:03:32 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:03:32 -==> Parameters: 36(Long)
2018-05-29 21:03:32 -<==      Total: 1
2018-05-29 21:03:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-05-29 21:03:32 -==> Parameters: 36(Long)
2018-05-29 21:03:32 -<==      Total: 1
2018-05-29 21:03:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-05-29 21:03:32 -==> Parameters: 7(Long)
2018-05-29 21:03:32 -<==      Total: 1
2018-05-29 21:03:32 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:03:32 -==> Parameters: 36(Long)
2018-05-29 21:03:32 -<==      Total: 1
2018-05-29 21:03:32 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-05-29 21:03:32 -==> Parameters: 
2018-05-29 21:03:32 -<==      Total: 2
2018-05-29 21:03:32 -耗时 : 27
2018-05-29 21:03:32 -返回值 : java.lang.String>>>>>>	value=[C@76ff1d06;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:03:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:03:32 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 27(Integer), com.bootdo.system.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-05-29 21:03:32.764(Timestamp)
2018-05-29 21:03:32 -<==    Updates: 1
2018-05-29 21:03:37 -请求地址 : http://127.0.0.1/sys/user/edit/2
2018-05-29 21:03:37 -HTTP METHOD : GET
2018-05-29 21:03:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-05-29 21:03:37 -参数 : [{}, 2]
2018-05-29 21:03:37 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:03:37 -==> Parameters: 2(Long)
2018-05-29 21:03:37 -<==      Total: 1
2018-05-29 21:03:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-05-29 21:03:37 -==> Parameters: 2(Long)
2018-05-29 21:03:37 -<==      Total: 1
2018-05-29 21:03:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-05-29 21:03:37 -==> Parameters: 6(Long)
2018-05-29 21:03:37 -<==      Total: 1
2018-05-29 21:03:37 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:03:37 -==> Parameters: 2(Long)
2018-05-29 21:03:37 -<==      Total: 1
2018-05-29 21:03:37 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-05-29 21:03:37 -==> Parameters: 
2018-05-29 21:03:37 -<==      Total: 2
2018-05-29 21:03:37 -耗时 : 52
2018-05-29 21:03:37 -返回值 : java.lang.String>>>>>>	value=[C@3a6d0dc0;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:03:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:03:37 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 53(Integer), com.bootdo.system.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-05-29 21:03:37.109(Timestamp)
2018-05-29 21:03:37 -<==    Updates: 1
2018-05-29 21:06:23 -请求地址 : http://127.0.0.1/sys/user/batchRemove
2018-05-29 21:06:23 -HTTP METHOD : POST
2018-05-29 21:06:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.batchRemove
2018-05-29 21:06:23 -参数 : [[Ljava.lang.Long;@58afe495]
2018-05-29 21:06:23 -==>  Preparing: delete from sys_user where user_id in ( ? ) 
2018-05-29 21:06:23 -==> Parameters: 136(Long)
2018-05-29 21:06:23 -<==    Updates: 1
2018-05-29 21:06:23 -==>  Preparing: delete from sys_user_role where user_id in ( ? ) 
2018-05-29 21:06:23 -==> Parameters: 136(Long)
2018-05-29 21:06:23 -<==    Updates: 0
2018-05-29 21:06:23 -耗时 : 154
2018-05-29 21:06:23 -返回值 : {msg=操作成功, code=0}
2018-05-29 21:06:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:06:23 -==> Parameters: 1(Long), admin(String), 批量删除用户(String), 154(Integer), com.bootdo.system.controller.UserController.batchRemove()(String), null, 127.0.0.1(String), 2018-05-29 21:06:23.299(Timestamp)
2018-05-29 21:06:23 -请求地址 : http://127.0.0.1/sys/user/list
2018-05-29 21:06:23 -HTTP METHOD : GET
2018-05-29 21:06:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-05-29 21:06:23 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-05-29 21:06:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-05-29 21:06:23 -==> Parameters: 0(Integer), 10(Integer)
2018-05-29 21:06:23 -<==      Total: 10
2018-05-29 21:06:23 -==>  Preparing: select count(*) from sys_user 
2018-05-29 21:06:23 -==> Parameters: 
2018-05-29 21:06:23 -<==      Total: 1
2018-05-29 21:06:23 -耗时 : 15
2018-05-29 21:06:23 -返回值 : com.bootdo.common.utils.PageUtils>>>>>>	total=10;rows=[UserDO{userId=135, username='wjl', name='王健林', password='3967697dfced162cf6a34080259b83aa', deptId=6, deptName='null', email='wjl@bootod.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=134, username='lyh', name='李彦宏', password='dc26092b3244d9d432863f2738180e19', deptId=8, deptName='null', email='lyh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=131, username='lhc', name='令狐冲', password='d515538e17ecb570ba40344b5618f5d4', deptId=6, deptName='null', email='lhc@bootdo.com', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=130, username='lh', name='鹿晗', password='7924710cd673f68967cde70e188bb097', deptId=9, deptName='null', email='lh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=124, username='wyf', name='吴亦凡', password='e179e6f687bbd57b9d7efc4746c8090a', deptId=6, deptName='null', email='wyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=123, username='zxy', name='张学友', password='35174ba93f5fe7267f1fb3c1bf903781', deptId=6, deptName='null', email='zxy@bootdo', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=36, username='ldh', name='刘德华', password='bfd9394475754fbe45866eba97738c36', deptId=7, deptName='null', email='ldh@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=2, username='test', name='临时用户', password='6cf3bb3deba2aadbd41ec9a22511084e', deptId=6, deptName='null', email='test@bootdo.com', mobile='null', status=1, userIdCreate=1, gmtCreate=Mon Aug 14 13:43:05 CST 2017, gmtModified=Mon Aug 14 21:15:36 CST 2017, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}, UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}];
2018-05-29 21:06:23 -<==    Updates: 1
2018-05-29 21:06:31 -请求地址 : http://127.0.0.1/sys/user/edit/2
2018-05-29 21:06:31 -HTTP METHOD : GET
2018-05-29 21:06:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-05-29 21:06:31 -参数 : [{}, 2]
2018-05-29 21:06:31 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:06:31 -==> Parameters: 2(Long)
2018-05-29 21:06:31 -<==      Total: 1
2018-05-29 21:06:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-05-29 21:06:31 -==> Parameters: 2(Long)
2018-05-29 21:06:31 -<==      Total: 1
2018-05-29 21:06:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-05-29 21:06:31 -==> Parameters: 6(Long)
2018-05-29 21:06:31 -<==      Total: 1
2018-05-29 21:06:31 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:06:31 -==> Parameters: 2(Long)
2018-05-29 21:06:31 -<==      Total: 1
2018-05-29 21:06:31 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-05-29 21:06:31 -==> Parameters: 
2018-05-29 21:06:31 -<==      Total: 2
2018-05-29 21:06:31 -耗时 : 31
2018-05-29 21:06:31 -返回值 : java.lang.String>>>>>>	value=[C@67ba5000;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:06:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:06:31 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 31(Integer), com.bootdo.system.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-05-29 21:06:31.833(Timestamp)
2018-05-29 21:06:31 -<==    Updates: 1
2018-05-29 21:06:34 -请求地址 : http://127.0.0.1/sys/user/edit/1
2018-05-29 21:06:34 -HTTP METHOD : GET
2018-05-29 21:06:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-05-29 21:06:34 -参数 : [{}, 1]
2018-05-29 21:06:34 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:06:34 -==> Parameters: 1(Long)
2018-05-29 21:06:34 -<==      Total: 1
2018-05-29 21:06:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-05-29 21:06:34 -==> Parameters: 1(Long)
2018-05-29 21:06:34 -<==      Total: 1
2018-05-29 21:06:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-05-29 21:06:34 -==> Parameters: 6(Long)
2018-05-29 21:06:34 -<==      Total: 1
2018-05-29 21:06:34 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-05-29 21:06:34 -==> Parameters: 1(Long)
2018-05-29 21:06:34 -<==      Total: 1
2018-05-29 21:06:34 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-05-29 21:06:34 -==> Parameters: 
2018-05-29 21:06:34 -<==      Total: 2
2018-05-29 21:06:34 -耗时 : 25
2018-05-29 21:06:34 -返回值 : java.lang.String>>>>>>	value=[C@7a3048a3;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:06:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:06:34 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 25(Integer), com.bootdo.system.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-05-29 21:06:34.941(Timestamp)
2018-05-29 21:06:35 -<==    Updates: 1
2018-05-29 21:06:41 -请求地址 : http://127.0.0.1/sys/role
2018-05-29 21:06:41 -HTTP METHOD : GET
2018-05-29 21:06:41 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-05-29 21:06:41 -参数 : []
2018-05-29 21:06:41 -耗时 : 1
2018-05-29 21:06:41 -返回值 : java.lang.String>>>>>>	value=[C@2e5d893b;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:06:41 -请求地址 : http://127.0.0.1/sys/role/list
2018-05-29 21:06:41 -HTTP METHOD : GET
2018-05-29 21:06:41 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-05-29 21:06:41 -参数 : []
2018-05-29 21:06:41 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-05-29 21:06:41 -==> Parameters: 
2018-05-29 21:06:41 -<==      Total: 2
2018-05-29 21:06:41 -耗时 : 4
2018-05-29 21:06:41 -返回值 : com.bootdo.system.domain.RoleDO>>>>>>	roleId=59;roleName=普通用户;remark=基本用户权限;
com.bootdo.system.domain.RoleDO>>>>>>	roleId=1;roleName=超级用户角色;roleSign=admin;remark=拥有最高权限;userIdCreate=2;gmtCreate=2017-08-12 00:43:52.0;gmtModified=2017-08-12 19:14:59.0;

2018-05-29 21:06:54 -请求地址 : http://127.0.0.1/sys/role/edit/59
2018-05-29 21:06:54 -HTTP METHOD : GET
2018-05-29 21:06:54 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-05-29 21:06:54 -参数 : [59, {}]
2018-05-29 21:06:54 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-05-29 21:06:54 -==> Parameters: 59(Long)
2018-05-29 21:06:54 -<==      Total: 1
2018-05-29 21:06:54 -耗时 : 5
2018-05-29 21:06:54 -返回值 : java.lang.String>>>>>>	value=[C@50053c94;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:06:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-05-29 21:06:54 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 8(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2018-05-29 21:06:54.787(Timestamp)
2018-05-29 21:06:54 -<==    Updates: 1
2018-05-29 21:06:55 -请求地址 : http://127.0.0.1/sys/menu/tree/59
2018-05-29 21:06:55 -HTTP METHOD : GET
2018-05-29 21:06:55 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-05-29 21:06:55 -参数 : [59]
2018-05-29 21:06:55 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-05-29 21:06:55 -==> Parameters: 
2018-05-29 21:06:55 -<==      Total: 62
2018-05-29 21:06:55 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-05-29 21:06:55 -==> Parameters: 59(Long)
2018-05-29 21:06:55 -<==      Total: 52
2018-05-29 21:06:55 -耗时 : 27
2018-05-29 21:06:55 -返回值 : com.bootdo.common.domain.Tree>>>>>>	id=-1;text=顶级节点;state={opened=true};checked=true;children=[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"图表管理"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","state":{"selected":true},"text":"待办任务"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"99","parentId":"96","state":{"selected":true},"text":"所有权限"}],"hasChildren":true,"hasParent":true,"id":"96","parentId":"93","state":{"selected":false},"text":"流程管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"95","parentId":"94","state":{"selected":true},"text":"全部权限"}],"hasChildren":true,"hasParent":true,"id":"94","parentId":"93","state":{"selected":false},"text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","state":{"selected":false},"text":"工作流程"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","state":{"selected":false},"text":"swagger"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":false},"text":"计划任务"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"}, {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","state":{"selected":true},"text":"发布文章"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"60","parentId":"50","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"59","parentId":"50","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"58","parentId":"50","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"51","parentId":"50","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"50","parentId":"49","state":{"selected":false},"text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","state":{"selected":false},"text":"博客管理"}, {"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"部门管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}, {"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}];parentId=;hasParent=false;hasChildren=true;
2018-05-29 21:07:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-05-29 21:07:34 -==> Parameters: 1(Long)
2018-05-29 21:07:34 -<==      Total: 47
2018-05-29 21:07:34 -请求地址 : http://127.0.0.1/sys/menu/
2018-05-29 21:07:34 -HTTP METHOD : GET
2018-05-29 21:07:34 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2018-05-29 21:07:34 -参数 : [{}]
2018-05-29 21:07:34 -耗时 : 1
2018-05-29 21:07:34 -返回值 : java.lang.String>>>>>>	value=[C@74e41c25;hash=0;serialPersistentFields=[Ljava.io.ObjectStreamField;@6daebd64;CASE_INSENSITIVE_ORDER=java.lang.String$CaseInsensitiveComparator@6c192c3a;
2018-05-29 21:07:35 -请求地址 : http://127.0.0.1/sys/menu/list
2018-05-29 21:07:35 -HTTP METHOD : GET
2018-05-29 21:07:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-05-29 21:07:35 -参数 : [{sort=order_num}]
2018-05-29 21:07:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-05-29 21:07:35 -==> Parameters: 
2018-05-29 21:07:35 -<==      Total: 62
2018-05-29 21:07:35 -耗时 : 52
2018-05-29 21:07:35 -返回值 : com.bootdo.system.domain.MenuDO>>>>>>	menuId=51;parentId=50;name=新增;url=;perms=blog:bContent:add;type=2;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=55;parentId=7;name=编辑;url=;perms=sys:role:edit;type=2;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=56;parentId=7;name=删除;url=;perms=sys:role:remove;type=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=58;parentId=50;name=编辑;url=;perms=blog:bContent:edit;type=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=59;parentId=50;name=删除;url=;perms=blog:bContent:remove;type=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=60;parentId=50;name=批量删除;url=;perms=blog:bContent:batchRemove;type=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=61;parentId=2;name=批量删除;url=;perms=sys:menu:batchRemove;type=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=62;parentId=7;name=批量删除;url=;perms=sys:role:batchRemove;type=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=85;parentId=84;name=通知公告;url=oa/notify;perms=oa:notify:notify;type=1;icon=fa fa-pencil-square;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=88;parentId=85;name=删除;url=oa/notify/remove;perms=oa:notify:remove;type=2;icon=fa fa-minus;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=89;parentId=85;name=批量删除;url=oa/notify/batchRemove;perms=oa:notify:batchRemove;type=2;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=90;parentId=84;name=我的通知;url=oa/notify/selfNotify;perms=;type=1;icon=fa fa-envelope-square;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=92;parentId=91;name=在线用户;url=sys/online;perms=;type=1;icon=fa fa-user;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=94;parentId=93;name=模型管理;url=activiti/model;perms=;type=1;icon=fa fa-sort-amount-asc;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=95;parentId=94;name=全部权限;url=;perms=activiti:model;type=2;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=96;parentId=93;name=流程管理;url=activiti/process;perms=;type=1;icon=fa fa-flag;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=98;parentId=97;name=百度chart;url=/chart/graph_echarts.html;perms=;type=1;icon=fa fa-area-chart;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=99;parentId=96;name=所有权限;url=;perms=act:process;type=2;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=101;parentId=93;name=待办任务;url=activiti/task/todo;perms=;type=1;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=104;parentId=77;name=swagger;url=/swagger-ui.html;perms=;type=1;icon=;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=1;parentId=0;name=基础管理;url=;perms=;type=0;icon=fa fa-bars;orderNum=0;gmtCreate=Wed Aug 09 22:49:47 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=6;parentId=3;name=用户管理;url=sys/user/;perms=sys:user:user;type=1;icon=fa fa-user;orderNum=0;gmtCreate=Thu Aug 10 14:12:11 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=12;parentId=6;name=新增;url=;perms=sys:user:add;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 10:51:35 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=13;parentId=6;name=编辑;url=;perms=sys:user:edit;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 10:52:06 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=14;parentId=6;name=删除;perms=sys:user:remove;type=2;orderNum=0;gmtCreate=Mon Aug 14 10:52:24 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=15;parentId=7;name=新增;url=;perms=sys:role:add;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 10:56:37 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=20;parentId=2;name=新增;url=;perms=sys:menu:add;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 10:59:32 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=21;parentId=2;name=编辑;url=;perms=sys:menu:edit;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 10:59:56 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=22;parentId=2;name=删除;url=;perms=sys:menu:remove;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 11:00:26 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=24;parentId=6;name=批量删除;url=;perms=sys:user:batchRemove;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 17:27:18 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=25;parentId=6;name=停用;perms=sys:user:disable;type=2;orderNum=0;gmtCreate=Mon Aug 14 17:27:43 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=26;parentId=6;name=重置密码;url=;perms=sys:user:resetPwd;type=2;icon=;orderNum=0;gmtCreate=Mon Aug 14 17:28:34 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=27;parentId=91;name=系统日志;url=common/log;perms=common:log;type=1;icon=fa fa-warning;orderNum=0;gmtCreate=Mon Aug 14 22:11:53 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=28;parentId=27;name=刷新;perms=sys:log:list;type=2;orderNum=0;gmtCreate=Mon Aug 14 22:30:22 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=29;parentId=27;name=删除;perms=sys:log:remove;type=2;orderNum=0;gmtCreate=Mon Aug 14 22:30:43 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=30;parentId=27;name=清空;perms=sys:log:clear;type=2;orderNum=0;gmtCreate=Mon Aug 14 22:31:02 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=68;parentId=49;name=发布文章;url=/blog/bContent/add;perms=blog:bContent:add;type=1;icon=fa fa-edit;orderNum=0;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=3;parentId=0;name=系统管理;type=0;icon=fa fa-desktop;orderNum=1;gmtCreate=Wed Aug 09 23:06:55 CST 2017;gmtModified=Mon Aug 14 14:13:43 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=7;parentId=3;name=角色管理;url=sys/role;perms=sys:role:role;type=1;icon=fa fa-paw;orderNum=1;gmtCreate=Thu Aug 10 14:13:19 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=50;parentId=49;name=文章列表;url=blog/bContent;perms=blog:bContent:bContent;type=1;icon=fa fa-file-image-o;orderNum=1;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=57;parentId=91;name=运行监控;url=/druid/index.html;perms=;type=1;icon=fa fa-caret-square-o-right;orderNum=1;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=74;parentId=73;name=增加;url=/system/sysDept/add;perms=system:sysDept:add;type=2;orderNum=1;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=78;parentId=1;name=数据字典;url=/common/dict;perms=common:dict:dict;type=1;icon=fa fa-book;orderNum=1;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=86;parentId=85;name=新增;url=oa/notify/add;perms=oa:notify:add;type=2;icon=fa fa-plus;orderNum=1;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=2;parentId=3;name=系统菜单;url=sys/menu/;perms=sys:menu:menu;type=1;icon=fa fa-th-list;orderNum=2;gmtCreate=Wed Aug 09 22:55:15 CST 2017;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=71;parentId=1;name=文件管理;url=/common/sysFile;perms=common:sysFile:sysFile;type=1;icon=fa fa-folder-open;orderNum=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=75;parentId=73;name=刪除;url=system/sysDept/remove;perms=system:sysDept:remove;type=2;orderNum=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=79;parentId=78;name=增加;url=/common/dict/add;perms=common:dict:add;type=2;orderNum=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=80;parentId=78;name=编辑;url=/common/dict/edit;perms=common:dict:edit;type=2;orderNum=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=87;parentId=85;name=编辑;url=oa/notify/edit;perms=oa:notify:edit;type=2;icon=fa fa-pencil-square-o;orderNum=2;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=48;parentId=77;name=代码生成;url=common/generator;perms=common:generator;type=1;icon=fa fa-code;orderNum=3;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=73;parentId=3;name=部门管理;url=/system/sysDept;perms=system:sysDept:sysDept;type=1;icon=fa fa-users;orderNum=3;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=76;parentId=73;name=编辑;url=/system/sysDept/edit;perms=system:sysDept:edit;type=2;orderNum=3;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=81;parentId=78;name=删除;url=/common/dict/remove;perms=common:dict:remove;type=2;icon=;orderNum=3;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=72;parentId=77;name=计划任务;url=common/job;perms=common:taskScheduleJob;type=1;icon=fa fa-hourglass-1;orderNum=4;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=77;parentId=0;name=系统工具;url=;perms=;type=0;icon=fa fa-gear;orderNum=4;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=83;parentId=78;name=批量删除;url=/common/dict/batchRemove;perms=common:dict:batchRemove;type=2;icon=;orderNum=4;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=84;parentId=0;name=办公管理;url=;perms=;type=0;icon=fa fa-laptop;orderNum=5;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=91;parentId=0;name=系统监控;url=;perms=;type=0;icon=fa fa-video-camera;orderNum=5;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=49;parentId=0;name=博客管理;url=;perms=;type=0;icon=fa fa-rss;orderNum=6;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=93;parentId=0;name=工作流程;url=;perms=;type=0;icon=fa fa-print;orderNum=6;
com.bootdo.system.domain.MenuDO>>>>>>	menuId=97;parentId=0;name=图表管理;url=;perms=;type=0;icon=fa fa-bar-chart;orderNum=7;

2018-05-29 21:10:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 442]
2018-05-29 21:40:09 -Validating all active sessions...
2018-05-29 21:40:09 -Finished session validation.  [1] sessions were stopped.
2018-05-29 21:40:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 875]
2018-05-29 22:10:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1308]
